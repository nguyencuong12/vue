import { DragOptions, Client, OnDrag } from "./types";
declare class Dragger {
    options: DragOptions;
    private flag;
    private pinchFlag;
    private datas;
    private isDrag;
    private isPinch;
    private isMouse;
    private isTouch;
    private prevClients;
    private startClients;
    private movement;
    private startPinchClients;
    private startDistance;
    private customDist;
    private targets;
    private prevTime;
    private isDouble;
    private startRotate;
    constructor(targets: Array<Element | Window> | Element | Window, options?: DragOptions);
    isDragging(): boolean;
    isFlag(): boolean;
    isPinchFlag(): boolean;
    isPinching(): boolean;
    scrollBy(deltaX: number, deltaY: number, e: any, isCallDrag?: boolean): void;
    onDragStart: (e: any, isTrusted?: boolean) => false | undefined;
    onDrag: (e: any, isScroll?: boolean | undefined) => void;
    move([deltaX, deltaY]: number[], inputEvent: any, clients?: Client[]): OnDrag | undefined;
    onDragEnd: (e: any) => void;
    onPinchStart(e: TouchEvent): void;
    onPinch(e: TouchEvent, clients: Client[]): void;
    onPinchEnd(e: TouchEvent): void;
    triggerDragStart(e: any): void;
    unset(): void;
    private initDrag;
}
export default Dragger;
