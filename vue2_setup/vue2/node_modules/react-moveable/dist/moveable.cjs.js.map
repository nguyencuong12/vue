{"version":3,"file":"moveable.cjs.js","sources":["../src/react-moveable/consts.ts","../src/react-moveable/utils.ts","../src/react-moveable/ables/Pinchable.ts","../src/react-moveable/gesto/CustomGesto.ts","../src/react-moveable/groupUtils.ts","../src/react-moveable/gesto/GestoUtils.ts","../src/react-moveable/ables/snappable/snap.ts","../src/react-moveable/ables/snappable/innerBounds.ts","../src/react-moveable/ables/snappable/bounds.ts","../src/react-moveable/ables/Snappable.tsx","../src/react-moveable/ables/Draggable.tsx","../src/react-moveable/ables/Rotatable.tsx","../src/react-moveable/renderDirection.tsx","../src/react-moveable/ables/Resizable.ts","../src/react-moveable/ables/Scalable.ts","../src/react-moveable/ables/Warpable.tsx","../src/react-moveable/classNames.ts","../src/react-moveable/ables/DragArea.tsx","../src/react-moveable/ables/Origin.tsx","../src/react-moveable/ables/Scrollable.ts","../src/react-moveable/ables/Default.ts","../src/react-moveable/ables/Padding.tsx","../src/react-moveable/ables/roundable/borderRadius.tsx","../src/react-moveable/ables/Clippable.tsx","../src/react-moveable/ables/OriginDraggable.tsx","../src/react-moveable/ables/Roundable.tsx","../src/react-moveable/ables/BeforeRenderable.ts","../src/react-moveable/ables/Renderable.ts","../src/react-moveable/gesto/getAbleGesto.ts","../src/react-moveable/EventManager.ts","../src/react-moveable/MoveableManager.tsx","../src/react-moveable/ables/Groupable.tsx","../src/react-moveable/ables/Clickable.ts","../src/react-moveable/ables/edgeDraggable.tsx","../src/react-moveable/ables/IndividualGroupable.tsx","../src/react-moveable/ables/consts.ts","../src/react-moveable/MoveableGroup.tsx","../src/react-moveable/MoveableIndividualGroup.tsx","../src/react-moveable/InitialMoveable.tsx","../src/react-moveable/Moveable.tsx","../src/react-moveable/makeMoveable.ts","../src/react-moveable/index.umd.ts"],"sourcesContent":["import getAgent from \"@egjs/agent\";\nimport { IObject } from \"@daybrush/utils\";\nimport { MoveableInterface } from \"./types\";\n\nfunction getSVGCursor(scale: number, degree: number) {\n    return `data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${32 * scale}px\" height=\"${32 * scale}px\" viewBox=\"0 0 32 32\" ><path d=\"M 16,5 L 12,10 L 14.5,10 L 14.5,22 L 12,22 L 16,27 L 20,22 L 17.5,22 L 17.5,10 L 20, 10 L 16,5 Z\" stroke-linejoin=\"round\" stroke-width=\"1.2\" fill=\"black\" stroke=\"white\" style=\"transform:rotate(${degree}deg);transform-origin: 16px 16px\"></path></svg>`;\n}\nfunction getCursorCSS(degree: number) {\n    const x1 = getSVGCursor(1, degree);\n    const x2 = getSVGCursor(2, degree);\n    const degree45 = (Math.round(degree / 45) * 45) % 180;\n    const defaultCursor\n        = degree45 === 135\n        ? \"nwse-resize\"\n        : degree45 === 45\n        ? \"nesw-resize\"\n        : degree45 === 90\n        ? \"ew-resize\"\n        : \"ns-resize\"; // 135\n\n    // tslint:disable-next-line: max-line-length\n    return `cursor:${defaultCursor};cursor: url('${x1}') 16 16, ${defaultCursor};cursor: -webkit-image-set(url('${x1}') 1x, url('${x2}') 2x) 16 16, ${defaultCursor};`;\n}\n\nexport const agent = getAgent();\nexport const IS_WEBKIT = agent.browser.webkit;\nexport const IS_WEBKIT605 = IS_WEBKIT && (() => {\n    const res = /applewebkit\\/([^\\s]+)/g.exec(navigator.userAgent.toLowerCase());\n\n    return res ? parseFloat(res[1]) < 605 : false;\n})();\nexport const PREFIX = \"moveable-\";\nexport const MOVEABLE_CSS = `\n{\n\tposition: absolute;\n\twidth: 1px;\n\theight: 1px;\n\tleft: 0;\n\ttop: 0;\n    z-index: 3000;\n    --moveable-color: #4af;\n    --zoom: 1;\n    --zoompx: 1px;\n    will-change: transform;\n}\n.control-box {\n    z-index: 0;\n}\n.line, .control {\n\tleft: 0;\n    top: 0;\n    will-change: transform;\n}\n.control {\n\tposition: absolute;\n\twidth: 14px;\n\theight: 14px;\n\tborder-radius: 50%;\n\tborder: 2px solid #fff;\n\tbox-sizing: border-box;\n    background: #4af;\n    background: var(--moveable-color);\n\tmargin-top: -7px;\n    margin-left: -7px;\n    border: 2px solid #fff;\n    z-index: 10;\n}\n.padding {\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    width: 100px;\n    height: 100px;\n    transform-origin: 0 0;\n}\n.line {\n\tposition: absolute;\n\twidth: 1px;\n    height: 1px;\n    background: #4af;\n    background: var(--moveable-color);\n\ttransform-origin: 0px 50%;\n}\n.line.dashed {\n    box-sizing: border-box;\n    background: transparent;\n}\n.line.dashed.horizontal {\n    border-top: 1px dashed #4af;\n    border-top-color: #4af;\n    border-top-color: var(--moveable-color);\n}\n.line.dashed.vertical {\n    border-left: 1px dashed #4af;\n    border-left-color: #4af;\n    border-left-color: var(--moveable-color);\n}\n.line.vertical {\n    transform: translateX(-50%);\n}\n.line.horizontal {\n    transform: translateY(-50%);\n}\n.line.vertical.bold {\n    width: 2px;\n}\n.line.horizontal.bold {\n    height: 2px;\n}\n\n.control.origin {\n\tborder-color: #f55;\n\tbackground: #fff;\n\twidth: 12px;\n\theight: 12px;\n\tmargin-top: -6px;\n    margin-left: -6px;\n\tpointer-events: none;\n}\n${[0, 15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165].map(degree => `\n.direction[data-rotation=\"${degree}\"] {\n\t${getCursorCSS(degree)}\n}\n`).join(\"\\n\")}\n.group {\n    z-index: -1;\n}\n.area {\n    position: absolute;\n}\n.area-pieces {\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: none;\n}\n.area.avoid, .area.pass {\n    pointer-events: none;\n}\n.area.avoid+.area-pieces {\n    display: block;\n}\n.area-piece {\n    position: absolute;\n}\n\n${IS_WEBKIT605 ? `:global svg *:before {\n\tcontent:\"\";\n\ttransform-origin: inherit;\n}` : \"\"}\n`;\nexport const DRAGGER_EVENTS = [\"dragstart\", \"drag\", \"dragend\", \"pinchstart\", \"pinch\", \"pinchend\"];\n\nexport const NEARBY_POS = [\n    [0, 1, 2],\n    [1, 0, 3],\n    [2, 0, 3],\n    [3, 1, 2],\n];\n\nexport const TINY_NUM = 0.0000001;\nexport const MIN_SCALE = 0.000000001;\nexport const MAX_NUM = Math.pow(10, 10);\nexport const MIN_NUM = -MAX_NUM;\n\nexport const DIRECTIONS = [\"n\", \"w\", \"s\", \"e\", \"nw\", \"ne\", \"sw\", \"se\"];\n\nexport const DIRECTION_INDEXES: IObject<number[]> = {\n    n: [0, 1],\n    s: [2, 3],\n    w: [2, 0],\n    e: [1, 3],\n    nw: [0],\n    ne: [1],\n    sw: [2],\n    se: [3],\n};\nexport const DIRECTION_ROTATIONS: IObject<number> = {\n    n: 0,\n    s: 180,\n    w: 270,\n    e: 90,\n    nw: 315,\n    ne: 45,\n    sw: 225,\n    se: 135,\n};\n\nexport const MOVEABLE_METHODS: Array<keyof MoveableInterface> = [\n    \"isMoveableElement\",\n    \"updateRect\",\n    \"updateTarget\",\n    \"destroy\",\n    \"dragStart\",\n    \"isInside\",\n    \"hitTest\",\n    \"setState\",\n    \"getRect\",\n    \"request\",\n    \"isDragging\",\n    \"getManager\",\n];\n","import { PREFIX, IS_WEBKIT605, TINY_NUM, IS_WEBKIT } from \"./consts\";\nimport { prefixNames } from \"framework-utils\";\nimport { splitBracket, isUndefined, isObject, splitUnit, IObject, hasClass, isArray, isString, getRad, getShapeDirection, isFunction } from \"@daybrush/utils\";\nimport {\n    multiply, invert,\n    convertDimension, createIdentityMatrix,\n    createOriginMatrix, convertPositionMatrix, calculate,\n    multiplies,\n    minus,\n    getOrigin,\n    createScaleMatrix,\n    plus,\n    ignoreDimension,\n    convertCSStoMatrix,\n    convertMatrixtoCSS,\n} from \"@scena/matrix\";\nimport {\n    MoveableManagerState, Able, MoveableClientRect,\n    MoveableProps, ControlPose, InvertTypes, ArrayFormat, MoveableRefType\n} from \"./types\";\nimport { parse, toMat } from \"css-to-mat\";\n\nexport function round(num: number) {\n    return Math.round(num);\n}\nexport function multiply2(pos1: number[], pos2: number[]) {\n    return [\n        pos1[0] * pos2[0],\n        pos1[1] * pos2[1],\n    ];\n}\nexport function prefix(...classNames: string[]) {\n    return prefixNames(PREFIX, ...classNames);\n}\n\nexport function createIdentityMatrix3() {\n    return createIdentityMatrix(3);\n}\n\nexport function getTransformMatrix(transform: string | number[]) {\n    if (!transform || transform === \"none\") {\n        return [1, 0, 0, 1, 0, 0];\n\n    }\n    if (isObject(transform)) {\n        return transform;\n    }\n    const value = splitBracket(transform).value!;\n    return value.split(/s*,\\s*/g).map(v => parseFloat(v));\n}\nexport function getAbsoluteMatrix(matrix: number[], n: number, origin: number[]) {\n    return multiplies(\n        n,\n        createOriginMatrix(origin, n),\n        matrix,\n        createOriginMatrix(origin.map(a => -a), n),\n    );\n}\nexport function measureSVGSize(el: SVGElement, unit: string, isHorizontal: boolean) {\n    if (unit === \"%\") {\n        const viewBox = getSVGViewBox(el.ownerSVGElement!);\n\n        return viewBox[isHorizontal ? \"width\" : \"height\"] / 100;\n    }\n    return 1;\n}\nexport function getBeforeTransformOrigin(el: SVGElement) {\n    const relativeOrigin = getTransformOrigin(getComputedStyle(el, \":before\"));\n\n    return relativeOrigin.map((o, i) => {\n        const { value, unit } = splitUnit(o);\n\n        return value * measureSVGSize(el, unit, i === 0);\n    });\n}\nexport function getTransformOrigin(style: CSSStyleDeclaration) {\n    const transformOrigin = style.transformOrigin;\n\n    return transformOrigin ? transformOrigin.split(\" \") : [\"0\", \"0\"];\n}\nexport function getOffsetInfo(\n    el: SVGElement | HTMLElement | null | undefined,\n    lastParent: SVGElement | HTMLElement | null | undefined,\n    isParent?: boolean,\n) {\n    const body = document.body;\n    let target = !el || isParent ? el : el.parentElement;\n    let isEnd = false;\n    let position = \"relative\";\n\n    while (target && target !== body) {\n        if (lastParent === target) {\n            isEnd = true;\n        }\n        const style = getComputedStyle(target);\n        const transform = style.transform;\n        position = style.position!;\n\n        if (position !== \"static\" || (transform && transform !== \"none\")) {\n            break;\n        }\n        target = target.parentElement;\n        position = \"relative\";\n    }\n    return {\n        isStatic: position === \"static\",\n        isEnd: isEnd || !target || target === body,\n        offsetParent: target as HTMLElement || body,\n    };\n\n}\nexport function getOffsetPosInfo(\n    el: HTMLElement | SVGElement,\n    container: SVGElement | HTMLElement | null | undefined,\n    style: CSSStyleDeclaration,\n    isFixed: boolean,\n) {\n    const tagName = el.tagName.toLowerCase();\n    let offsetLeft = (el as HTMLElement).offsetLeft;\n    let offsetTop = (el as HTMLElement).offsetTop;\n\n    if (isFixed) {\n        const containerClientRect = (container || document.documentElement).getBoundingClientRect();\n\n        offsetLeft -= containerClientRect.left;\n        offsetTop -= containerClientRect.top;\n    }\n    // svg\n    const isSVG = isUndefined(offsetLeft);\n    let hasOffset = !isSVG;\n    let origin: number[];\n    let targetOrigin: number[];\n    // inner svg element\n    if (!hasOffset && tagName !== \"svg\") {\n        origin = IS_WEBKIT605\n            ? getBeforeTransformOrigin(el as SVGElement)\n            : getTransformOrigin(style).map(pos => parseFloat(pos));\n\n        targetOrigin = origin.slice();\n        hasOffset = true;\n\n        if (tagName === \"g\") {\n            offsetLeft = 0;\n            offsetTop = 0;\n        } else {\n            [\n                offsetLeft, offsetTop, origin[0], origin[1],\n            ] = getSVGGraphicsOffset(el as SVGGraphicsElement, origin);\n        }\n    } else {\n        origin = getTransformOrigin(style).map(pos => parseFloat(pos));\n        targetOrigin = origin.slice();\n    }\n    return {\n        isSVG,\n        hasOffset,\n        offset: [offsetLeft || 0, offsetTop || 0],\n        origin,\n        targetOrigin,\n    };\n}\nexport function getBodyOffset(\n    el: HTMLElement| SVGElement,\n    isSVG: boolean,\n    style: CSSStyleDeclaration = window.getComputedStyle(el),\n) {\n    const bodyStyle = window.getComputedStyle(document.body);\n    const bodyPosition = bodyStyle.position;\n    if (!isSVG && (!bodyPosition || bodyPosition === \"static\")) {\n        return [0, 0];\n    }\n\n    let marginLeft = parseInt(bodyStyle.marginLeft, 10);\n    let marginTop = parseInt(bodyStyle.marginTop, 10);\n\n    if (style.position === \"absolute\") {\n        if (style.top !== \"auto\" || style.bottom !== \"auto\") {\n            marginTop = 0;\n        }\n        if (style.left !== \"auto\" || style.right !== \"auto\") {\n            marginLeft = 0;\n        }\n    }\n\n    return [marginLeft, marginTop];\n}\nexport function getMatrixStackInfo(\n    target: SVGElement | HTMLElement,\n    container?: SVGElement | HTMLElement | null,\n    // prevMatrix?: number[],\n) {\n    let el: SVGElement | HTMLElement | null = target;\n    const matrixes: number[][] = [];\n    let isEnd = false;\n    let is3d = false;\n    let n = 3;\n    let transformOrigin!: number[];\n    let targetTransformOrigin!: number[];\n    let targetMatrix!: number[];\n\n    const offsetContainer = getOffsetInfo(container, container, true).offsetParent;\n\n    // if (prevMatrix) {\n    //     isEnd = target === container;\n    //     if (prevMatrix.length > 10) {\n    //         is3d = true;\n    //         n = 4;\n    //     }\n    //     container = target.parentElement;\n    // }\n\n    while (el && !isEnd) {\n        const style: CSSStyleDeclaration = getComputedStyle(el);\n        const tagName = el.tagName.toLowerCase();\n        const position = style.position;\n        const isFixed = position === \"fixed\";\n        let matrix: number[] = convertCSStoMatrix(getTransformMatrix(style.transform!));\n\n        // convert 3 to 4\n        const length = matrix.length;\n        if (!is3d && length === 16) {\n            is3d = true;\n            n = 4;\n            const matrixesLength = matrixes.length;\n\n            for (let i = 0; i < matrixesLength; ++i) {\n                matrixes[i] = convertDimension(matrixes[i], 3, 4);\n            }\n        }\n        if (is3d && length === 9) {\n            matrix = convertDimension(matrix, 3, 4);\n        }\n        const {\n            hasOffset,\n            isSVG,\n            origin,\n            targetOrigin,\n            offset: offsetPos,\n        } = getOffsetPosInfo(el, container, style, isFixed);\n        let [\n            offsetLeft,\n            offsetTop,\n        ] = offsetPos;\n        if (tagName === \"svg\" && targetMatrix) {\n            matrixes.push(\n                // scale matrix for svg's SVGElements.\n                getSVGMatrix(el as SVGSVGElement, n),\n                createIdentityMatrix(n),\n            );\n        }\n        const {\n            offsetParent,\n            isEnd: isOffsetEnd,\n            isStatic,\n        } = getOffsetInfo(el, container);\n\n        if (IS_WEBKIT && hasOffset && !isSVG && isStatic && (position === \"relative\" || position === \"static\")) {\n            offsetLeft -= offsetParent.offsetLeft;\n            offsetTop -= offsetParent.offsetTop;\n            isEnd = isEnd || isOffsetEnd;\n        }\n        let parentClientLeft = 0;\n        let parentClientTop = 0;\n\n        if (hasOffset && offsetContainer !== offsetParent) {\n            // border\n            parentClientLeft = offsetParent.clientLeft;\n            parentClientTop = offsetParent.clientTop;\n        }\n        if (hasOffset && offsetParent === document.body) {\n            const margin = getBodyOffset(el, false, style);\n            offsetLeft += margin[0];\n            offsetTop += margin[1];\n        }\n        matrixes.push(\n            // absolute matrix\n            getAbsoluteMatrix(matrix, n, origin),\n            // offset matrix (offsetPos + clientPos(border))\n            createOriginMatrix(hasOffset ? [\n                offsetLeft - el.scrollLeft + parentClientLeft,\n                offsetTop - el.scrollTop + parentClientTop,\n            ] : [el, origin] as any, n),\n        );\n        if (!targetMatrix) {\n            targetMatrix = matrix;\n        }\n        if (!transformOrigin) {\n            transformOrigin = origin;\n        }\n        if (!targetTransformOrigin) {\n            targetTransformOrigin = targetOrigin;\n        }\n        if (isEnd || isFixed) {\n            break;\n        } else {\n            el = offsetParent;\n            isEnd = isOffsetEnd;\n        }\n    }\n    if (!targetMatrix) {\n        targetMatrix = createIdentityMatrix(n);\n    }\n    if (!transformOrigin) {\n        transformOrigin = [0, 0];\n    }\n    if (!targetTransformOrigin) {\n        targetTransformOrigin = [0, 0];\n    }\n    return {\n        offsetContainer,\n        matrixes,\n        targetMatrix,\n        transformOrigin,\n        targetOrigin: targetTransformOrigin,\n        is3d,\n    };\n}\nexport function calculateElementInfo(\n    target?: SVGElement | HTMLElement | null,\n    container?: SVGElement | HTMLElement | null,\n    rootContainer: HTMLElement | SVGElement | null | undefined = container,\n    isAbsolute3d?: boolean,\n    // state?: Partial<MoveableManagerState> | false,\n) {\n    // const prevMatrix = state ? state.beforeMatrix : undefined;\n    // const prevRootMatrix = state ? state.rootMatrix : undefined;\n    // const prevN = state ? (state.is3d ? 4 : 3) : undefined;\n    let width: number = 0;\n    let height: number = 0;\n    let rotation = 0;\n    let allResult: {} = {};\n\n    if (target) {\n        const style = getComputedStyle(target);\n\n        width = (target as HTMLElement).offsetWidth;\n        height = (target as HTMLElement).offsetHeight;\n\n        if (isUndefined(width)) {\n            [width, height] = getSize(target, style, true);\n        }\n    }\n\n    if (target) {\n        const result = calculateMatrixStack(\n            target, container, rootContainer, isAbsolute3d,\n            // prevMatrix, prevRootMatrix, prevN,\n        );\n        const position = calculateMoveablePosition(\n            result.allMatrix,\n            result.transformOrigin,\n            width, height,\n        );\n        allResult = {\n            ...result,\n            ...position,\n        };\n        const rotationPosition = calculateMoveablePosition(\n            result.allMatrix, [50, 50], 100, 100,\n        );\n        rotation = getRotationRad([rotationPosition.pos1, rotationPosition.pos2], rotationPosition.direction);\n    }\n    const n = isAbsolute3d ? 4 : 3;\n    return {\n        width,\n        height,\n        rotation,\n        // rootMatrix: number[];\n        // beforeMatrix: number[];\n        // offsetMatrix: number[];\n        // allMatrix: number[];\n        // targetMatrix: number[];\n        // targetTransform: string;\n        // transformOrigin: number[];\n        // targetOrigin: number[];\n        // is3d: boolean;\n        rootMatrix: createIdentityMatrix(n),\n        beforeMatrix: createIdentityMatrix(n),\n        offsetMatrix: createIdentityMatrix(n),\n        allMatrix: createIdentityMatrix(n),\n        targetMatrix: createIdentityMatrix(n),\n        targetTransform: \"\",\n        transformOrigin: [0, 0],\n        targetOrigin: [0, 0],\n        is3d: !!isAbsolute3d,\n        // left: number;\n        // top: number;\n        // right: number;\n        // bottom: number;\n        // origin: number[];\n        // pos1: number[];\n        // pos2: number[];\n        // pos3: number[];\n        // pos4: number[];\n        // direction: 1 | -1;\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n        origin: [0, 0],\n        pos1: [0, 0],\n        pos2: [0, 0],\n        pos3: [0, 0],\n        pos4: [0, 0],\n        direction: 1,\n        ...allResult,\n    };\n}\nexport function getElementInfo(\n    target: SVGElement | HTMLElement,\n    container?: SVGElement | HTMLElement | null,\n    rootContainer: SVGElement | HTMLElement | null | undefined = container,\n) {\n    return calculateElementInfo(target, container, rootContainer, true);\n}\nexport function calculateMatrixStack(\n    target: SVGElement | HTMLElement,\n    container?: SVGElement | HTMLElement | null,\n    rootContainer: SVGElement | HTMLElement | null | undefined = container,\n    isAbsolute3d?: boolean,\n    // prevMatrix?: number[],\n    // prevRootMatrix?: number[],\n    // prevN?: number,\n) {\n    const {\n        matrixes,\n        is3d,\n        targetMatrix: prevTargetMatrix,\n        transformOrigin,\n        targetOrigin,\n        offsetContainer,\n    } = getMatrixStackInfo(target, container); // prevMatrix\n    const {\n        matrixes: rootMatrixes,\n        is3d: isRoot3d,\n    } = getMatrixStackInfo(offsetContainer, rootContainer); // prevRootMatrix\n\n    // if (rootContainer === document.body) {\n    //     console.log(offsetContainer, rootContainer, rootMatrixes);\n    // }\n    const isNext3d = isAbsolute3d || isRoot3d || is3d;\n    const n = isNext3d ? 4 : 3;\n    const isSVGGraphicElement = target.tagName.toLowerCase() !== \"svg\" && \"ownerSVGElement\" in target;\n    const originalContainer = container || document.body;\n    let targetMatrix = prevTargetMatrix;\n    // let allMatrix = prevMatrix ? convertDimension(prevMatrix, prevN!, n) : createIdentityMatrix(n);\n    // let rootMatrix = prevRootMatrix ? convertDimension(prevRootMatrix, prevN!, n) : createIdentityMatrix(n);\n    // let beforeMatrix = prevMatrix ? convertDimension(prevMatrix, prevN!, n) : createIdentityMatrix(n);\n    let allMatrix = createIdentityMatrix(n);\n    let rootMatrix = createIdentityMatrix(n);\n    let beforeMatrix = createIdentityMatrix(n);\n    let offsetMatrix = createIdentityMatrix(n);\n    const length = matrixes.length;\n    const endContainer = getOffsetInfo(originalContainer, originalContainer, true).offsetParent;\n\n    rootMatrixes.reverse();\n    matrixes.reverse();\n\n    if (!is3d && isNext3d) {\n        targetMatrix = convertDimension(targetMatrix, 3, 4);\n        matrixes.forEach((matrix, i) => {\n            matrixes[i] = convertDimension(matrix, 3, 4);\n        });\n    }\n    if (!isRoot3d && isNext3d) {\n        rootMatrixes.forEach((matrix, i) => {\n            rootMatrixes[i] = convertDimension(matrix, 3, 4);\n        });\n    }\n\n    // rootMatrix = (...) -> container -> offset -> absolute -> offset -> absolute(targetMatrix)\n    // beforeMatrix = (... -> container -> offset -> absolute) -> offset -> absolute(targetMatrix)\n    // offsetMatrix = (... -> container -> offset -> absolute -> offset) -> absolute(targetMatrix)\n\n    // if (!prevRootMatrix) {\n    rootMatrixes.forEach(matrix => {\n        rootMatrix = multiply(rootMatrix, matrix, n);\n    });\n    // }\n    matrixes.forEach((matrix, i) => {\n        if (length - 2 === i) {\n            // length - 3\n            beforeMatrix = allMatrix.slice();\n        }\n        if (length - 1 === i) {\n            // length - 2\n            offsetMatrix = allMatrix.slice();\n        }\n\n        // calculate for SVGElement\n        if (isObject(matrix[n * (n - 1)])) {\n            [matrix[n * (n - 1)], matrix[n * (n - 1) + 1]] =\n                getSVGOffset(\n                    matrix[n * (n - 1)] as any,\n                    endContainer,\n                    n,\n                    matrix[n * (n - 1) + 1] as any,\n                    allMatrix,\n                    matrixes[i + 1],\n                );\n        }\n        allMatrix = multiply(allMatrix, matrix, n);\n    });\n    const isMatrix3d = !isSVGGraphicElement && is3d;\n\n    if (!targetMatrix) {\n        targetMatrix = createIdentityMatrix(isMatrix3d ? 4 : 3);\n    }\n    const targetTransform = makeMatrixCSS(\n        isSVGGraphicElement && targetMatrix.length === 16\n            ? convertDimension(targetMatrix, 4, 3) : targetMatrix,\n        isMatrix3d,\n    );\n\n    rootMatrix = ignoreDimension(rootMatrix, n, n);\n\n    return {\n        rootMatrix,\n        beforeMatrix,\n        offsetMatrix,\n        allMatrix,\n        targetMatrix,\n        targetTransform,\n        transformOrigin,\n        targetOrigin,\n        is3d: isNext3d,\n    };\n}\nexport function makeMatrixCSS(matrix: number[], is3d: boolean = matrix.length > 9) {\n    return `${is3d ? \"matrix3d\" : \"matrix\"}(${convertMatrixtoCSS(matrix, !is3d).join(\",\")})`;\n}\nexport function getSVGViewBox(el: SVGSVGElement) {\n    if (!el) {\n        return { x: 0, y: 0, width: 0, height: 0 };\n    }\n    const clientWidth = el.clientWidth;\n    const clientHeight = el.clientHeight;\n    const viewBox = el.viewBox;\n    const baseVal = (viewBox && viewBox.baseVal) || { x: 0, y: 0, width: 0, height: 0 };\n\n    return {\n        x: baseVal.x,\n        y: baseVal.y,\n        width: baseVal.width || clientWidth,\n        height: baseVal.height || clientHeight,\n    };\n}\nexport function getSVGMatrix(\n    el: SVGSVGElement,\n    n: number,\n) {\n    const clientWidth = el.clientWidth;\n    const clientHeight = el.clientHeight;\n    const {\n        width: viewBoxWidth,\n        height: viewBoxHeight,\n    } = getSVGViewBox(el);\n    const scaleX = clientWidth / viewBoxWidth;\n    const scaleY = clientHeight / viewBoxHeight;\n\n    const preserveAspectRatio = el.preserveAspectRatio.baseVal;\n    // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/preserveAspectRatio\n    const align = preserveAspectRatio.align;\n    // 1 : meet 2: slice\n    const meetOrSlice = preserveAspectRatio.meetOrSlice;\n    const svgOrigin = [0, 0];\n    const scale = [scaleX, scaleY];\n    const translate = [0, 0];\n\n    if (align !== 1) {\n        const xAlign = (align - 2) % 3;\n        const yAlign = Math.floor((align - 2) / 3);\n\n        svgOrigin[0] = viewBoxWidth * xAlign / 2;\n        svgOrigin[1] = viewBoxHeight * yAlign / 2;\n\n        const scaleDimension = meetOrSlice === 2 ? Math.max(scaleY, scaleX) : Math.min(scaleX, scaleY);\n\n        scale[0] = scaleDimension;\n        scale[1] = scaleDimension;\n\n        translate[0] = (clientWidth - viewBoxWidth) / 2 * xAlign;\n        translate[1] = (clientHeight - viewBoxHeight) / 2 * yAlign;\n    }\n    const scaleMatrix = createScaleMatrix(scale, n);\n    [\n        scaleMatrix[n * (n - 1)],\n        scaleMatrix[n * (n - 1) + 1],\n    ] = translate;\n\n    return getAbsoluteMatrix(\n        scaleMatrix,\n        n,\n        svgOrigin,\n    );\n}\nexport function getSVGGraphicsOffset(\n    el: SVGGraphicsElement,\n    origin: number[],\n) {\n    if (!el.getBBox) {\n        return [0, 0];\n    }\n    const bbox = el.getBBox();\n    const viewBox = getSVGViewBox(el.ownerSVGElement!);\n    const left = bbox.x - viewBox.x;\n    const top = bbox.y - viewBox.y;\n\n    return [\n        left,\n        top,\n        origin[0] - left,\n        origin[1] - top,\n    ];\n}\nexport function calculatePosition(matrix: number[], pos: number[], n: number) {\n    return calculate(matrix, convertPositionMatrix(pos, n), n);\n}\nexport function calculatePoses(matrix: number[], width: number, height: number, n: number) {\n    return [[0, 0], [width, 0], [0, height], [width, height]].map(pos => calculatePosition(matrix, pos, n));\n}\nexport function getRect(poses: number[][]) {\n    const posesX = poses.map(pos => pos[0]);\n    const posesY = poses.map(pos => pos[1]);\n    const left = Math.min(...posesX);\n    const top = Math.min(...posesY);\n    const right = Math.max(...posesX);\n    const bottom = Math.max(...posesY);\n    const rectWidth = right - left;\n    const rectHeight = bottom - top;\n\n    return {\n        left, top,\n        right, bottom,\n        width: rectWidth,\n        height: rectHeight,\n    };\n}\nexport function calculateRect(matrix: number[], width: number, height: number, n: number) {\n    const poses = calculatePoses(matrix, width, height, n);\n\n    return getRect(poses);\n}\nexport function getSVGOffset(\n    el: SVGElement,\n    container: HTMLElement | SVGElement,\n    n: number, origin: number[], beforeMatrix: number[], absoluteMatrix: number[]) {\n\n    const [width, height] = getSize(el, undefined, true);\n    const containerClientRect = container.getBoundingClientRect();\n    let margin = [0, 0];\n\n    if (container === document.body) {\n        margin = getBodyOffset(el, true);\n    }\n    const rect = el.getBoundingClientRect();\n    const rectLeft\n        = rect.left - containerClientRect.left + container.scrollLeft\n        - (container.clientLeft || 0) + margin[0];\n    const rectTop\n        = rect.top - containerClientRect.top + container.scrollTop\n        - (container.clientTop || 0) + margin[1];\n    const rectWidth = rect.width;\n    const rectHeight = rect.height;\n    const mat = multiplies(\n        n,\n        beforeMatrix,\n        absoluteMatrix,\n    );\n    const {\n        left: prevLeft,\n        top: prevTop,\n        width: prevWidth,\n        height: prevHeight,\n    } = calculateRect(mat, width, height, n);\n    const posOrigin = calculatePosition(mat, origin, n);\n    const prevOrigin = minus(posOrigin, [prevLeft, prevTop]);\n    const rectOrigin = [\n        rectLeft + prevOrigin[0] * rectWidth / prevWidth,\n        rectTop + prevOrigin[1] * rectHeight / prevHeight,\n    ];\n    const offset = [0, 0];\n    let count = 0;\n\n    while (++count < 10) {\n        const inverseBeforeMatrix = invert(beforeMatrix, n);\n        [offset[0], offset[1]] = minus(\n            calculatePosition(inverseBeforeMatrix, rectOrigin, n),\n            calculatePosition(inverseBeforeMatrix, posOrigin, n),\n        );\n        const mat2 = multiplies(\n            n,\n            beforeMatrix,\n            createOriginMatrix(offset, n),\n            absoluteMatrix,\n        );\n        const {\n            left: nextLeft,\n            top: nextTop,\n        } = calculateRect(mat2, width, height, n);\n        const distLeft = nextLeft - rectLeft;\n        const distTop = nextTop - rectTop;\n\n        if (Math.abs(distLeft) < 2 && Math.abs(distTop) < 2) {\n            break;\n        }\n        rectOrigin[0] -= distLeft;\n        rectOrigin[1] -= distTop;\n    }\n    return offset.map(p => Math.round(p));\n}\nexport function calculateMoveablePosition(matrix: number[], origin: number[], width: number, height: number) {\n    const is3d = matrix.length === 16;\n    const n = is3d ? 4 : 3;\n    const poses = calculatePoses(matrix, width, height, n);\n    let [\n        [x1, y1],\n        [x2, y2],\n        [x3, y3],\n        [x4, y4],\n    ] = poses;\n    let [originX, originY] = calculatePosition(matrix, origin, n);\n\n    const left = Math.min(x1, x2, x3, x4);\n    const top = Math.min(y1, y2, y3, y4);\n    const right = Math.max(x1, x2, x3, x4);\n    const bottom = Math.max(y1, y2, y3, y4);\n\n    x1 = (x1 - left) || 0;\n    x2 = (x2 - left) || 0;\n    x3 = (x3 - left) || 0;\n    x4 = (x4 - left) || 0;\n\n    y1 = (y1 - top) || 0;\n    y2 = (y2 - top) || 0;\n    y3 = (y3 - top) || 0;\n    y4 = (y4 - top) || 0;\n\n    originX = (originX - left) || 0;\n    originY = (originY - top) || 0;\n\n    const direction = getShapeDirection(poses);\n\n    return {\n        left,\n        top,\n        right,\n        bottom,\n        origin: [originX, originY],\n        pos1: [x1, y1],\n        pos2: [x2, y2],\n        pos3: [x3, y3],\n        pos4: [x4, y4],\n        direction,\n    };\n}\nexport function getDistSize(vec: number[]) {\n    return Math.sqrt(vec[0] * vec[0] + vec[1] * vec[1]);\n}\nexport function getDiagonalSize(pos1: number[], pos2: number[]) {\n    return getDistSize([\n        pos2[0] - pos1[0],\n        pos2[1] - pos1[1],\n    ]);\n}\nexport function getLineStyle(pos1: number[], pos2: number[], zoom = 1, rad: number = getRad(pos1, pos2)) {\n    const width = getDiagonalSize(pos1, pos2);\n\n    return {\n        transform: `translateY(-50%) translate(${pos1[0]}px, ${pos1[1]}px) rotate(${rad}rad) scaleY(${zoom})`,\n        width: `${width}px`,\n    };\n}\nexport function getControlTransform(rotation: number, zoom: number, ...poses: number[][]) {\n    const length = poses.length;\n\n    const x = poses.reduce((prev, pos) => prev + pos[0], 0) / length;\n    const y = poses.reduce((prev, pos) => prev + pos[1], 0) / length;\n    return {\n        transform: `translateZ(0px) translate(${x}px, ${y}px) rotate(${rotation}rad) scale(${zoom})`,\n    };\n}\nexport function getCSSSize(target: SVGElement | HTMLElement) {\n    const style = window.getComputedStyle(target);\n\n    return [\n        parseFloat(style.width!),\n        parseFloat(style.height!),\n    ];\n}\nexport function getSize(\n    target: SVGElement | HTMLElement,\n    style: CSSStyleDeclaration = window.getComputedStyle(target),\n    isOffset?: boolean,\n    isBoxSizing: boolean = isOffset || style.boxSizing === \"border-box\",\n) {\n    let width = (target as HTMLElement).offsetWidth;\n    let height = (target as HTMLElement).offsetHeight;\n    const hasOffset = !isUndefined(width);\n\n    if ((isOffset || isBoxSizing) && hasOffset) {\n        return [width, height];\n    }\n    if (!hasOffset && target.tagName.toLowerCase() !== \"svg\") {\n        const bbox = (target as SVGGraphicsElement).getBBox();\n        return [bbox.width, bbox.height];\n    }\n\n    width = target.clientWidth;\n    height = target.clientHeight;\n\n    if (isOffset || isBoxSizing) {\n        const borderLeft = parseFloat(style.borderLeftWidth!) || 0;\n        const borderRight = parseFloat(style.borderRightWidth!) || 0;\n        const borderTop = parseFloat(style.borderTopWidth!) || 0;\n        const borderBottom = parseFloat(style.borderBottomWidth!) || 0;\n\n        return [\n            width + borderLeft + borderRight,\n            height + borderTop + borderBottom,\n        ];\n    } else {\n        const paddingLeft = parseFloat(style.paddingLeft!) || 0;\n        const paddingRight = parseFloat(style.paddingRight!) || 0;\n        const paddingTop = parseFloat(style.paddingTop!) || 0;\n        const paddingBottom = parseFloat(style.paddingBottom!) || 0;\n\n        return [\n            width - paddingLeft - paddingRight,\n            height - paddingTop - paddingBottom,\n        ];\n    }\n}\nexport function getRotationRad(\n    poses: number[][],\n    direction: number,\n) {\n    return getRad(direction > 0 ? poses[0] : poses[1], direction > 0 ? poses[1] : poses[0]);\n}\nexport function getTargetInfo(\n    moveableElement?: HTMLElement | null,\n    target?: HTMLElement | SVGElement | null,\n    container?: HTMLElement | SVGElement | null,\n    parentContainer?: HTMLElement | SVGElement | null,\n    rootContainer?: HTMLElement | SVGElement | null,\n    // state?: Partial<MoveableManagerState> | false | undefined,\n) {\n    let beforeDirection: 1 | -1 = 1;\n    let beforeOrigin = [0, 0];\n    let targetClientRect = resetClientRect();\n    let containerClientRect = resetClientRect();\n    let moveableClientRect = resetClientRect();\n\n    const result = calculateElementInfo(\n        target, container!, rootContainer!, false,\n        // state,\n    );\n    if (target) {\n        const n = result.is3d ? 4 : 3;\n        const beforePosition = calculateMoveablePosition(\n            result.offsetMatrix,\n            plus(result.transformOrigin, getOrigin(result.targetMatrix, n)),\n            result.width, result.height,\n        );\n        beforeDirection = beforePosition.direction;\n        beforeOrigin = plus(\n            beforePosition.origin,\n            [beforePosition.left - result.left, beforePosition.top - result.top],\n        );\n\n        targetClientRect = getClientRect(target);\n        containerClientRect = getClientRect(\n            getOffsetInfo(parentContainer, parentContainer, true).offsetParent || document.body,\n            true,\n        );\n        if (moveableElement) {\n            moveableClientRect = getClientRect(moveableElement);\n        }\n    }\n\n    return {\n        targetClientRect,\n        containerClientRect,\n        moveableClientRect,\n        beforeDirection,\n        beforeOrigin,\n        originalBeforeOrigin: beforeOrigin,\n        target,\n        ...result,\n    };\n}\nexport function resetClientRect(): MoveableClientRect {\n    return {\n        left: 0, right: 0,\n        top: 0, bottom: 0,\n        width: 0, height: 0,\n        clientLeft: 0, clientTop: 0,\n        clientWidth: 0, clientHeight: 0,\n        scrollWidth: 0, scrollHeight: 0,\n    };\n}\nexport function getClientRect(el: HTMLElement | SVGElement, isExtends?: boolean) {\n    const { left, width, top, bottom, right, height } = el.getBoundingClientRect();\n\n    const rect: MoveableClientRect = {\n        left,\n        right,\n        top,\n        bottom,\n        width,\n        height,\n    };\n\n    if (isExtends) {\n        rect.clientLeft = el.clientLeft;\n        rect.clientTop = el.clientTop;\n        rect.clientWidth = el.clientWidth;\n        rect.clientHeight = el.clientHeight;\n        rect.scrollWidth = el.scrollWidth;\n        rect.scrollHeight = el.scrollHeight;\n        rect.overflow = getComputedStyle(el).overflow !== \"visible\";\n    }\n    return rect;\n}\nexport function getDirection(target: SVGElement | HTMLElement) {\n    if (!target) {\n        return;\n    }\n    const direciton = target.getAttribute(\"data-direction\")!;\n\n    if (!direciton) {\n        return;\n    }\n    const dir = [0, 0];\n\n    (direciton.indexOf(\"w\") > -1) && (dir[0] = -1);\n    (direciton.indexOf(\"e\") > -1) && (dir[0] = 1);\n    (direciton.indexOf(\"n\") > -1) && (dir[1] = -1);\n    (direciton.indexOf(\"s\") > -1) && (dir[1] = 1);\n\n    return dir;\n}\nexport function getAbsolutePoses(poses: number[][], dist: number[]) {\n    return [\n        plus(dist, poses[0]),\n        plus(dist, poses[1]),\n        plus(dist, poses[2]),\n        plus(dist, poses[3]),\n    ];\n}\nexport function getAbsolutePosesByState({\n    left,\n    top,\n    pos1,\n    pos2,\n    pos3,\n    pos4,\n}: {\n    left: number,\n    top: number,\n    pos1: number[],\n    pos2: number[],\n    pos3: number[],\n    pos4: number[],\n}) {\n    return getAbsolutePoses([pos1, pos2, pos3, pos4], [left, top]);\n}\nexport function roundSign(num: number) {\n    return Math.round(num % 1 === -0.5 ? num - 1 : num);\n}\nexport function throttle(num: number, unit: number) {\n    if (!unit) {\n        return num;\n    }\n    return Math.round(num / unit) * unit;\n}\nexport function throttleArray(nums: number[], unit: number) {\n    nums.forEach((_, i) => {\n        nums[i] = throttle(nums[i], unit);\n    });\n    return nums;\n}\n\nexport function unset(self: any, name: string) {\n    if (self[name]) {\n        self[name].unset();\n        self[name] = null;\n    }\n}\n\nexport function fillParams<T extends IObject<any>>(\n    moveable: any,\n    e: any,\n    params: Pick<T, Exclude<keyof T, \"moveable\" | \"target\" | \"clientX\" | \"clientY\" | \"inputEvent\" | \"datas\" | \"currentTarget\">>,\n): T {\n    const datas = e.datas;\n\n    if (!datas.datas) {\n        datas.datas = {};\n    }\n    const nextParams = {\n        ...params,\n        target: moveable.state.target,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        inputEvent: e.inputEvent,\n        currentTarget: moveable,\n        moveable,\n        datas: datas.datas,\n    } as any;\n\n    if (datas.isStartEvent) {\n        datas.lastEvent = nextParams;\n    } else {\n        datas.isStartEvent = true;\n    }\n    return nextParams;\n}\nexport function fillEndParams<T extends IObject<any>>(\n    moveable: any,\n    e: any,\n    params: Pick<T, Exclude<\n        keyof T,\n        \"moveable\" | \"target\" | \"clientX\" | \"clientY\" | \"inputEvent\" |\n        \"datas\" | \"currentTarget\" | \"lastEvent\" | \"isDrag\" | \"isDouble\">\n    > & { isDrag?: boolean },\n): T {\n    const datas = e.datas;\n    const isDrag = \"isDrag\" in params ? params.isDrag : e.isDrag;\n\n    if (!datas.datas) {\n        datas.datas = {};\n    }\n\n    return {\n        isDrag,\n        ...params,\n        target: moveable.state.target,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        inputEvent: e.inputEvent,\n        currentTarget: moveable,\n        lastEvent: datas.lastEvent,\n        isDouble: e.isDouble,\n        datas: datas.datas,\n    } as any;\n}\n\nexport function triggerEvent<T extends IObject<any> = MoveableProps, U extends keyof T = string>(\n    moveable: any,\n    name: U,\n    params: T[U] extends ((e: infer P) => any) | undefined ? P : IObject<any>,\n    isManager?: boolean,\n): any {\n    return moveable.triggerEvent(name, params, isManager);\n}\n\nexport function getComputedStyle(el: HTMLElement | SVGElement, pseudoElt?: string | null) {\n    return window.getComputedStyle(el, pseudoElt);\n}\n\nexport function filterAbles(\n    ables: Able[], methods: Array<keyof Able>,\n    triggerAblesSimultaneously?: boolean,\n) {\n    const enabledAbles: IObject<boolean> = {};\n    const ableGroups: IObject<boolean> = {};\n\n    return ables.filter(able => {\n        const name = able.name;\n\n        if (enabledAbles[name] || !methods.some(method => able[method])) {\n            return false;\n        }\n        if (!triggerAblesSimultaneously && able.ableGroup) {\n            if (ableGroups[able.ableGroup]) {\n                return false;\n            }\n            ableGroups[able.ableGroup] = true;\n        }\n        enabledAbles[name] = true;\n        return true;\n    });\n}\n\nexport function equals(a1: any, a2: any) {\n    return a1 === a2 || (a1 == null && a2 == null);\n}\n\nexport function selectValue<T = any>(...values: any[]): T {\n    const length = values.length - 1;\n    for (let i = 0; i < length; ++i) {\n        const value = values[i];\n\n        if (!isUndefined(value)) {\n            return value;\n        }\n    }\n\n    return values[length];\n}\n\nexport function groupBy<T>(arr: T[], func: (el: T, index: number, arr: T[]) => any) {\n    const groups: T[][] = [];\n    const groupKeys: any[] = [];\n\n    arr.forEach((el, index) => {\n        const groupKey = func(el, index, arr);\n        const keyIndex = groupKeys.indexOf(groupKey);\n        const group = groups[keyIndex] || [];\n\n        if (keyIndex === -1) {\n            groupKeys.push(groupKey);\n            groups.push(group);\n        }\n        group.push(el);\n    });\n    return groups;\n}\nexport function groupByMap<T>(arr: T[], func: (el: T, index: number, arr: T[]) => string | number) {\n    const groups: T[][] = [];\n    const groupKeys: IObject<T[]> = {};\n\n    arr.forEach((el, index) => {\n        const groupKey = func(el, index, arr);\n        let group = groupKeys[groupKey];\n\n        if (!group) {\n            group = [];\n            groupKeys[groupKey] = group;\n            groups.push(group);\n        }\n        group.push(el);\n    });\n    return groups;\n}\nexport function flat<T>(arr: T[][]): T[] {\n    return arr.reduce((prev, cur) => {\n        return prev.concat(cur);\n    }, []);\n}\n\nexport function equalSign(a: number, b: number) {\n    return (a >= 0 && b >= 0) || (a < 0 && b < 0);\n}\n\nexport function maxOffset(...args: number[]) {\n    args.sort((a, b) => Math.abs(b) - Math.abs(a));\n\n    return args[0];\n}\nexport function minOffset(...args: number[]) {\n    args.sort((a, b) => Math.abs(a) - Math.abs(b));\n\n    return args[0];\n}\n\nexport function calculateInversePosition(matrix: number[], pos: number[], n: number) {\n    return calculate(\n        invert(matrix, n),\n        convertPositionMatrix(pos, n),\n        n,\n    );\n}\nexport function convertDragDist(state: MoveableManagerState, e: any) {\n    const {\n        is3d,\n        rootMatrix,\n    } = state;\n    const n = is3d ? 4 : 3;\n    [\n        e.distX, e.distY,\n    ] = calculateInversePosition(rootMatrix, [e.distX, e.distY], n);\n\n    return e;\n}\n\nexport function calculatePadding(\n    matrix: number[], pos: number[],\n    transformOrigin: number[], origin: number[], n: number,\n) {\n    return minus(calculatePosition(matrix, plus(transformOrigin, pos), n), origin);\n}\n\nexport function convertCSSSize(value: number, size: number, isRelative?: boolean) {\n    return isRelative ? `${value / size * 100}%` : `${value}px`;\n}\n\nexport function moveControlPos(\n    controlPoses: ControlPose[],\n    index: number,\n    dist: number[],\n    isRect?: boolean,\n) {\n    const { direction, sub } = controlPoses[index];\n    const dists = controlPoses.map(() => [0, 0]);\n    const directions = direction ? direction.split(\"\") : [];\n\n    if (isRect && index < 8) {\n        const verticalDirection = directions.filter(dir => dir === \"w\" || dir === \"e\")[0];\n        const horizontalDirection = directions.filter(dir => dir === \"n\" || dir === \"s\")[0];\n\n        dists[index] = dist;\n        controlPoses.forEach((controlPose, i) => {\n            const {\n                direction: controlDir,\n            } = controlPose;\n\n            if (!controlDir) {\n                return;\n            }\n            if (controlDir.indexOf(verticalDirection) > -1) {\n                dists[i][0] = dist[0];\n            }\n            if (controlDir.indexOf(horizontalDirection) > -1) {\n                dists[i][1] = dist[1];\n            }\n        });\n        if (verticalDirection) {\n            dists[1][0] = dist[0] / 2;\n            dists[5][0] = dist[0] / 2;\n        }\n        if (horizontalDirection) {\n            dists[3][1] = dist[1] / 2;\n            dists[7][1] = dist[1] / 2;\n        }\n    } else if (direction && !sub) {\n        directions.forEach(dir => {\n            const isVertical = dir === \"n\" || dir === \"s\";\n\n            controlPoses.forEach((controlPose, i) => {\n                const {\n                    direction: dirDir,\n                    horizontal: dirHorizontal,\n                    vertical: dirVertical,\n                } = controlPose;\n\n                if (!dirDir || dirDir.indexOf(dir) === -1) {\n                    return;\n                }\n                dists[i] = [\n                    isVertical || !dirHorizontal ? 0 : dist[0],\n                    !isVertical || !dirVertical ? 0 : dist[1],\n                ];\n            });\n        });\n    } else {\n        dists[index] = dist;\n    }\n\n    return dists;\n}\n\nexport function getTinyDist(v: number) {\n    return Math.abs(v) <= TINY_NUM ? 0 : v;\n}\n\nexport function directionCondition(e: any) {\n    if (e.isRequest) {\n        if (e.requestAble === \"resizable\" || e.requestAble === \"scalable\") {\n            return e.parentDirection!;\n        } else {\n            return false;\n        }\n    }\n    return hasClass(e.inputEvent.target, prefix(\"direction\"));\n}\n\nexport function invertObject<T extends IObject<any>>(obj: T): InvertTypes<T> {\n    const nextObj: IObject<any> = {};\n\n    for (const name in obj) {\n        nextObj[obj[name]] = name;\n    }\n    return nextObj as any;\n}\n\nexport function getTransform(transforms: string[], index: number) {\n    const beforeFunctionTexts = transforms.slice(0, index < 0 ? undefined : index);\n    const targetFunctionText = transforms[index] || \"\";\n    const afterFunctionTexts = index < 0 ? [] : transforms.slice(index);\n    const beforeFunctions = parse(beforeFunctionTexts);\n    const targetFunctions = parse([targetFunctionText]);\n    const afterFunctions = parse(afterFunctionTexts);\n\n    const beforeFunctionMatrix = toMat(beforeFunctions);\n    const afterFunctionMatrix = toMat(afterFunctions);\n    const allFunctionMatrix = multiply(\n        beforeFunctionMatrix,\n        afterFunctionMatrix,\n        4,\n    );\n    return {\n        transforms,\n        beforeFunctionMatrix,\n        targetFunctionMatrix: toMat(targetFunctions),\n        afterFunctionMatrix,\n        allFunctionMatrix,\n        beforeFunctions,\n        targetFunction: targetFunctions[0],\n        afterFunctions,\n        beforeFunctionTexts,\n        targetFunctionText,\n        afterFunctionTexts,\n    };\n}\n\nexport function isArrayFormat<T = any>(arr: any): arr is ArrayFormat<T> {\n    if (!arr || !isObject(arr)) {\n        return false;\n    }\n    return isArray(arr) || \"length\" in arr;\n}\n\nexport function getRefTarget<T extends HTMLElement | SVGElement = HTMLElement | SVGElement>(target: MoveableRefType<T>, isSelector: true): T | null;\nexport function getRefTarget<T extends HTMLElement | SVGElement = HTMLElement | SVGElement>(target: MoveableRefType<T>, isSelector?: false): T | string | null;\nexport function getRefTarget<T extends HTMLElement | SVGElement = HTMLElement | SVGElement>(\n    target: MoveableRefType<T>,\n    isSelector?: boolean,\n): any {\n    if (!target) {\n        return null;\n    }\n    if (isString(target)) {\n        if (isSelector) {\n            return document.querySelector(target);\n        }\n        return target;\n    }\n    if (isFunction(target)) {\n        return target();\n    }\n    if (\"current\" in target) {\n        return target.current;\n    }\n    return target;\n}\n\nexport function getRefTargets(targets: MoveableRefType | MoveableRefType[]) {\n    if (!targets) {\n        return [];\n    }\n    const userTargets = isArrayFormat(targets) ? [].slice.call(targets) : [targets];\n\n    return userTargets.map(target => getRefTarget(target)) as Array<SVGElement | HTMLElement | string | null | undefined>;\n}\n\nexport function getElementTargets(\n    targets: Array<SVGElement | HTMLElement | string | null | undefined>,\n    selectorMap: IObject<Array<HTMLElement | SVGElement>>,\n) {\n    const elementTargets: Array<SVGElement | HTMLElement> = [];\n    targets.forEach(target => {\n        if (!target) {\n            return;\n        }\n        if (isString(target)) {\n            if (selectorMap[target]) {\n                elementTargets.push(...selectorMap[target]);\n            }\n            return;\n        }\n        elementTargets.push(target);\n    });\n\n    return elementTargets;\n}\n\nexport function minmax(...values: number[]) {\n    return [Math.min(...values), Math.max(...values)];\n}\n\n\nexport function getAbsoluteRotation(pos1: number[], pos2: number[], direction: number) {\n    let deg = getRad(pos1, pos2) / Math.PI * 180;\n\n    deg = direction >= 0 ? deg : 180 - deg;\n    deg = deg >= 0 ? deg : 360 + deg;\n\n    return deg;\n}\n","import { triggerEvent, fillParams, fillEndParams } from \"../utils\";\nimport {\n    PinchableProps, Able, SnappableState,\n    OnPinchStart, OnPinch, OnPinchEnd, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\n\n/**\n * @namespace Moveable.Pinchable\n * @description Whether or not target can be pinched with draggable, resizable, scalable, rotatable (default: false)\n */\nexport default {\n    name: \"pinchable\",\n    updateRect: true,\n    props: {\n        pinchable: Boolean,\n    } as const,\n    events: {\n        onPinchStart: \"pinchStart\",\n        onPinch: \"pinch\",\n        onPinchEnd: \"pinchEnd\",\n        onPinchGroupStart: \"pinchGroupStart\",\n        onPinchGroup: \"pinchGroup\",\n        onPinchGroupEnd: \"pinchGroupEnd\",\n    } as const,\n    dragStart() {\n        return true;\n    },\n    pinchStart(\n        moveable: MoveableManagerInterface<PinchableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, targets, angle, originalDatas } = e;\n        const { pinchable, ables } = moveable.props;\n\n        if (!pinchable) {\n            return false;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}Start` as \"onPinchStart\";\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}ControlStart` as \"dragControlStart\";\n\n        const pinchAbles = (pinchable === true ? moveable.controlAbles : ables!.filter(able => {\n            return pinchable.indexOf(able.name as any) > -1;\n        })).filter(able => able.canPinch && able[controlEventName]);\n\n        const params = fillParams<OnPinchStart>(moveable, e, {}) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        const result = triggerEvent(moveable, eventName, params);\n\n        datas.isPinch = result !== false;\n        datas.ables = pinchAbles;\n\n        const isPinch = datas.isPinch;\n\n        if (!isPinch) {\n            return false;\n        }\n        pinchAbles.forEach(able => {\n            originalDatas[able.name] = originalDatas[able.name] || {};\n\n            if (!able[controlEventName]) {\n                return;\n            }\n            const ableEvent: any = {\n                ...e,\n                datas: originalDatas[able.name],\n                parentRotate: angle,\n                isPinch: true,\n            };\n            able[controlEventName]!(moveable, ableEvent);\n        });\n\n        moveable.state.snapRenderInfo = {\n            request: e.isRequest,\n            direction: [0, 0],\n        };\n        return isPinch;\n    },\n    pinch(\n        moveable: MoveableManagerInterface<PinchableProps>,\n        e: any,\n    ) {\n        const {\n            datas, scale: pinchScale, distance,\n            originalDatas,\n            inputEvent, targets,\n            angle,\n        } = e;\n        if (!datas.isPinch) {\n            return;\n        }\n        const parentDistance = distance * (1 - 1 / pinchScale);\n        const params = fillParams<OnPinch>(moveable, e, {}) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}` as \"onPinch\";\n        triggerEvent(moveable, eventName, params);\n\n        const ables: Able[] = datas.ables;\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}Control` as \"dragControl\";\n\n        ables.forEach(able => {\n            if (!able[controlEventName]) {\n                return;\n            }\n            able[controlEventName]!(moveable, {\n                ...e,\n                datas: originalDatas[able.name],\n                inputEvent,\n                parentDistance,\n                parentRotate: angle,\n                isPinch: true,\n            } as any);\n        });\n        return params;\n    },\n    pinchEnd(\n        moveable: MoveableManagerInterface<PinchableProps>,\n        e: any,\n    ) {\n        const { datas, isPinch, inputEvent, targets, originalDatas } = e;\n        if (!datas.isPinch) {\n            return;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}End` as \"onPinchEnd\";\n\n        const params = fillEndParams<OnPinchEnd>(moveable, e, { isDrag: isPinch }) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        triggerEvent(moveable, eventName, params);\n        const ables: Able[] = datas.ables;\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}ControlEnd` as \"dragControlEnd\";\n\n        ables.forEach(able => {\n            if (!able[controlEventName]) {\n                return;\n            }\n            able[controlEventName]!(moveable, {\n                ...e,\n                isDrag: isPinch,\n                datas: originalDatas[able.name],\n                inputEvent,\n                isPinch: true,\n            } as any);\n        });\n        return isPinch;\n    },\n    pinchGroupStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        return this.pinchStart(moveable, { ...e, targets: moveable.props.targets });\n    },\n    pinchGroup(moveable: MoveableGroupInterface, e: any) {\n        return this.pinch(moveable, { ...e, targets: moveable.props.targets });\n    },\n    pinchGroupEnd(moveable: MoveableGroupInterface, e: any) {\n        return this.pinchEnd(moveable, { ...e, targets: moveable.props.targets });\n    },\n};\n\n/**\n * Whether or not target can be pinched with draggable, resizable, scalable, rotatable (default: false)\n * @name Moveable.Pinchable#pinchable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.pinchable = true;\n */\n\n/**\n * When the pinch starts, the pinchStart event is called with part of scaleStart, rotateStart, resizeStart\n * @memberof Moveable.Pinchable\n * @event pinchStart\n * @param {Moveable.Pinchable.OnPinchStart} - Parameters for the pinchStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinchStart\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotateStart\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scaleStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When pinching, the pinch event is called with part of scale, rotate, resize\n * @memberof Moveable.Pinchable\n * @event pinch\n * @param {Moveable.Pinchable.OnPinch} - Parameters for the pinch event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinch\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotate\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scale\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When the pinch finishes, the pinchEnd event is called.\n * @memberof Moveable.Pinchable\n * @event pinchEnd\n * @param {Moveable.Pinchable.OnPinchEnd} - Parameters for the pinchEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinchEnd\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotateEnd\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scaleEnd\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n * When the group pinch starts, the `pinchGroupStart` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroupStart\n * @param {Moveable.Pinchable.OnPinchGroupStart} - Parameters for the `pinchGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroupStart\", ({ targets }) => {\n *     console.log(\"onPinchGroupStart\", targets);\n * });\n */\n\n/**\n * When the group pinch, the `pinchGroup` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroup\n * @param {Moveable.Pinchable.OnPinchGroup} - Parameters for the `pinchGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroup\", ({ targets, events }) => {\n *     console.log(\"onPinchGroup\", targets);\n * });\n */\n\n/**\n * When the group pinch finishes, the `pinchGroupEnd` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroupEnd\n * @param {Moveable.Pinchable.OnPinchGroupEnd} - Parameters for the `pinchGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onPinchGroupEnd\", targets, isDrag);\n * });\n */\n","import { MoveableManagerState, OnCustomDrag } from \"../types\";\nimport { convertDragDist } from \"../utils\";\n\nexport function setCustomDrag(\n    e: any,\n    state: MoveableManagerState<any>,\n    delta: number[],\n    isPinch: boolean,\n    isConvert: boolean,\n) {\n\n    const result = state.gesto!.move(delta, e.inputEvent);\n    const datas = result.originalDatas || result.datas;\n    const draggableDatas = datas.draggable || (datas.draggable = {});\n\n    return {\n        ...(isConvert ? convertDragDist(state, result) : result),\n        isDrag: true,\n        isPinch: !!isPinch,\n        parentEvent: true,\n        datas: draggableDatas,\n        originalDatas: e.originalDatas,\n    };\n}\n\nexport default class CustomGesto {\n    private prevX = 0;\n    private prevY = 0;\n    private startX = 0;\n    private startY = 0;\n    private isDrag = false;\n    private isFlag = false;\n    private datas: any = {\n        draggable: {},\n    };\n\n    public dragStart(client: number[], e: any) {\n        this.isDrag = false;\n        this.isFlag = false;\n        const originalDatas = e.originalDatas;\n\n        this.datas = originalDatas;\n        if (!originalDatas.draggable) {\n            originalDatas.draggable = {};\n        }\n        return {\n            ...this.move(client, e.inputEvent),\n            type: \"dragstart\",\n        };\n    }\n    public drag(client: number[], inputEvent: any) {\n        return this.move([\n            client[0] - this.prevX,\n            client[1] - this.prevY,\n        ], inputEvent);\n    }\n    public move(delta: number[], inputEvent: any): OnCustomDrag {\n        let clientX!: number;\n        let clientY!: number;\n        if (!this.isFlag) {\n            this.prevX = delta[0];\n            this.prevY = delta[1];\n            this.startX = delta[0];\n            this.startY = delta[1];\n\n            clientX = delta[0];\n            clientY = delta[1];\n\n            this.isFlag = true;\n        } else {\n\n            clientX = this.prevX + delta[0];\n            clientY = this.prevY + delta[1];\n            this.isDrag = true;\n        }\n\n        this.prevX = clientX;\n        this.prevY = clientY;\n\n        return {\n            type: \"drag\",\n            clientX,\n            clientY,\n            inputEvent,\n            isDrag: this.isDrag,\n            distX: clientX - this.startX,\n            distY: clientY - this.startY,\n            deltaX: delta[0],\n            deltaY: delta[1],\n            datas: this.datas.draggable,\n            originalDatas: this.datas,\n            parentEvent: true,\n            parentGesto: this,\n        };\n    }\n}\n","import { Able, MoveableGroupInterface, MoveableManagerInterface } from \"./types\";\nimport CustomGesto, { setCustomDrag } from \"./gesto/CustomGesto\";\n\nexport function fillChildEvents(\n    moveable: MoveableGroupInterface,\n    name: string,\n    e: any,\n): any[] {\n    const datas = e.originalDatas;\n\n    datas.groupable = datas.groupable || {};\n\n    const groupableDatas = datas.groupable;\n\n    groupableDatas.childDatas = groupableDatas.childDatas || [];\n\n    const childDatas = groupableDatas.childDatas;\n    const {\n        inputEvent,\n        isPinch,\n        clientX,\n        clientY,\n        distX,\n        distY,\n    } = e;\n\n    return moveable.moveables.map((_, i) => {\n        childDatas[i] = childDatas[i] || {};\n        childDatas[i][name] = childDatas[i][name] || {};\n\n        return {\n            inputEvent,\n            datas: childDatas[i][name],\n            originalDatas: childDatas[i],\n            isPinch,\n            clientX,\n            clientY,\n            distX,\n            distY,\n        };\n    });\n}\nexport function triggerChildGesto(\n    moveable: MoveableGroupInterface<any, any>,\n    able: Able,\n    type: string,\n    delta: number[],\n    e: any,\n    isConvert: boolean,\n) {\n    const isStart = !!type.match(/Start$/g);\n    const isEnd = !!type.match(/End$/g);\n    const isPinch = e.isPinch;\n    const datas = e.datas;\n    const events = fillChildEvents(moveable, able.name, e);\n\n    const moveables = moveable.moveables;\n    const childs = events.map((ev, i) => {\n        const childMoveable = moveables[i];\n        let childEvent: any = ev;\n\n        if (isStart) {\n            childEvent = new CustomGesto().dragStart(delta, ev);\n        } else {\n            if (!childMoveable.state.gesto) {\n                childMoveable.state.gesto = datas.childGestos[i];\n            }\n            childEvent = setCustomDrag(ev, childMoveable.state, delta, isPinch, isConvert);\n        }\n        const result = (able as any)[type]!(childMoveable,  { ...childEvent, parentFlag: true });\n\n        if (isEnd) {\n            childMoveable.state.gesto = null;\n        }\n        return result;\n    });\n    if (isStart) {\n        datas.childGestos = moveables.map(child => child.state.gesto);\n    }\n    return childs;\n}\nexport function triggerChildAble<T extends Able>(\n    moveable: MoveableGroupInterface<any, any>,\n    able: T,\n    type: keyof T & string,\n    e: any,\n    eachEvent: (movebale: MoveableManagerInterface<any, any>, ev: any) => any = (_, ev) => ev,\n    callback?: (moveable: MoveableManagerInterface<any, any>, ev: any, result: any, index: number) => any,\n) {\n    const isEnd = !!type.match(/End$/g);\n    const events = fillChildEvents(moveable, able.name, e);\n    const moveables = moveable.moveables;\n    const childs = events.map((ev, i) => {\n        const childMoveable = moveables[i];\n        let childEvent = ev;\n\n        childEvent = eachEvent(childMoveable, ev);\n\n        const result = (able as any)[type]!(childMoveable,  { ...childEvent, parentFlag: true });\n\n        result && callback && callback(childMoveable, ev, result, i);\n\n        if (isEnd) {\n            childMoveable.state.gesto = null;\n        }\n        return result;\n    });\n\n    return childs;\n}\n","\nimport {\n    invert, calculate, minus, plus,\n    convertPositionMatrix,\n    createScaleMatrix, multiply, fromTranslation, convertDimension,\n} from \"@scena/matrix\";\nimport {\n    calculatePoses, getAbsoluteMatrix, getAbsolutePosesByState,\n    calculatePosition, calculateInversePosition, getTransform, calculateMoveablePosition\n} from \"../utils\";\nimport { splitUnit, isArray, splitSpace, average } from \"@daybrush/utils\";\nimport {\n    MoveableManagerState, ResizableProps, MoveableManagerInterface,\n    OnTransformEvent, OnTransformStartEvent, DraggableProps, OnDrag\n} from \"../types\";\nimport Draggable from \"../ables/Draggable\";\nimport { setCustomDrag } from \"./CustomGesto\";\nimport { parse, parseMat } from \"css-to-mat\";\n\nexport function calculatePointerDist(moveable: MoveableManagerInterface, e: any) {\n    const { clientX, clientY, datas } = e;\n    const {\n        moveableClientRect,\n        rootMatrix,\n        is3d,\n        pos1,\n    } = moveable.state;\n    const { left, top } = moveableClientRect;\n    const n = is3d ? 4 : 3;\n    const [posX, posY] = minus(calculateInversePosition(rootMatrix, [clientX - left, clientY - top], n), pos1);\n    const [distX, distY] = getDragDist({ datas, distX: posX, distY: posY });\n\n    return [distX, distY];\n}\n\nexport function setDragStart(moveable: MoveableManagerInterface<any>, { datas }: any) {\n    const {\n        allMatrix,\n        beforeMatrix,\n        is3d,\n        left,\n        top,\n        origin,\n        offsetMatrix,\n        targetMatrix,\n        transformOrigin,\n    } = moveable.state;\n    const n = is3d ? 4 : 3;\n\n    datas.is3d = is3d;\n    datas.matrix = allMatrix;\n    datas.targetMatrix = targetMatrix;\n    datas.beforeMatrix = beforeMatrix;\n    datas.offsetMatrix = offsetMatrix;\n    datas.transformOrigin = transformOrigin;\n    datas.inverseMatrix = invert(allMatrix, n);\n    datas.inverseBeforeMatrix = invert(beforeMatrix, n);\n    datas.absoluteOrigin = convertPositionMatrix(plus([left, top], origin), n);\n    datas.startDragBeforeDist = calculate(datas.inverseBeforeMatrix, datas.absoluteOrigin, n);\n    datas.startDragDist = calculate(datas.inverseMatrix, datas.absoluteOrigin, n);\n}\nexport function getTransformDirection(e: any) {\n    return calculateMoveablePosition(e.datas.beforeTransform, [50, 50], 100, 100).direction;\n}\nexport function resolveTransformEvent(event: any, functionName: string) {\n    const {\n        datas,\n        originalDatas: {\n            beforeRenderable: originalDatas,\n        },\n    } = event;\n\n    const index = datas.transformIndex;\n    const nextTransforms = originalDatas.nextTransforms;\n    const nextTransformAppendedIndexes = originalDatas.nextTransformAppendedIndexes;\n    const nextIndex = index === -1 ? nextTransforms.length\n        : index + nextTransformAppendedIndexes.filter((i: number) => i < index).length;\n\n    const result = getTransform(nextTransforms, nextIndex);\n    const targetFunction = result.targetFunction;\n    const matFunctionName = functionName === \"rotate\" ? \"rotateZ\" : functionName;\n\n    datas.beforeFunctionTexts = result.beforeFunctionTexts;\n    datas.afterFunctionTexts = result.afterFunctionTexts;\n    datas.beforeTransform = result.beforeFunctionMatrix;\n    datas.targetTansform = result.targetFunctionMatrix;\n    datas.afterTransform = result.afterFunctionMatrix;\n    datas.targetAllTransform = result.allFunctionMatrix;\n\n    if (targetFunction.functionName === matFunctionName) {\n        datas.afterFunctionTexts.splice(0, 1);\n        datas.isAppendTransform = false;\n    } else {\n        datas.isAppendTransform = true;\n        originalDatas.nextTransformAppendedIndexes = [...nextTransformAppendedIndexes, nextIndex];\n    }\n}\n\nexport function convertTransformFormat(datas: any, value: any, dist: any) {\n    return `${datas.beforeFunctionTexts.join(\" \")} ${datas.isAppendTransform ? dist : value} ${datas.afterFunctionTexts.join(\" \")}`;\n}\nexport function getTransformDist({ datas, distX, distY }: any) {\n    const [bx, by] = getBeforeDragDist({ datas, distX, distY });\n    // B * [tx, ty] * A = [bx, by] * targetMatrix;\n    // [tx, ty] = B-1 * [bx, by] * targetMatrix * A-1 * [0, 0];\n\n    const res = getTransfromMatrix(datas, fromTranslation([bx, by], 4));\n\n    return calculate(res, convertPositionMatrix([0, 0, 0], 4), 4);\n}\nexport function getTransfromMatrix(datas: any, targetMatrix: number[], isAfter?: boolean) {\n    const {\n        beforeTransform,\n        afterTransform,\n        targetAllTransform,\n    } = datas;\n\n    // B * afterTargetMatrix * A = (targetMatrix * targetAllTransform)\n    // afterTargetMatrix = B-1 * targetMatrix * targetAllTransform * A-1\n    // nextTargetMatrix = (targetMatrix * targetAllTransform)\n    const nextTargetMatrix\n        = isAfter\n        ? multiply(targetAllTransform, targetMatrix, 4)\n        : multiply(targetMatrix, targetAllTransform, 4);\n\n    // res1 = B-1 * nextTargetMatrix\n    const res1 = multiply(invert(beforeTransform, 4), nextTargetMatrix, 4);\n\n    // res3 = res2 * A-1\n    const afterTargetMatrix = multiply(res1, invert(afterTransform, 4), 4);\n\n    return afterTargetMatrix;\n}\nexport function getBeforeDragDist({ datas, distX, distY }: any) {\n    // TT = BT\n    const {\n        inverseBeforeMatrix,\n        is3d,\n        startDragBeforeDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    // ABS_ORIGIN * [distX, distY] = BM * (ORIGIN + [tx, ty])\n    // BM -1 * ABS_ORIGIN * [distX, distY] - ORIGIN = [tx, ty]\n    return minus(\n        calculate(\n            inverseBeforeMatrix,\n            plus(absoluteOrigin, [distX, distY]),\n            n,\n        ),\n        startDragBeforeDist,\n    );\n}\nexport function getDragDist({ datas, distX, distY }: any, isBefore?: boolean) {\n    const {\n        inverseBeforeMatrix,\n        inverseMatrix,\n        is3d,\n        startDragBeforeDist,\n        startDragDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    return minus(\n        calculate(\n            isBefore ? inverseBeforeMatrix : inverseMatrix,\n            plus(absoluteOrigin, [distX, distY]),\n            n,\n        ),\n        isBefore ? startDragBeforeDist : startDragDist,\n    );\n}\nexport function getInverseDragDist({ datas, distX, distY }: any, isBefore?: boolean) {\n    const {\n        beforeMatrix,\n        matrix,\n        is3d,\n        startDragBeforeDist,\n        startDragDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    return minus(\n        calculate(\n            isBefore ? beforeMatrix : matrix,\n            plus(isBefore ? startDragBeforeDist : startDragDist, [distX, distY]),\n            n,\n        ),\n        absoluteOrigin,\n    );\n}\n\nexport function calculateTransformOrigin(\n    transformOrigin: string[],\n    width: number,\n    height: number,\n    prevWidth: number = width,\n    prevHeight: number = height,\n    prevOrigin: number[] = [0, 0],\n) {\n\n    if (!transformOrigin) {\n        return prevOrigin;\n    }\n    return transformOrigin.map((pos, i) => {\n        const { value, unit } = splitUnit(pos);\n\n        const prevSize = (i ? prevHeight : prevWidth);\n        const size = (i ? height : width);\n        if (pos === \"%\" || isNaN(value)) {\n            // no value but %\n\n            const measureRatio = prevSize ? prevOrigin[i] / prevSize : 0;\n\n            return size * measureRatio;\n        } else if (unit !== \"%\") {\n            return value;\n        }\n        return size * value / 100;\n    });\n}\nexport function getPosIndexesByDirection(direction: number[]) {\n    const indexes: number[] = [];\n\n    if (direction[1] >= 0) {\n        if (direction[0] >= 0) {\n            indexes.push(3);\n        }\n        if (direction[0] <= 0) {\n            indexes.push(2);\n        }\n    }\n    if (direction[1] <= 0) {\n        if (direction[0] >= 0) {\n            indexes.push(1);\n        }\n        if (direction[0] <= 0) {\n            indexes.push(0);\n        }\n    }\n    return indexes;\n}\nexport function getPosesByDirection(\n    poses: number[][],\n    direction: number[],\n) {\n    /*\n    [-1, -1](pos1)       [0, -1](pos1,pos2)       [1, -1](pos2)\n    [-1, 0](pos1, pos3)                           [1, 0](pos2, pos4)\n    [-1, 1](pos3)        [0, 1](pos3, pos4)       [1, 1](pos4)\n    */\n    return getPosIndexesByDirection(direction).map(index => poses[index]);\n}\nexport function getPosByDirection(\n    poses: number[][],\n    direction: number[],\n) {\n    /*\n    [-1, -1](pos1)       [0, -1](pos1,pos2)       [1, -1](pos2)\n    [-1, 0](pos1, pos3)                           [1, 0](pos2, pos4)\n    [-1, 1](pos3)        [0, 1](pos3, pos4)       [1, 1](pos4)\n    */\n    const nextPoses = getPosesByDirection(poses, direction);\n\n    return [\n        average(nextPoses.map(pos => pos[0])),\n        average(nextPoses.map(pos => pos[1])),\n    ];\n}\nexport function getPosByReverseDirection(\n    poses: number[][],\n    direction: number[],\n) {\n    /*\n    [-1, -1](pos4)       [0, -1](pos3,pos4)       [1, -1](pos3)\n    [-1, 0](pos2, pos4)                           [1, 0](pos3, pos1)\n    [-1, 1](pos2)        [0, 1](pos1, pos2)       [1, 1](pos1)\n    */\n\n    return getPosByDirection(poses, direction.map(dir => -dir));\n}\n\nfunction getDist(\n    startPos: number[],\n    matrix: number[],\n    width: number,\n    height: number,\n    n: number,\n    fixedDirection: number[],\n) {\n    const poses = calculatePoses(matrix, width, height, n);\n    const fixedPos = getPosByDirection(poses, fixedDirection);\n    const distX = startPos[0] - fixedPos[0];\n    const distY = startPos[1] - fixedPos[1];\n\n    return [distX, distY];\n}\nexport function getNextMatrix(\n    offsetMatrix: number[],\n    targetMatrix: number[],\n    origin: number[],\n    n: number,\n) {\n    return multiply(\n        offsetMatrix,\n        getAbsoluteMatrix(targetMatrix, n, origin),\n        n,\n    );\n}\nexport function getNextTransformMatrix(\n    state: MoveableManagerState<any>,\n    datas: any,\n    transform: string,\n) {\n    const {\n        transformOrigin,\n        offsetMatrix,\n        is3d,\n    } = state;\n    const {\n        beforeTransform,\n        afterTransform,\n    } = datas;\n    const n = is3d ? 4 : 3;\n    const targetTransform = parseMat([transform]);\n\n    return getNextMatrix(\n        offsetMatrix,\n        convertDimension(multiply(multiply(beforeTransform, targetTransform as any, 4), afterTransform, 4), 4, n),\n        transformOrigin,\n        n,\n    );\n}\nexport function scaleMatrix(\n    state: MoveableManagerState<any>,\n    scale: number[],\n) {\n    const {\n        transformOrigin,\n        offsetMatrix,\n        is3d,\n        targetMatrix,\n    } = state;\n    const n = is3d ? 4 : 3;\n\n    return getNextMatrix(\n        offsetMatrix,\n        multiply(targetMatrix, createScaleMatrix(scale, n), n),\n        transformOrigin,\n        n,\n    );\n}\n\nexport function fillTransformStartEvent(e: any): OnTransformStartEvent {\n    const originalDatas = e.originalDatas.beforeRenderable;\n    return {\n        setTransform: (transform: string | string[], index: number = -1) => {\n            originalDatas.startTransforms = isArray(transform) ? transform : splitSpace(transform);\n            setTransformIndex(e, index);\n        },\n        setTransformIndex: (index: number) => {\n            setTransformIndex(e, index);\n        },\n    };\n}\nexport function setDefaultTransformIndex(e: any) {\n    setTransformIndex(e, -1);\n}\nexport function setTransformIndex(e: any, index: number) {\n    const originalDatas = e.originalDatas.beforeRenderable;\n    const datas = e.datas;\n    datas.transformIndex = index;\n    if (index === -1) {\n        return;\n    }\n    const transform = originalDatas.startTransforms[index];\n\n    if (!transform) {\n        return;\n    }\n    const info = parse([transform]);\n\n    datas.startValue = info[0].functionValue;\n}\nexport function fillOriginalTransform(\n    e: any,\n    transform: string,\n) {\n    const originalDatas = e.originalDatas.beforeRenderable;\n\n    originalDatas.nextTransforms = splitSpace(transform);\n}\nexport function fillTransformEvent(\n    moveable: MoveableManagerInterface<DraggableProps>,\n    nextTransform: string,\n    delta: number[],\n    isPinch: boolean,\n    e: any,\n): OnTransformEvent {\n    fillOriginalTransform(e, nextTransform);\n    return {\n        transform: nextTransform,\n        drag: Draggable.drag(\n            moveable,\n            setCustomDrag(e, moveable.state, delta, isPinch, false),\n        ) as OnDrag,\n    };\n}\nexport function getTranslateDist(\n    moveable: MoveableManagerInterface<any>,\n    transform: string,\n    fixedDirection: number[],\n    fixedPosition: number[],\n    datas: any,\n) {\n    const state = moveable.state;\n    const {\n        left,\n        top,\n    } = state;\n\n    const groupable = moveable.props.groupable;\n    const nextMatrix = getNextTransformMatrix(moveable.state, datas, transform);\n    const groupLeft = groupable ? left : 0;\n    const groupTop = groupable ? top : 0;\n    const nextFixedPosition = getDirectionOffset(moveable, fixedDirection, nextMatrix);\n    const dist = minus(fixedPosition, nextFixedPosition);\n    return minus(dist, [groupLeft, groupTop]);\n}\nexport function getScaleDist(\n    moveable: MoveableManagerInterface<any>,\n    scaleDist: number[],\n    fixedDirection: number[],\n    fixedPosition: number[],\n    datas: any,\n) {\n    return getTranslateDist(\n        moveable,\n        `scale(${scaleDist.join(\", \")})`,\n        fixedDirection,\n        fixedPosition,\n        datas,\n    );\n}\nexport function getOriginDirection(moveable: MoveableManagerInterface<any>) {\n    const {\n        width,\n        height,\n        transformOrigin,\n    } = moveable.state;\n    return [\n        -1 + transformOrigin[0] / (width / 2),\n        -1 + transformOrigin[1] / (height / 2),\n    ];\n}\nexport function getDirectionOffset(\n    moveable: MoveableManagerInterface, direction: number[],\n    nextMatrix: number[] = moveable.state.allMatrix,\n) {\n    const {\n        width,\n        height,\n        is3d,\n    } = moveable.state;\n    const n = is3d ? 4 : 3;\n    const nextFixedOffset = [\n        width / 2 * (1 + direction[0]),\n        height / 2 * (1 + direction[1]),\n    ];\n    return calculatePosition(nextMatrix, nextFixedOffset, n);\n}\nexport function getRotateDist(\n    moveable: MoveableManagerInterface<any>,\n    rotateDist: number,\n    fixedPosition: number[],\n    datas: any,\n) {\n    const fixedDirection = getOriginDirection(moveable);\n\n    return getTranslateDist(\n        moveable,\n        `rotate(${rotateDist}deg)`,\n        fixedDirection,\n        fixedPosition,\n        datas,\n    );\n}\nexport function getResizeDist(\n    moveable: MoveableManagerInterface<any>,\n    width: number,\n    height: number,\n    fixedDirection: number[],\n    fixedPosition: number[],\n    transformOrigin: string[],\n) {\n    const {\n        groupable,\n    } = moveable.props;\n    const {\n        transformOrigin: prevOrigin,\n        targetMatrix,\n        offsetMatrix,\n        is3d,\n        width: prevWidth,\n        height: prevHeight,\n        left,\n        top,\n    } = moveable.state;\n\n    const n = is3d ? 4 : 3;\n    const nextOrigin = calculateTransformOrigin(\n        transformOrigin!,\n        width,\n        height,\n        prevWidth,\n        prevHeight,\n        prevOrigin,\n    );\n    const groupLeft = groupable ? left : 0;\n    const groupTop = groupable ? top : 0;\n    const nextMatrix = getNextMatrix(offsetMatrix, targetMatrix, nextOrigin, n);\n    const dist = getDist(fixedPosition, nextMatrix, width, height, n, fixedDirection);\n\n    return minus(dist, [groupLeft, groupTop]);\n}\nexport function getAbsolutePosition(\n    moveable: MoveableManagerInterface<ResizableProps>,\n    direction: number[],\n) {\n    return getPosByDirection(getAbsolutePosesByState(moveable.state), direction);\n}\n","import {\n    SnapInfo, SnappableProps, SnappableState,\n    Guideline, ResizableProps, ScalableProps, SnapOffsetInfo, MoveableManagerInterface, MoveableClientRect} from \"../../types\";\nimport { selectValue, throttle, getAbsolutePosesByState, getRect, groupBy, getTinyDist, calculateInversePosition, calculatePosition, roundSign } from \"../../utils\";\nimport { getPosByDirection, getPosesByDirection } from \"../../gesto/GestoUtils\";\nimport { TINY_NUM } from \"../../consts\";\nimport { minus } from \"@scena/matrix\";\nimport { getMinMaxs } from \"overlap-area\";\n\nexport function calculateContainerPos(\n    rootMatrix: number[],\n    containerRect: MoveableClientRect,\n    n: number,\n) {\n    const clientPos = calculatePosition(\n        rootMatrix, [containerRect.clientLeft!, containerRect.clientTop!], n);\n\n    return [\n        containerRect.left + clientPos[0],\n        containerRect.top + clientPos[1],\n    ];\n}\n\nexport function getGapGuidelines(\n    guidelines: Guideline[],\n    type: \"vertical\" | \"horizontal\",\n    snapThreshold: number,\n    index: number,\n    [start, end]: number[],\n    [otherStart, otherEnd]: number[],\n) {\n    const totalGuidelines: Guideline[] = [];\n    const otherIndex = index ? 0 : 1;\n    const otherType = type === \"vertical\" ? \"horizontal\" : \"vertical\";\n\n    const elementGuidelines\n        = groupBy(guidelines.filter(({ type: guidelineType }) => guidelineType === type), ({ element }) => element)\n            .map(group => group[0])\n            .filter(({ pos, sizes }) => pos[otherIndex] <= otherEnd\n                && otherStart <= pos[otherIndex] + sizes![otherIndex]);\n\n    elementGuidelines.forEach(guideline1 => {\n        const elementStart = guideline1.pos[index];\n        const elementEnd = elementStart + guideline1.sizes![index];\n\n        elementGuidelines.forEach(({\n            pos: guideline2Pos,\n            sizes: guideline2Sizes,\n            element: guideline2Element,\n        }) => {\n            const targetStart = guideline2Pos[index];\n            const targetEnd = targetStart + guideline2Sizes![index];\n            let pos = 0;\n            let gap = 0;\n            let canSnap = true;\n\n            if (elementEnd <= targetStart) {\n                // gap -\n                gap = elementEnd - targetStart;\n                pos = targetEnd - gap;\n\n                if (start < pos - snapThreshold) {\n                    canSnap = false;\n                }\n                // element target moveable\n            } else if (targetEnd <= elementStart) {\n                // gap +\n                gap = elementStart - targetEnd;\n                pos = targetStart - gap;\n\n                if (end > pos + snapThreshold) {\n                    canSnap = false;\n                }\n                // moveable target element\n            } else {\n                return;\n            }\n            if (canSnap) {\n                totalGuidelines.push({\n                    pos: otherType === \"vertical\" ? [pos, guideline2Pos[1]] : [guideline2Pos[0], pos],\n                    element: guideline2Element,\n                    sizes: guideline2Sizes,\n                    size: 0,\n                    type: otherType,\n                    gap,\n                    gapGuidelines: elementGuidelines,\n                });\n            }\n            if (elementEnd <= start && end <= targetStart) {\n                // elementEnd   moveable   target\n                const centerPos = ((targetStart + elementEnd) - (end - start)) / 2;\n\n                if (throttle(start - (centerPos - snapThreshold), 0.1) >= 0) {\n                    totalGuidelines.push({\n                        pos: otherType === \"vertical\" ? [centerPos, guideline2Pos[1]] : [guideline2Pos[0], centerPos],\n                        element: guideline2Element,\n                        sizes: guideline2Sizes,\n                        size: 0,\n                        type: otherType,\n                        gap: elementEnd - start,\n                        gapGuidelines: elementGuidelines,\n                    });\n                }\n            }\n        });\n    });\n    return totalGuidelines;\n}\nexport function addGuidelines(\n    totalGuidelines: Guideline[],\n    width: number,\n    height: number,\n    horizontalGuidelines?: number[] | false,\n    verticalGuidelines?: number[] | false,\n    clientLeft = 0,\n    clientTop = 0,\n): Guideline[] {\n    horizontalGuidelines && horizontalGuidelines!.forEach(pos => {\n        totalGuidelines.push({ type: \"horizontal\", pos: [0, throttle(pos - clientTop, 0.1)], size: width! });\n    });\n    verticalGuidelines && verticalGuidelines!.forEach(pos => {\n        totalGuidelines.push({ type: \"vertical\", pos: [throttle(pos - clientLeft, 0.1), 0], size: height! });\n    });\n    return totalGuidelines;\n}\nexport function getElementGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    isRefresh: boolean,\n) {\n    const guidelines: Guideline[] = [];\n    const state = moveable.state;\n\n    if (isRefresh && state.guidelines && state.guidelines.length) {\n        return guidelines;\n    }\n\n    const {\n        elementGuidelines = [],\n        snapCenter,\n    } = moveable.props;\n\n    if (!elementGuidelines.length) {\n        return guidelines;\n    }\n\n    const {\n        containerClientRect,\n        targetClientRect: {\n            top: clientTop,\n            left: clientLeft,\n        },\n        rootMatrix,\n        is3d,\n    } = state;\n    const n = is3d ? 4 : 3;\n    const [containerLeft, containerTop] = calculateContainerPos(rootMatrix, containerClientRect, n);\n    const poses = getAbsolutePosesByState(state);\n    const {\n        minX: targetLeft,\n        minY: targetTop,\n    } = getMinMaxs(poses);\n    const [distLeft, distTop] = minus([targetLeft, targetTop], calculateInversePosition(rootMatrix, [\n        clientLeft - containerLeft,\n        clientTop - containerTop,\n    ], n)).map(pos => roundSign(pos));\n\n    elementGuidelines.map(el => {\n        if (\"parentElement\" in el) {\n            return {\n                element: el,\n            };\n        }\n        return el;\n    }).filter(value => {\n        return (value.refresh && isRefresh) || (!value.refresh && !isRefresh);\n    }).forEach(value => {\n        const {\n            element,\n            top: topValue,\n            left: leftValue,\n            right: rightValue,\n            bottom: bottomValue,\n        } = value;\n        const rect = element.getBoundingClientRect();\n        const left = rect.left - containerLeft;\n        const top = rect.top - containerTop;\n        const bottom = top + rect.height;\n        const right = left + rect.width;\n        const [elementLeft, elementTop] = calculateInversePosition(rootMatrix, [left, top], n);\n        const [elementRight, elementBottom] = calculateInversePosition(rootMatrix, [right, bottom], n);\n        const width = elementRight - elementLeft;\n        const height = elementBottom - elementTop;\n        const sizes = [width, height];\n\n        //top\n        if (topValue !== false) {\n            guidelines.push({\n                type: \"vertical\", element, pos: [\n                    throttle(elementLeft + distLeft, 0.1),\n                    elementTop,\n                ], size: height,\n                sizes,\n            });\n        }\n\n        // bottom\n        if (bottomValue !== false) {\n            guidelines.push({\n                type: \"vertical\", element, pos: [\n                    throttle(elementRight + distLeft, 0.1),\n                    elementTop,\n                ], size: height,\n                sizes,\n            });\n        }\n\n        // left\n        if (leftValue !== false) {\n            guidelines.push({\n                type: \"horizontal\", element, pos: [\n                    elementLeft,\n                    throttle(elementTop + distTop, 0.1),\n                ], size: width,\n                sizes,\n            });\n        }\n\n        // right\n        if (rightValue !== false) {\n            guidelines.push({\n                type: \"horizontal\", element, pos: [\n                    elementLeft,\n                    throttle(elementBottom + distTop, 0.1),\n                ], size: width,\n                sizes,\n            });\n        }\n\n        if (snapCenter) {\n            guidelines.push({\n                type: \"vertical\",\n                element,\n                pos: [\n                    throttle((elementLeft + elementRight) / 2 + distLeft, 0.1),\n                    elementTop,\n                ],\n                size: height,\n                sizes,\n                center: true,\n            });\n            guidelines.push({\n                type: \"horizontal\",\n                element,\n                pos: [\n                    elementLeft,\n                    throttle((elementTop + elementBottom) / 2 + distTop, 0.1),\n                ],\n                size: width,\n                sizes,\n                center: true,\n            });\n        }\n    });\n    return guidelines;\n}\nexport function getTotalGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n) {\n    const {\n        staticGuidelines,\n        containerClientRect: {\n            scrollHeight: containerHeight,\n            scrollWidth: containerWidth,\n            clientHeight: containerClientHeight,\n            clientWidth: containerClientWidth,\n            overflow,\n            clientLeft,\n            clientTop,\n        },\n    } = moveable.state;\n    const props = moveable.props;\n    const {\n        snapHorizontal = true,\n        snapVertical = true,\n        snapGap = true,\n        verticalGuidelines,\n        horizontalGuidelines,\n        snapThreshold = 5,\n    } = props;\n    const totalGuidelines: Guideline[] = [...staticGuidelines, ...getElementGuidelines(moveable, true)];\n\n    if (snapGap) {\n        const { top, left, bottom, right } = getRect(getAbsolutePosesByState(moveable.state));\n        const elementGuidelines = staticGuidelines.filter(({ element }) => element);\n\n        totalGuidelines.push(...getGapGuidelines(\n            elementGuidelines,\n            \"horizontal\",\n            snapThreshold,\n            0,\n            [left, right],\n            [top, bottom],\n        ), ...getGapGuidelines(\n            elementGuidelines,\n            \"vertical\",\n            snapThreshold,\n            1,\n            [top, bottom],\n            [left, right],\n        ));\n    }\n\n    addGuidelines(\n        totalGuidelines,\n        overflow ? containerWidth! : containerClientWidth!,\n        overflow ? containerHeight! : containerClientHeight!,\n        snapHorizontal && horizontalGuidelines,\n        snapVertical && verticalGuidelines,\n        clientLeft,\n        clientTop,\n    );\n\n    return totalGuidelines;\n}\nexport function checkMoveableSnapPoses(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    posesX: number[],\n    posesY: number[],\n    snapCenter?: boolean,\n    customSnapThreshold?: number,\n) {\n    const props = moveable.props;\n    const {\n        snapElement = true,\n    } = props;\n    const snapThreshold = selectValue<number>(customSnapThreshold, props.snapThreshold, 5);\n\n    return checkSnapPoses(\n        moveable.state.guidelines,\n        posesX,\n        posesY,\n        {\n            snapThreshold,\n            snapCenter,\n            snapElement,\n        },\n    );\n}\n\nexport function checkSnapPoses(\n    guidelines: Guideline[],\n    posesX: number[],\n    posesY: number[],\n    options: {\n        snapThreshold?: number,\n        snapCenter?: boolean,\n        snapElement?: boolean,\n    },\n) {\n    return {\n        vertical: checkSnap(guidelines, \"vertical\", posesX, options),\n        horizontal: checkSnap(guidelines, \"horizontal\", posesY, options),\n    };\n}\nexport function checkSnapKeepRatio(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    startPos: number[],\n    endPos: number[],\n): {\n    vertical: SnapOffsetInfo,\n    horizontal: SnapOffsetInfo,\n} {\n    const [endX, endY] = endPos;\n    const [startX, startY] = startPos;\n    let [dx, dy] = minus(endPos, startPos);\n    const isBottom = dy > 0;\n    const isRight = dx > 0;\n\n    dx = getTinyDist(dx);\n    dy = getTinyDist(dy);\n\n    const verticalInfo: SnapOffsetInfo = {\n        isSnap: false,\n        offset: 0,\n        pos: 0,\n    };\n    const horizontalInfo: SnapOffsetInfo = {\n        isSnap: false,\n        offset: 0,\n        pos: 0,\n    };\n\n    if (dx === 0 && dy === 0) {\n        return {\n            vertical: verticalInfo,\n            horizontal: horizontalInfo,\n        };\n    }\n    const {\n        vertical: verticalSnapInfo,\n        horizontal: horizontalSnapInfo,\n    } = checkMoveableSnapPoses(moveable, dx ? [endX] : [], dy ? [endY] : []);\n\n    verticalSnapInfo.posInfos.filter(({ pos }) => {\n        return isRight ? pos >= startX : pos <= startX;\n    });\n    horizontalSnapInfo.posInfos.filter(({ pos }) => {\n        return isBottom ? pos >= startY : pos <= startY;\n    });\n    verticalSnapInfo.isSnap = verticalSnapInfo.posInfos.length > 0;\n    horizontalSnapInfo.isSnap = horizontalSnapInfo.posInfos.length > 0;\n\n    const {\n        isSnap: isVerticalSnap,\n        guideline: verticalGuideline,\n    } = getNearestSnapGuidelineInfo(verticalSnapInfo);\n    const {\n        isSnap: isHorizontalSnap,\n        guideline: horizontalGuideline,\n    } = getNearestSnapGuidelineInfo(horizontalSnapInfo);\n    const horizontalPos = isHorizontalSnap ? horizontalGuideline!.pos[1] : 0;\n    const verticalPos = isVerticalSnap ? verticalGuideline!.pos[0] : 0;\n\n    if (dx === 0) {\n        if (isHorizontalSnap) {\n            horizontalInfo.isSnap = true;\n            horizontalInfo.pos = horizontalGuideline!.pos[1];\n            horizontalInfo.offset = endY - horizontalInfo.pos;\n        }\n    } else if (dy === 0) {\n        if (isVerticalSnap) {\n            verticalInfo.isSnap = true;\n            verticalInfo.pos = verticalPos;\n            verticalInfo.offset = endX - verticalPos;\n        }\n    } else {\n        // y - y1 = a * (x - x1)\n        const a = dy / dx;\n        const b = endPos[1] - a * endX;\n        let y = 0;\n        let x = 0;\n        let isSnap = false;\n\n        if (isVerticalSnap) {\n            x = verticalPos;\n            y = a * x + b;\n            isSnap = true;\n        } else if (isHorizontalSnap) {\n            y = horizontalPos;\n            x = (y - b) / a;\n            isSnap = true;\n        }\n        if (isSnap) {\n            verticalInfo.isSnap = true;\n            verticalInfo.pos = x;\n            verticalInfo.offset = endX - x;\n\n            horizontalInfo.isSnap = true;\n            horizontalInfo.pos = y;\n            horizontalInfo.offset = endY - y;\n        }\n    }\n    return {\n        vertical: verticalInfo,\n        horizontal: horizontalInfo,\n    };\n}\n\nexport function checkSnaps(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    rect: {\n        left?: number,\n        top?: number,\n        bottom?: number,\n        right?: number,\n        center?: number,\n        middle?: number,\n    },\n    isCenter: boolean,\n    customSnapThreshold?: number,\n) {\n    const snapCenter = moveable.props.snapCenter;\n    const isSnapCenter = snapCenter! && isCenter;\n\n    let verticalNames: Array<\"left\" | \"center\" | \"right\"> = [\"left\", \"right\"];\n    let horizontalNames: Array<\"top\" | \"middle\" | \"bottom\"> = [\"top\", \"bottom\"];\n\n    if (isSnapCenter) {\n        verticalNames.push(\"center\");\n        horizontalNames.push(\"middle\");\n    }\n    verticalNames = verticalNames.filter(name => name in rect);\n    horizontalNames = horizontalNames.filter(name => name in rect);\n\n    return checkMoveableSnapPoses(\n        moveable,\n        verticalNames.map(name => rect[name]!),\n        horizontalNames.map(name => rect[name]!),\n        isSnapCenter,\n        customSnapThreshold,\n    );\n}\n\nexport function getNearestSnapGuidelineInfo(\n    snapInfo: SnapInfo,\n) {\n    const isSnap = snapInfo.isSnap;\n\n    if (!isSnap) {\n        return {\n            isSnap: false,\n            offset: 0,\n            dist: -1,\n            pos: 0,\n            guideline: null,\n        };\n    }\n    const posInfo = snapInfo.posInfos[0];\n    const guidelineInfo = posInfo!.guidelineInfos[0];\n    const offset = guidelineInfo!.offset;\n    const dist = guidelineInfo!.dist;\n    const guideline = guidelineInfo!.guideline;\n\n    return {\n        isSnap,\n        offset,\n        dist,\n        pos: posInfo!.pos,\n        guideline,\n    };\n}\n\nfunction checkSnap(\n    guidelines: Guideline[],\n    targetType: \"horizontal\" | \"vertical\",\n    targetPoses: number[],\n    {\n        snapThreshold = 5,\n        snapElement,\n        snapCenter,\n    }: {\n        snapThreshold?: number,\n        snapCenter?: boolean,\n        snapElement?: boolean,\n    } = {},\n): SnapInfo {\n    if (!guidelines || !guidelines.length) {\n        return {\n            isSnap: false,\n            index: -1,\n            posInfos: [],\n        };\n    }\n    const isVertical = targetType === \"vertical\";\n    const posType = isVertical ? 0 : 1;\n\n    const snapPosInfos = targetPoses.map((targetPos, index) => {\n        const guidelineInfos = guidelines.map(guideline => {\n            const { pos } = guideline;\n            const offset = targetPos - pos[posType];\n\n            return {\n                offset,\n                dist: Math.abs(offset),\n                guideline,\n            };\n        }).filter(({ guideline, dist }) => {\n            const { type, center, element } = guideline;\n            if (\n                (!snapElement && element)\n                || (!snapCenter && center)\n                || type !== targetType\n                || dist > snapThreshold\n            ) {\n                return false;\n            }\n            return true;\n        }).sort(\n            (a, b) => a.dist - b.dist,\n        );\n\n\n        return {\n            pos: targetPos,\n            index,\n            guidelineInfos,\n        };\n    }).filter(snapPosInfo => {\n        return snapPosInfo.guidelineInfos.length > 0;\n    }).sort((a, b) => {\n        return a.guidelineInfos[0].dist - b.guidelineInfos[0].dist;\n    });\n\n    const isSnap = snapPosInfos.length > 0;\n    return {\n        isSnap,\n        index: isSnap ? snapPosInfos[0].index : -1,\n        posInfos: snapPosInfos,\n    };\n}\n\nexport function getSnapInfosByDirection(\n    moveable: MoveableManagerInterface<SnappableProps & (ResizableProps | ScalableProps), SnappableState>,\n    poses: number[][],\n    snapDirection: number[],\n) {\n    let nextPoses: number[][] = [];\n    if (snapDirection[0] && snapDirection[1]) {\n        nextPoses = [\n            snapDirection,\n            [-snapDirection[0], snapDirection[1]],\n            [snapDirection[0], -snapDirection[1]],\n        ].map(direction => getPosByDirection(poses, direction));\n    } else if (!snapDirection[0] && !snapDirection[1]) {\n        const alignPoses = [poses[0], poses[1], poses[3], poses[2], poses[0]];\n\n        for (let i = 0; i < 4; ++i) {\n            nextPoses.push(alignPoses[i]);\n            nextPoses.push([\n                (alignPoses[i][0] + alignPoses[i + 1][0]) / 2,\n                (alignPoses[i][1] + alignPoses[i + 1][1]) / 2,\n            ]);\n        }\n    } else {\n        if (moveable.props.keepRatio) {\n            nextPoses = [\n                [-1, -1],\n                [-1, 1],\n                [1, -1],\n                [1, 1],\n                snapDirection,\n            ].map(dir => getPosByDirection(poses, dir));\n        } else {\n            nextPoses = getPosesByDirection(poses, snapDirection);\n\n            if (nextPoses.length > 1) {\n                nextPoses.push([\n                    (nextPoses[0][0] + nextPoses[1][0]) / 2,\n                    (nextPoses[0][1] + nextPoses[1][1]) / 2,\n                ]);\n            }\n        }\n    }\n    return checkMoveableSnapPoses(moveable, nextPoses.map(pos => pos[0]), nextPoses.map(pos => pos[1]), true, 1);\n}\n\nexport function checkSnapBoundPriority(\n    a: { isBound: boolean, isSnap: boolean, offset: number },\n    b: { isBound: boolean, isSnap: boolean, offset: number },\n) {\n    const aDist = Math.abs(a.offset);\n    const bDist = Math.abs(b.offset);\n\n    if (a.isBound && b.isBound) {\n        return bDist - aDist;\n    } else if (a.isBound) {\n        return -1;\n    } else if (b.isBound) {\n        return 1;\n    } else if (a.isSnap && b.isSnap) {\n        return bDist - aDist;\n    } else if (a.isSnap) {\n        return -1;\n    } else if (b.isSnap) {\n        return 1;\n    } else if (aDist < TINY_NUM) {\n        return 1;\n    } else if (bDist < TINY_NUM) {\n        return -1;\n    }\n    return aDist - bDist;\n}\nexport function getNearOffsetInfo<T extends { offset: number[], isBound: boolean, isSnap: boolean, sign: number[] }>(\n    offsets: T[],\n    index: number,\n) {\n    return offsets.slice().sort((a, b) => {\n        const aSign = a.sign[index];\n        const bSign = b.sign[index];\n        const aOffset = a.offset[index];\n        const bOffset = b.offset[index];\n        // -1 The positions of a and b do not change.\n        // 1 The positions of a and b are reversed.\n        if (!aSign) {\n            return 1;\n        } else if (!bSign) {\n            return -1;\n        }\n        return checkSnapBoundPriority(\n            { isBound: a.isBound, isSnap: a.isSnap, offset: aOffset },\n            { isBound: b.isBound, isSnap: b.isSnap, offset: bOffset },\n        );\n    })[0];\n}\n","import { average, getRad } from \"@daybrush/utils\";\nimport { rotate } from \"@scena/matrix\";\nimport { maxOffset, getDistSize, throttle, getTinyDist } from \"../../utils\";\n\nimport { SnappableProps, DraggableProps, RotatableProps, MoveableManagerInterface } from \"../../types\";\nimport { getDragDist, getPosByDirection, getInverseDragDist } from \"../../gesto/GestoUtils\";\nimport { getNearOffsetInfo } from \"./snap\";\nimport { TINY_NUM } from \"../../consts\";\n\nfunction isStartLine(dot: number[], line: number[][]) {\n    // l    o     => true\n    // o    l    => false\n    const cx = average([line[0][0], line[1][0]]);\n    const cy = average([line[0][1], line[1][1]]);\n\n    return {\n        vertical: cx <= dot[0],\n        horizontal: cy <= dot[1],\n    };\n}\nfunction hitTestLine(\n    dot: number[],\n    [pos1, pos2]: number[][],\n) {\n    let dx = pos2[0] - pos1[0];\n    let dy = pos2[1] - pos1[1];\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n    let test1: number;\n    let test2: number;\n    if (!dx) {\n        test1 = pos1[0];\n        test2 = dot[0];\n    } else if (!dy) {\n        test1 = pos1[1];\n        test2 = dot[1];\n    } else {\n        const a = dy / dx;\n\n        // y = a * (x - pos1) + pos1\n        test1 = a * (dot[0] - pos1[0]) + pos1[1];\n        test2 = dot[1];\n    }\n    return test1 - test2;\n}\nfunction isSameStartLine(dots: number[][], line: number[][], error: number = TINY_NUM) {\n    const centerSign = hitTestLine(dots[0], line) <= 0;\n\n    return dots.slice(1).every(dot => {\n        const value = hitTestLine(dot, line);\n        const sign = value <= 0;\n        return sign === centerSign || Math.abs(value) <= error;\n    });\n}\nfunction checkInnerBoundDot(\n    pos: number,\n    start: number,\n    end: number,\n    isStart: boolean,\n    threshold: number = 0,\n) {\n    if (\n        (isStart && start - threshold <= pos)\n        || (!isStart && pos <= end + threshold)\n    ) {\n        // false 402 565 602 => 37 ([0, 37])\n        // true 400 524.9712603540036 600 => 124 ([124, 0])\n        // true 400 410 600 => 10 ([10, 0])\n        return {\n            isBound: true,\n            offset: isStart ? start - pos : end - pos,\n        };\n    }\n    return {\n        isBound: false,\n        offset: 0,\n    };\n}\n\nfunction checkInnerBound(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    line: number[][],\n    center: number[],\n) {\n    const bounds = moveable.props.innerBounds;\n\n    if (!bounds) {\n        return {\n            isAllBound: false,\n            isBound: false,\n            isVerticalBound: false,\n            isHorizontalBound: false,\n            offset: [0, 0],\n        };\n    }\n    const { left, top, width, height } = bounds;\n    const leftLine = [[left, top], [left, top + height]];\n    const topLine = [[left, top], [left + width, top]];\n    const rightLine = [[left + width, top], [left + width, top + height]];\n    const bottomLine = [[left, top + height], [left + width, top + height]];\n    const {\n        horizontal: isHorizontalStart,\n        vertical: isVerticalStart,\n    } = isStartLine(center, line);\n\n    if (isSameStartLine([\n        center,\n        [left, top],\n        [left + width, top],\n        [left, top + height],\n        [left + width, top + height],\n    ], line)) {\n        return {\n            isAllBound: false,\n            isBound: false,\n            isVerticalBound: false,\n            isHorizontalBound: false,\n            offset: [0, 0],\n        };\n    }\n\n    // test vertical\n    const topBoundInfo = checkLineBoundCollision(line, topLine, isVerticalStart);\n    const bottomBoundInfo = checkLineBoundCollision(line, bottomLine, isVerticalStart);\n\n    // test horizontal\n    const leftBoundInfo = checkLineBoundCollision(line, leftLine, isHorizontalStart);\n    const rightBoundInfo = checkLineBoundCollision(line, rightLine, isHorizontalStart);\n\n    const isAllVerticalBound = topBoundInfo.isBound && bottomBoundInfo.isBound;\n    const isVerticalBound = topBoundInfo.isBound || bottomBoundInfo.isBound;\n    const isAllHorizontalBound = leftBoundInfo.isBound && rightBoundInfo.isBound;\n    const isHorizontalBound = leftBoundInfo.isBound || rightBoundInfo.isBound;\n    const verticalOffset = maxOffset(topBoundInfo.offset, bottomBoundInfo.offset);\n    const horizontalOffset = maxOffset(leftBoundInfo.offset, rightBoundInfo.offset);\n\n    let offset = [0, 0];\n    let isBound = false;\n    let isAllBound = false;\n\n    if (Math.abs(horizontalOffset) < Math.abs(verticalOffset)) {\n        offset = [verticalOffset, 0];\n        isBound = isVerticalBound;\n        isAllBound = isAllVerticalBound;\n    } else {\n        offset = [0, horizontalOffset];\n        isBound = isHorizontalBound;\n        isAllBound = isAllHorizontalBound;\n    }\n    return {\n        isAllBound,\n        isVerticalBound,\n        isHorizontalBound,\n        isBound,\n        offset,\n    };\n}\n\nfunction checkLineBoundCollision(\n    line: number[][],\n    boundLine: number[][],\n    isStart: boolean,\n    threshold?: number,\n    isRender?: boolean,\n) {\n    const dot1 = line[0];\n    const dot2 = line[1];\n    const boundDot1 = boundLine[0];\n    const boundDot2 = boundLine[1];\n    const dy1 = getTinyDist(dot2[1] - dot1[1]);\n    const dx1 = getTinyDist(dot2[0] - dot1[0]);\n\n    const dy2 = getTinyDist(boundDot2[1] - boundDot1[1]);\n    const dx2 = getTinyDist(boundDot2[0] - boundDot1[0]);\n\n    // dx2 or dy2 is zero\n    if (!dx2) {\n        // vertical\n        if (isRender && !dy1) {\n            // 90deg\n            return {\n                isBound: false,\n                offset: 0,\n            };\n        } else if (dx1) {\n            // const y = dy1 ? dy1 / dx1 * (boundDot1[0] - dot1[0]) + dot1[1] : dot1[1];\n            const y = dy1 / dx1 * (boundDot1[0] - dot1[0]) + dot1[1];\n\n            // boundDot1[1] <= y  <= boundDot2[1]\n            return checkInnerBoundDot(y, boundDot1[1], boundDot2[1], isStart, threshold);\n        } else {\n            const offset = boundDot1[0] - dot1[0];\n\n            const isBound = Math.abs(offset) <= (threshold || 0);\n\n            return {\n                isBound,\n                offset: isBound ? offset : 0,\n            };\n        }\n    } else if (!dy2) {\n        // horizontal\n        if (isRender && !dx1) {\n            // 90deg\n            return {\n                isBound: false,\n                offset: 0,\n            };\n        } else if (dy1) {\n            // y = a * (x - x1) + y1\n            // x = (y - y1) / a + x1\n            // const a = dy1 / dx1;\n            // const x = dx1 ? (boundDot1[1] - dot1[1]) / a + dot1[0] : dot1[0];\n            const x = (boundDot1[1] - dot1[1]) / (dy1 / dx1) + dot1[0];\n\n            // boundDot1[0] <= x && x <= boundDot2[0]\n            return checkInnerBoundDot(x, boundDot1[0], boundDot2[0], isStart, threshold);\n        } else {\n            const offset = boundDot1[1] - dot1[1];\n\n            const isBound = Math.abs(offset) <= (threshold || 0);\n\n            return {\n                isBound,\n                offset: isBound ? offset : 0,\n            };\n        }\n    }\n    return {\n        isBound: false,\n        offset: 0,\n    };\n}\nexport function getInnerBoundInfo(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    lines: number[][][],\n    center: number[],\n    datas: any,\n) {\n    return lines.map(([multiple, pos1, pos2]) => {\n        const {\n            isBound,\n            offset,\n            isVerticalBound,\n            isHorizontalBound,\n        } = checkInnerBound(moveable, [pos1, pos2], center);\n\n        const sizeOffset = getDragDist({\n            datas,\n            distX: offset[0],\n            distY: offset[1],\n        }).map((size, i) => size * (multiple[i] ? 2 / multiple[i] : 0));\n\n        return {\n            sign: multiple,\n            isBound,\n            isVerticalBound,\n            isHorizontalBound,\n            isSnap: false,\n            offset: sizeOffset,\n        };\n    });\n}\n\nexport function getInnerBoundDragInfo(\n    moveable: MoveableManagerInterface<SnappableProps & DraggableProps, any>,\n    poses: number[][],\n    datas: any,\n) {\n    const lines = getCheckSnapLines(poses, [0, 0], false).map(([sign, pos1, pos2]) => {\n        return [\n            sign.map(dir => Math.abs(dir) * 2),\n            pos1,\n            pos2,\n        ];\n    });\n    const innerBoundInfo = getInnerBoundInfo(moveable, lines, getPosByDirection(poses, [0, 0]), datas);\n    const widthOffsetInfo = getNearOffsetInfo(innerBoundInfo, 0);\n    const heightOffsetInfo = getNearOffsetInfo(innerBoundInfo, 1);\n    let verticalOffset = 0;\n    let horizontalOffset = 0;\n    const isVerticalBound = widthOffsetInfo.isVerticalBound || heightOffsetInfo.isVerticalBound;\n    const isHorizontalBound = widthOffsetInfo.isHorizontalBound || heightOffsetInfo.isHorizontalBound;\n\n    if (isVerticalBound || isHorizontalBound) {\n        [verticalOffset, horizontalOffset] = getInverseDragDist({\n            datas,\n            distX: -widthOffsetInfo.offset[0],\n            distY: -heightOffsetInfo.offset[1],\n        });\n    }\n\n    return {\n        vertical: {\n            isBound: isVerticalBound,\n            offset: verticalOffset,\n        },\n        horizontal: {\n            isBound: isHorizontalBound,\n            offset: horizontalOffset,\n        },\n    };\n}\nexport function getCheckSnapLineDirections(\n    direction: number[],\n    keepRatio: boolean,\n) {\n    const lineDirections: number[][][] = [];\n    const x = direction[0];\n    const y = direction[1];\n    if (x && y) {\n        lineDirections.push(\n            [[0, y * 2], direction, [-x, y]],\n            [[x * 2, 0], direction, [x, -y]],\n        );\n    } else if (x) {\n        // vertcal\n        lineDirections.push(\n            [[x * 2, 0], [x, 1], [x, -1]],\n        );\n        if (keepRatio) {\n            lineDirections.push(\n                [[0, -1], [x, -1], [-x, -1]],\n                [[0, 1], [x, 1], [-x, 1]],\n            );\n        }\n    } else if (y) {\n        // horizontal\n        lineDirections.push(\n            [[0, y * 2], [1, y], [-1, y]],\n        );\n        if (keepRatio) {\n            lineDirections.push(\n                [[-1, 0], [-1, y], [-1, -y]],\n                [[1, 0], [1, y], [1, -y]],\n            );\n        }\n    } else {\n        // [0, 0] to all direction\n        lineDirections.push(\n            [[-1, 0], [-1, -1], [-1, 1]],\n            [[1, 0], [1, -1], [1, 1]],\n            [[0, -1], [-1, -1], [1, -1]],\n            [[0, 1], [-1, 1], [1, 1]],\n        );\n    }\n\n    return lineDirections;\n}\nexport function getCheckSnapLines(\n    poses: number[][],\n    direction: number[],\n    keepRatio: boolean,\n) {\n    return getCheckSnapLineDirections(direction, keepRatio).map(([sign, dir1, dir2]) => {\n        return [\n            sign,\n            getPosByDirection(poses, dir1),\n            getPosByDirection(poses, dir2),\n        ];\n    });\n}\n\nfunction isBoundRotate(\n    relativePoses: number[][],\n    boundDots: number[][],\n    center: number[],\n    rad: number,\n) {\n    const nextPoses = rad ? relativePoses.map(pos => rotate(pos, rad)) : relativePoses;\n    const dots = [\n        center,\n        ...boundDots,\n    ];\n    return [\n        [nextPoses[0], nextPoses[1]],\n        [nextPoses[1], nextPoses[3]],\n        [nextPoses[3], nextPoses[2]],\n        [nextPoses[2], nextPoses[0]],\n    ].some((line, i) => !isSameStartLine(dots, line));\n}\nfunction getDistPointLine([pos1, pos2]: number[][]) {\n    // x = 0, y = 0\n    // d = (ax + by + c) / root(a2 + b2)\n\n    const dx = pos2[0] - pos1[0];\n    const dy = pos2[1] - pos1[1];\n\n    if (!dx) {\n        return Math.abs(pos1[0]);\n    }\n    if (!dy) {\n        return Math.abs(pos1[1]);\n    }\n    // y - y1 = a(x - x1)\n    // 0 = ax -y + -a * x1 + y1\n\n    const a = dy / dx;\n\n    return Math.abs((-a * pos1[0] + pos1[1]) / Math.sqrt(Math.pow(a, 2) + 1));\n}\nfunction solveReverseLine([pos1, pos2]: number[][]) {\n    const dx = pos2[0] - pos1[0];\n    const dy = pos2[1] - pos1[1];\n\n    if (!dx) {\n        return [pos1[0], 0];\n    }\n    if (!dy) {\n        return [0, pos1[1]];\n    }\n    const a = dy / dx;\n    // y - y1 = a (x  - x1)\n    // y = ax - a * x1 + y1\n    const b = -a * pos1[0] + pos1[1];\n    // y = ax + b = -1/a x\n    // x = -b / (a + 1 / a)\n    // y = b / (1 + 1 / a^2)\n\n    return [\n        -b / (a + 1 / a),\n        b / ((a * a) + 1),\n    ];\n}\nexport function checkRotateInnerBounds(\n    moveable: MoveableManagerInterface<SnappableProps & RotatableProps, any>,\n    prevPoses: number[][],\n    nextPoses: number[][],\n    origin: number[],\n    rotation: number,\n) {\n    const bounds = moveable.props.innerBounds;\n    const rad = rotation * Math.PI / 180;\n\n    if (!bounds) {\n        return [];\n    }\n    const {\n        left,\n        top,\n        width,\n        height,\n    } = bounds;\n\n    const relativeLeft = left - origin[0];\n    const relativeRight = left + width - origin[0];\n    const relativeTop = top - origin[1];\n    const relativeBottom = top + height - origin[1];\n    const dots = [\n        [relativeLeft, relativeTop],\n        [relativeRight, relativeTop],\n        [relativeLeft, relativeBottom],\n        [relativeRight, relativeBottom],\n    ];\n    const center = getPosByDirection(nextPoses, [0, 0]);\n\n    if (!isBoundRotate(nextPoses, dots, center, 0)) {\n        return [];\n    }\n    const result: number[] = [];\n    const dotInfos = dots.map(dot => [\n        getDistSize(dot),\n        getRad([0, 0], dot),\n    ]);\n    [\n        [nextPoses[0], nextPoses[1]],\n        [nextPoses[1], nextPoses[3]],\n        [nextPoses[3], nextPoses[2]],\n        [nextPoses[2], nextPoses[0]],\n    ].forEach(line => {\n        const lineRad = getRad([0, 0], solveReverseLine(line));\n        const lineDist = getDistPointLine(line);\n\n        result.push(...dotInfos\n            .filter(([dotDist]) => {\n                return dotDist && lineDist <= dotDist;\n            })\n            .map(([dotDist, dotRad]) => {\n                const distRad = Math.acos(dotDist ? lineDist / dotDist : 0);\n                const nextRad1 = dotRad + distRad;\n                const nextRad2 = dotRad - distRad;\n\n                return [\n                    rad + nextRad1 - lineRad,\n                    rad + nextRad2 - lineRad,\n                ];\n            })\n            .reduce<number[]>((prev, cur) => {\n                prev.push(...cur);\n                return prev;\n            }, [])\n            .filter(nextRad => !isBoundRotate(prevPoses, dots, center, nextRad))\n            .map(nextRad => throttle(nextRad * 180 / Math.PI, TINY_NUM)));\n    });\n    return result;\n}\n\nexport function checkInnerBoundPoses(\n    moveable: MoveableManagerInterface<SnappableProps>,\n) {\n    const innerBounds = moveable.props.innerBounds;\n\n    if (!innerBounds) {\n        return {\n            vertical: [],\n            horizontal: [],\n        };\n    }\n    const {\n        pos1,\n        pos2,\n        pos3,\n        pos4,\n    } = moveable.getRect();\n    const poses = [pos1, pos2, pos3, pos4];\n    const center = getPosByDirection(poses, [0, 0]);\n    const { left, top, width, height } = innerBounds;\n    const leftLine = [[left, top], [left, top + height]];\n    const topLine = [[left, top], [left + width, top]];\n    const rightLine = [[left + width, top], [left + width, top + height]];\n    const bottomLine = [[left, top + height], [left + width, top + height]];\n\n    const lines = [\n        [pos1, pos2],\n        [pos2, pos4],\n        [pos4, pos3],\n        [pos3, pos1],\n    ];\n\n    const horizontalPoses: number[] = [];\n    const verticalPoses: number[] = [];\n\n    const boundMap = {\n        top: false,\n        bottom: false,\n        left: false,\n        right: false,\n    };\n\n    lines.forEach(line => {\n        const {\n            horizontal: isHorizontalStart,\n            vertical: isVerticalStart,\n        } = isStartLine(center, line);\n\n        // test vertical\n        const topBoundInfo = checkLineBoundCollision(line, topLine, isVerticalStart, 1, true);\n        const bottomBoundInfo = checkLineBoundCollision(line, bottomLine, isVerticalStart, 1, true);\n\n        // test horizontal\n        const leftBoundInfo = checkLineBoundCollision(line, leftLine, isHorizontalStart, 1, true);\n        const rightBoundInfo = checkLineBoundCollision(line, rightLine, isHorizontalStart, 1, true);\n\n        if (topBoundInfo.isBound && !boundMap.top) {\n            horizontalPoses.push(top);\n            boundMap.top = true;\n        }\n        if (bottomBoundInfo.isBound && !boundMap.bottom) {\n            horizontalPoses.push(top + height);\n            boundMap.bottom = true;\n        }\n        if (leftBoundInfo.isBound && !boundMap.left) {\n            verticalPoses.push(left);\n            boundMap.left = true;\n        }\n        if (rightBoundInfo.isBound && !boundMap.right) {\n            verticalPoses.push(left + width);\n            boundMap.right = true;\n        }\n    });\n\n    return {\n        horizontal: horizontalPoses,\n        vertical: verticalPoses,\n    };\n}\n","import { getRad } from \"@daybrush/utils\";\nimport { BoundInfo, SnappableProps, BoundType, RotatableProps, MoveableManagerInterface } from \"../../types\";\nimport { rotate, minus } from \"@scena/matrix\";\nimport { getDistSize, throttle } from \"../../utils\";\nimport { TINY_NUM } from \"../../consts\";\n\nexport function checkBoundPoses(\n    bounds: BoundType | false | undefined,\n    verticalPoses: number[],\n    horizontalPoses: number[],\n) {\n    const {\n        left = -Infinity,\n        top = -Infinity,\n        right = Infinity,\n        bottom = Infinity,\n    } = bounds || {};\n    const nextBounds = { left, top, right, bottom };\n\n    return {\n        vertical: checkBounds(nextBounds, verticalPoses, true),\n        horizontal: checkBounds(nextBounds, horizontalPoses, false),\n    };\n}\n\nexport function checkBoundKeepRatio(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    startPos: number[],\n    endPos: number[],\n) {\n    const {\n        left = -Infinity,\n        top = -Infinity,\n        right = Infinity,\n        bottom = Infinity,\n    } = moveable.props.bounds || {};\n\n    const [endX, endY] = endPos;\n    let [dx, dy] = minus(endPos, startPos);\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n    const isBottom = dy > 0;\n    const isRight = dx > 0;\n\n    const verticalInfo = {\n        isBound: false,\n        offset: 0,\n        pos: 0,\n    };\n    const horizontalInfo = {\n        isBound: false,\n        offset: 0,\n        pos: 0,\n    };\n    if (dx === 0 && dy === 0) {\n        return {\n            vertical: verticalInfo,\n            horizontal: horizontalInfo,\n        };\n    } else if (dx === 0) {\n        if (isBottom) {\n            if (bottom < endY) {\n                horizontalInfo.pos = bottom;\n                horizontalInfo.offset = endY - bottom;\n            }\n        } else {\n            if (top > endY) {\n                horizontalInfo.pos = top;\n                horizontalInfo.offset = endY - top;\n            }\n        }\n    } else if (dy === 0) {\n        if (isRight) {\n            if (right < endX) {\n                verticalInfo.pos = right;\n                verticalInfo.offset = endX - right;\n            }\n        } else {\n            if (left > endX) {\n                verticalInfo.pos = left;\n                verticalInfo.offset = endX - left;\n            }\n        }\n    } else {\n        // y - y1 = a * (x - x1)\n        const a = dy / dx;\n        const b = endPos[1] - a * endX;\n        let y = 0;\n        let x = 0;\n        let isBound = false;\n\n        if (isRight && right <= endX) {\n            y = a * right + b;\n            x = right;\n            isBound = true;\n        } else if (!isRight && endX <= left) {\n            y = a * left + b;\n            x = left;\n            isBound = true;\n        }\n        if (isBound) {\n            if (y < top || y > bottom) {\n                isBound = false;\n            }\n        }\n        if (!isBound) {\n            if (isBottom && bottom <= endY) {\n                y = bottom;\n                x = (y - b) / a;\n                isBound = true;\n            } else if (!isBottom &&  endY <= top) {\n                y = top;\n                x = (y - b) / a;\n                isBound = true;\n            }\n        }\n        if (isBound) {\n            verticalInfo.isBound = true;\n            verticalInfo.pos = x;\n            verticalInfo.offset = endX - x;\n\n            horizontalInfo.isBound = true;\n            horizontalInfo.pos = y;\n            horizontalInfo.offset = endY - y;\n        }\n    }\n\n    return {\n        vertical: verticalInfo,\n        horizontal: horizontalInfo,\n    };\n}\nfunction checkBounds(\n    bounds: Required<BoundType>,\n    poses: number[],\n    isVertical: boolean,\n): BoundInfo[] {\n    // 0   [100 - 200]  300\n    const startBoundPos = bounds[isVertical ? \"left\" : \"top\"];\n    const endBoundPos = bounds[isVertical ? \"right\" : \"bottom\"];\n\n    // 450\n    const minPos = Math.min(...poses);\n    const maxPos = Math.max(...poses);\n    const boundInfos: BoundInfo[] = [];\n\n    if (startBoundPos + 1 > minPos) {\n        boundInfos.push({\n            isBound: true,\n            offset: minPos - startBoundPos,\n            pos: startBoundPos,\n        });\n    }\n    if (endBoundPos - 1 < maxPos) {\n        boundInfos.push({\n            isBound: true,\n            offset: maxPos - endBoundPos,\n            pos: endBoundPos,\n        });\n    }\n\n    if (!boundInfos.length) {\n        boundInfos.push({\n            isBound: false,\n            offset: 0,\n            pos: 0,\n        });\n    }\n\n    return boundInfos.sort((a, b) => Math.abs(b.offset) - Math.abs(a.offset));\n}\nexport function isBoundRotate(\n    relativePoses: number[][],\n    boundRect: { left: number, top: number, right: number, bottom: number },\n    rad: number,\n) {\n    const nextPoses = rad ? relativePoses.map(pos => rotate(pos, rad)) : relativePoses;\n\n    return nextPoses.some(pos => {\n        return (pos[0] < boundRect.left && Math.abs(pos[0] - boundRect.left) > 0.1)\n            || (pos[0] > boundRect.right && Math.abs(pos[0] - boundRect.right) > 0.1)\n            || (pos[1] < boundRect.top && Math.abs(pos[1] - boundRect.top) > 0.1)\n            || (pos[1] > boundRect.bottom && Math.abs(pos[1] - boundRect.bottom) > 0.1);\n    });\n}\nexport function boundRotate(\n    vec: number[],\n    boundPos: number,\n    index: number,\n) {\n    const r = getDistSize(vec);\n    const nextPos = Math.sqrt(r * r - boundPos * boundPos) || 0;\n\n    return [nextPos, -nextPos].sort((a, b) => {\n        return Math.abs(a - vec[index ? 0 : 1]) - Math.abs(b - vec[index ? 0 : 1]);\n    }).map(pos => {\n        return getRad([0, 0], index ? [pos, boundPos] : [boundPos, pos]);\n    });\n}\n\nexport function checkRotateBounds(\n    moveable: MoveableManagerInterface<SnappableProps & RotatableProps, any>,\n    prevPoses: number[][],\n    nextPoses: number[][],\n    origin: number[],\n    rotation: number,\n) {\n    const bounds = moveable.props.bounds;\n    const rad = rotation * Math.PI / 180;\n\n    if (!bounds) {\n        return [];\n    }\n    const {\n        left = -Infinity,\n        top = -Infinity,\n        right = Infinity,\n        bottom = Infinity,\n    } = bounds;\n\n    const relativeLeft = left - origin[0];\n    const relativeRight = right - origin[0];\n    const relativeTop = top - origin[1];\n    const relativeBottom = bottom - origin[1];\n    const boundRect = {\n        left: relativeLeft,\n        top: relativeTop,\n        right: relativeRight,\n        bottom: relativeBottom,\n    };\n\n    if (!isBoundRotate(nextPoses, boundRect, 0)) {\n        return [];\n    }\n    const result: number[] = [];\n    [\n        [relativeLeft, 0],\n        [relativeRight, 0],\n        [relativeTop, 1],\n        [relativeBottom, 1],\n    ].forEach(([boundPos, index], i) => {\n        nextPoses.forEach(nextPos => {\n            const relativeRad1 = getRad([0, 0], nextPos);\n\n            result.push(...boundRotate(nextPos, boundPos, index)\n                .map(relativeRad2 => rad + relativeRad2 - relativeRad1)\n                .filter(nextRad => !isBoundRotate(prevPoses, boundRect, nextRad))\n                .map(nextRad => throttle(nextRad * 180 / Math.PI, TINY_NUM)));\n        });\n    });\n\n    return result;\n}\n","import {\n    Renderer,\n    SnappableProps,\n    SnappableState,\n    Guideline,\n    SnapInfo,\n    BoundInfo,\n    ScalableProps,\n    SnapPosInfo,\n    RotatableProps,\n    RectInfo,\n    DraggableProps,\n    SnapOffsetInfo,\n    GapGuideline,\n    SnappableOptions,\n    MoveableManagerInterface,\n    SnappableRenderType,\n    BoundType,\n    SnapBoundInfo,\n    MoveableGroupInterface,\n} from \"../types\";\nimport {\n    prefix,\n    calculatePoses,\n    getRect,\n    getAbsolutePosesByState,\n    getAbsolutePoses,\n    throttle,\n    getDistSize,\n    groupBy,\n    flat,\n    maxOffset,\n    minOffset,\n    triggerEvent,\n    calculateInversePosition,\n    directionCondition,\n} from \"../utils\";\nimport { IObject, find, findIndex, hasClass, getRad } from \"@daybrush/utils\";\nimport {\n    getPosByReverseDirection,\n    getDragDist,\n    scaleMatrix,\n    getPosByDirection,\n} from \"../gesto/GestoUtils\";\nimport { minus, rotate, plus } from \"@scena/matrix\";\nimport { dragControlCondition as rotatableDragControlCondtion } from \"./Rotatable\";\nimport { TINY_NUM } from \"../consts\";\nimport {\n    getInnerBoundInfo,\n    getCheckSnapLines,\n    getInnerBoundDragInfo,\n    checkRotateInnerBounds,\n    checkInnerBoundPoses,\n} from \"./snappable/innerBounds\";\nimport {\n    checkBoundPoses,\n    checkRotateBounds,\n    checkBoundKeepRatio,\n} from \"./snappable/bounds\";\nimport {\n    checkSnaps,\n    getSnapInfosByDirection,\n    checkMoveableSnapPoses,\n    getNearestSnapGuidelineInfo,\n    getNearOffsetInfo,\n    checkSnapKeepRatio,\n    checkSnapPoses,\n    getElementGuidelines,\n    calculateContainerPos,\n    getTotalGuidelines,\n} from \"./snappable/snap\";\n\n\nconst HORIZONTAL_NAMES = [\"horizontal\", \"left\", \"top\", \"width\", \"Y\", \"X\"] as const;\nconst VERTICAL_NAMES = [\"vertical\", \"top\", \"left\", \"height\", \"X\", \"Y\"] as const;\n\ntype DirectionNames = typeof HORIZONTAL_NAMES | typeof VERTICAL_NAMES;\n\nexport function snapStart(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n) {\n    const state = moveable.state;\n\n    if (state.guidelines && state.guidelines.length) {\n        return;\n    }\n    state.staticGuidelines = getElementGuidelines(moveable, false);\n    state.guidelines = getTotalGuidelines(moveable);\n    state.enableSnap = true;\n}\n\nexport function hasGuidelines(\n    moveable: MoveableManagerInterface<any, any>,\n    ableName: string\n): moveable is MoveableManagerInterface<SnappableProps, SnappableState> {\n    const {\n        props: {\n            snappable,\n            bounds,\n            innerBounds,\n            verticalGuidelines,\n            horizontalGuidelines,\n        },\n        state: { guidelines, enableSnap },\n    } = moveable;\n\n    if (\n        !snappable ||\n        !enableSnap ||\n        (ableName && snappable !== true && snappable.indexOf(ableName) < 0)\n    ) {\n        return false;\n    }\n    if (\n        bounds ||\n        innerBounds ||\n        (guidelines && guidelines.length) ||\n        (verticalGuidelines && verticalGuidelines.length) ||\n        (horizontalGuidelines && horizontalGuidelines.length)\n    ) {\n        return true;\n    }\n    return false;\n}\n\nfunction solveNextOffset(\n    pos1: number[],\n    pos2: number[],\n    offset: number,\n    isVertical: boolean,\n    datas: IObject<any>\n) {\n    const sizeOffset = solveEquation(pos1, pos2, offset, isVertical);\n\n    if (!sizeOffset) {\n        return [0, 0];\n    }\n    const [widthOffset, heightOffset] = getDragDist({\n        datas,\n        distX: sizeOffset[0],\n        distY: sizeOffset[1],\n    });\n\n    return [widthOffset, heightOffset];\n}\nfunction getNextFixedPoses(\n    matrix: number[],\n    width: number,\n    height: number,\n    fixedPos: number[],\n    direction: number[],\n    is3d: boolean\n) {\n    const nextPoses = calculatePoses(matrix, width, height, is3d ? 4 : 3);\n    const nextPos = getPosByReverseDirection(nextPoses, direction);\n\n    return getAbsolutePoses(nextPoses, minus(fixedPos, nextPos));\n}\nfunction getSnapBoundOffset(boundInfo: BoundInfo, snapInfo: SnapOffsetInfo) {\n    if (boundInfo.isBound) {\n        return boundInfo.offset;\n    } else if (snapInfo.isSnap) {\n        return snapInfo.offset;\n    }\n    return 0;\n}\nfunction getSnapBound(boundInfo: BoundInfo, snapInfo: SnapInfo) {\n    if (boundInfo.isBound) {\n        return boundInfo.offset;\n    } else if (snapInfo.isSnap) {\n        return getNearestSnapGuidelineInfo(snapInfo).offset;\n    }\n    return 0;\n}\nexport function checkSnapBoundsKeepRatio(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    startPos: number[],\n    endPos: number[],\n    isRequest: boolean\n): {\n    horizontal: SnapBoundInfo;\n    vertical: SnapBoundInfo;\n} {\n    const {\n        horizontal: horizontalBoundInfo,\n        vertical: verticalBoundInfo,\n    } = checkBoundKeepRatio(moveable, startPos, endPos);\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = isRequest\n        ? ({\n              horizontal: { isSnap: false },\n              vertical: { isSnap: false },\n          } as any)\n        : checkSnapKeepRatio(moveable, startPos, endPos);\n\n    const horizontalOffset = getSnapBoundOffset(\n        horizontalBoundInfo,\n        horizontalSnapInfo\n    );\n    const verticalOffset = getSnapBoundOffset(\n        verticalBoundInfo,\n        verticalSnapInfo\n    );\n\n    const horizontalDist = Math.abs(horizontalOffset);\n    const verticalDist = Math.abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfo.isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n        },\n        vertical: {\n            isBound: verticalBoundInfo.isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            offset: verticalOffset,\n            dist: verticalDist,\n        },\n    };\n}\nexport function checkMoveableSnapBounds(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    isRequest: boolean,\n    poses: number[][],\n    boundPoses: number[][] = poses\n): {\n    vertical: Required<SnapBoundInfo>;\n    horizontal: Required<SnapBoundInfo>;\n} {\n    const {\n        horizontal: horizontalBoundInfos,\n        vertical: verticalBoundInfos,\n    } = checkBoundPoses(\n        moveable.props.bounds,\n        boundPoses.map((pos) => pos[0]),\n        boundPoses.map((pos) => pos[1])\n    );\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = isRequest\n        ? {\n              horizontal: { isSnap: false, index: -1 } as SnapInfo,\n              vertical: { isSnap: false, index: -1 } as SnapInfo,\n          }\n        : checkMoveableSnapPoses(\n              moveable,\n              poses.map((pos) => pos[0]),\n              poses.map((pos) => pos[1]),\n              moveable.props.snapCenter\n          );\n\n    const horizontalOffset = getSnapBound(\n        horizontalBoundInfos[0],\n        horizontalSnapInfo\n    );\n    const verticalOffset = getSnapBound(\n        verticalBoundInfos[0],\n        verticalSnapInfo\n    );\n\n    const horizontalDist = Math.abs(horizontalOffset);\n    const verticalDist = Math.abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfos[0].isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            snapIndex: horizontalSnapInfo.index,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n            bounds: horizontalBoundInfos,\n            snap: horizontalSnapInfo,\n        },\n        vertical: {\n            isBound: verticalBoundInfos[0].isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            snapIndex: verticalSnapInfo.index,\n            offset: verticalOffset,\n            dist: verticalDist,\n            bounds: verticalBoundInfos,\n            snap: verticalSnapInfo,\n        },\n    };\n}\nexport function checkSnapBounds(\n    guideines: Guideline[],\n    bounds: BoundType | undefined | false,\n    posesX: number[],\n    posesY: number[],\n    options: {\n        isRequest?: boolean;\n        snapThreshold?: number;\n        snapCenter?: boolean;\n        snapElement?: boolean;\n    } = {}\n): {\n    vertical: Required<SnapBoundInfo>;\n    horizontal: Required<SnapBoundInfo>;\n} {\n    const {\n        horizontal: horizontalBoundInfos,\n        vertical: verticalBoundInfos,\n    } = checkBoundPoses(bounds, posesX, posesY);\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = options.isRequest\n        ? {\n              horizontal: { isSnap: false, index: -1 } as SnapInfo,\n              vertical: { isSnap: false, index: -1 } as SnapInfo,\n          }\n        : checkSnapPoses(guideines, posesX, posesY, options);\n\n    const horizontalOffset = getSnapBound(\n        horizontalBoundInfos[0],\n        horizontalSnapInfo\n    );\n    const verticalOffset = getSnapBound(\n        verticalBoundInfos[0],\n        verticalSnapInfo\n    );\n\n    const horizontalDist = Math.abs(horizontalOffset);\n    const verticalDist = Math.abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfos[0].isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            snapIndex: horizontalSnapInfo.index,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n            bounds: horizontalBoundInfos,\n            snap: horizontalSnapInfo,\n        },\n        vertical: {\n            isBound: verticalBoundInfos[0].isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            snapIndex: verticalSnapInfo.index,\n            offset: verticalOffset,\n            dist: verticalDist,\n            bounds: verticalBoundInfos,\n            snap: verticalSnapInfo,\n        },\n    };\n}\nexport function normalized(value: number) {\n    return value ? value / Math.abs(value) : 0;\n}\nexport function checkMaxBounds(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    poses: number[][],\n    direction: number[],\n    fixedPosition: number[],\n    datas: any\n) {\n    const fixedDirection = [-direction[0], -direction[1]];\n    const { width, height } = moveable.state;\n    const bounds = moveable.props.bounds;\n    let maxWidth = Infinity;\n    let maxHeight = Infinity;\n\n    if (bounds) {\n        const directions = [\n            [direction[0], -direction[1]],\n            [-direction[0], direction[1]],\n        ];\n        const {\n            left = -Infinity,\n            top = -Infinity,\n            right = Infinity,\n            bottom = Infinity,\n        } = bounds;\n\n        directions.forEach((otherDirection) => {\n            const isCheckVertical = otherDirection[0] !== fixedDirection[0];\n            const isCheckHorizontal = otherDirection[1] !== fixedDirection[1];\n            const otherPos = getPosByDirection(poses, otherDirection);\n\n            const verticalDirection = normalized(\n                otherDirection[1] - fixedDirection[1]\n            );\n            const horizontalDirection = normalized(\n                otherDirection[0] - fixedDirection[0]\n            );\n            const deg = (getRad(fixedPosition, otherPos) * 360) / Math.PI;\n\n            if (isCheckHorizontal) {\n                const nextOtherPos = otherPos.slice();\n\n                if (Math.abs(deg - 360) < 2 || Math.abs(deg - 180) < 2) {\n                    nextOtherPos[1] = fixedPosition[1];\n                }\n                const [, heightOffset] = solveNextOffset(\n                    fixedPosition,\n                    nextOtherPos,\n                    (fixedPosition[1] < otherPos[1] ? bottom : top) -\n                        otherPos[1],\n                    false,\n                    datas\n                );\n                if (!isNaN(heightOffset)) {\n                    maxHeight = height + verticalDirection * heightOffset;\n                }\n            }\n            if (isCheckVertical) {\n                const nextOtherPos = otherPos.slice();\n\n                if (Math.abs(deg - 90) < 2 || Math.abs(deg - 270) < 2) {\n                    nextOtherPos[0] = fixedPosition[0];\n                }\n                const [widthOffset] = solveNextOffset(\n                    fixedPosition,\n                    nextOtherPos,\n                    (fixedPosition[0] < otherPos[0] ? right : left) -\n                        otherPos[0],\n                    true,\n                    datas\n                );\n                if (!isNaN(widthOffset)) {\n                    maxWidth = width + horizontalDirection * widthOffset;\n                }\n            }\n        });\n    }\n    return {\n        maxWidth,\n        maxHeight,\n    };\n}\nfunction checkSnapRightLine(\n    startPos: number[],\n    endPos: number[],\n    snapBoundInfo: { vertical: SnapBoundInfo; horizontal: SnapBoundInfo },\n    keepRatio: boolean\n) {\n    const rad = (getRad(startPos, endPos) / Math.PI) * 180;\n    const {\n        vertical: {\n            isBound: isVerticalBound,\n            isSnap: isVerticalSnap,\n            dist: verticalDist,\n        },\n        horizontal: {\n            isBound: isHorizontalBound,\n            isSnap: isHorizontalSnap,\n            dist: horizontalDist,\n        },\n    } = snapBoundInfo;\n\n    const rad180 = rad % 180;\n    const isHorizontalLine = rad180 < 3 || rad180 > 177;\n    const isVerticalLine = rad180 > 87 && rad180 < 93;\n\n    if (horizontalDist < verticalDist) {\n        if (\n            isVerticalBound ||\n            (isVerticalSnap &&\n                !isVerticalLine &&\n                (!keepRatio || !isHorizontalLine))\n        ) {\n            return \"vertical\";\n        }\n    }\n    if (\n        isHorizontalBound ||\n        (isHorizontalSnap &&\n            !isHorizontalLine &&\n            (!keepRatio || !isVerticalLine))\n    ) {\n        return \"horizontal\";\n    }\n    return \"\";\n}\nfunction getSnapBoundInfo(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    poses: number[][],\n    directions: number[][][],\n    keepRatio: boolean,\n    isRequest: boolean,\n    datas: any\n) {\n    return directions.map(([startDirection, endDirection]) => {\n        const otherStartPos = getPosByDirection(poses, startDirection);\n        const otherEndPos = getPosByDirection(poses, endDirection);\n        const snapBoundInfo = keepRatio\n            ? checkSnapBoundsKeepRatio(\n                  moveable,\n                  otherStartPos,\n                  otherEndPos,\n                  isRequest\n              )\n            : checkMoveableSnapBounds(moveable, isRequest, [otherEndPos]);\n\n        const {\n            horizontal: {\n                // dist: otherHorizontalDist,\n                offset: otherHorizontalOffset,\n                isBound: isOtherHorizontalBound,\n                isSnap: isOtherHorizontalSnap,\n            },\n            vertical: {\n                // dist: otherVerticalDist,\n                offset: otherVerticalOffset,\n                isBound: isOtherVerticalBound,\n                isSnap: isOtherVerticalSnap,\n            },\n        } = snapBoundInfo;\n\n        const multiple = minus(endDirection, startDirection);\n\n        if (!otherVerticalOffset && !otherHorizontalOffset) {\n            return {\n                isBound: isOtherVerticalBound || isOtherHorizontalBound,\n                isSnap: isOtherVerticalSnap || isOtherHorizontalSnap,\n                sign: multiple,\n                offset: [0, 0],\n            };\n        }\n        const snapLine = checkSnapRightLine(\n            otherStartPos,\n            otherEndPos,\n            snapBoundInfo,\n            keepRatio\n        );\n\n        if (!snapLine) {\n            return {\n                sign: multiple,\n                isBound: false,\n                isSnap: false,\n                offset: [0, 0],\n            };\n        }\n\n        const isVertical = snapLine === \"vertical\";\n        const sizeOffset = solveNextOffset(\n            otherStartPos,\n            otherEndPos,\n            -(isVertical ? otherVerticalOffset : otherHorizontalOffset),\n            isVertical,\n            datas\n        ).map((size, i) => size * (multiple[i] ? 2 / multiple[i] : 0));\n\n        return {\n            sign: multiple,\n            isBound: isVertical ? isOtherVerticalBound : isOtherHorizontalBound,\n            isSnap: isVertical ? isOtherVerticalSnap : isOtherHorizontalSnap,\n            offset: sizeOffset,\n        };\n    });\n}\nexport function getCheckSnapDirections(\n    direction: number[],\n    keepRatio: boolean\n) {\n    const directions: number[][][] = [];\n    const fixedDirection = [-direction[0], -direction[1]];\n\n    if (direction[0] && direction[1]) {\n        directions.push(\n            [fixedDirection, [direction[0], -direction[1]]],\n            [fixedDirection, [-direction[0], direction[1]]]\n        );\n        if (keepRatio) {\n            // pass two direction condition\n            directions.push([fixedDirection, direction]);\n        }\n    } else if (direction[0]) {\n        // vertcal\n        if (keepRatio) {\n            directions.push(\n                [fixedDirection, [fixedDirection[0], -1]],\n                [fixedDirection, [fixedDirection[0], 1]],\n                [fixedDirection, [direction[0], -1]],\n                [fixedDirection, direction],\n                [fixedDirection, [direction[0], 1]]\n            );\n        } else {\n            directions.push(\n                [\n                    [fixedDirection[0], -1],\n                    [direction[0], -1],\n                ],\n                [\n                    [fixedDirection[0], 0],\n                    [direction[0], 0],\n                ],\n                [\n                    [fixedDirection[0], 1],\n                    [direction[0], 1],\n                ]\n            );\n        }\n    } else if (direction[1]) {\n        // horizontal\n        if (keepRatio) {\n            directions.push(\n                [fixedDirection, [-1, fixedDirection[1]]],\n                [fixedDirection, [1, fixedDirection[1]]],\n                [fixedDirection, [-1, direction[1]]],\n                [fixedDirection, [1, direction[1]]],\n                [fixedDirection, direction]\n            );\n        } else {\n            directions.push(\n                [\n                    [-1, fixedDirection[1]],\n                    [-1, direction[1]],\n                ],\n                [\n                    [0, fixedDirection[1]],\n                    [0, direction[1]],\n                ],\n                [\n                    [1, fixedDirection[1]],\n                    [1, direction[1]],\n                ]\n            );\n        }\n    } else {\n        // [0, 0] to all direction\n        directions.push(\n            [fixedDirection, [1, 0]],\n            [fixedDirection, [-1, 0]],\n            [fixedDirection, [0, -1]],\n            [fixedDirection, [0, 1]],\n\n            [\n                [1, 0],\n                [1, -1],\n            ],\n            [\n                [1, 0],\n                [1, 1],\n            ],\n            [\n                [0, 1],\n                [1, 1],\n            ],\n            [\n                [0, 1],\n                [-1, 1],\n            ],\n\n            [\n                [-1, 0],\n                [-1, -1],\n            ],\n            [\n                [-1, 0],\n                [-1, 1],\n            ],\n            [\n                [0, -1],\n                [1, -1],\n            ],\n            [\n                [0, -1],\n                [-1, -1],\n            ]\n        );\n    }\n\n    return directions;\n}\nexport function getSizeOffsetInfo(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    poses: number[][],\n    direction: number[],\n    keepRatio: boolean,\n    isRequest: boolean,\n    datas: any\n) {\n    const directions = getCheckSnapDirections(direction, keepRatio);\n    const lines = getCheckSnapLines(poses, direction, keepRatio);\n    const offsets = [\n        ...getSnapBoundInfo(\n            moveable,\n            poses,\n            directions,\n            keepRatio,\n            isRequest,\n            datas\n        ),\n        ...getInnerBoundInfo(\n            moveable,\n            lines,\n            getPosByDirection(poses, [0, 0]),\n            datas\n        ),\n    ];\n    const widthOffsetInfo = getNearOffsetInfo(offsets, 0);\n    const heightOffsetInfo = getNearOffsetInfo(offsets, 1);\n\n    return {\n        width: {\n            isBound: widthOffsetInfo.isBound,\n            offset: widthOffsetInfo.offset[0],\n        },\n        height: {\n            isBound: heightOffsetInfo.isBound,\n            offset: heightOffsetInfo.offset[1],\n        },\n    };\n}\nexport function recheckSizeByTwoDirection(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    poses: number[][],\n    width: number,\n    height: number,\n    maxWidth: number,\n    maxHeight: number,\n    direction: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    const snapPos = getPosByDirection(poses, direction);\n\n    const {\n        horizontal: { offset: horizontalOffset },\n        vertical: { offset: verticalOffset },\n    } = checkMoveableSnapBounds(moveable, isRequest, [snapPos]);\n\n    if (verticalOffset || horizontalOffset) {\n        const [nextWidthOffset, nextHeightOffset] = getDragDist({\n            datas,\n            distX: -verticalOffset,\n            distY: -horizontalOffset,\n        });\n\n        const nextWidth = Math.min(\n            maxWidth || Infinity,\n            width + direction[0] * nextWidthOffset\n        );\n        const nextHeight = Math.min(\n            maxHeight || Infinity,\n            height + direction[1] * nextHeightOffset\n        );\n\n        return [nextWidth - width, nextHeight - height];\n    }\n    return [0, 0];\n}\nexport function checkSizeDist(\n    moveable: MoveableManagerInterface<any, any>,\n    getNextPoses: (widthOffset: number, heightOffset: number) => number[][],\n    width: number,\n    height: number,\n    direction: number[],\n    fixedPosition: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    const poses = getAbsolutePosesByState(moveable.state);\n    const keepRatio = moveable.props.keepRatio;\n\n    let widthOffset = 0;\n    let heightOffset = 0;\n\n    for (let i = 0; i < 2; ++i) {\n        const nextPoses = getNextPoses(widthOffset, heightOffset);\n        const {\n            width: widthOffsetInfo,\n            height: heightOffsetInfo,\n        } = getSizeOffsetInfo(\n            moveable,\n            nextPoses,\n            direction,\n            keepRatio,\n            isRequest,\n            datas\n        );\n\n        const isWidthBound = widthOffsetInfo.isBound;\n        const isHeightBound = heightOffsetInfo.isBound;\n        let nextWidthOffset = widthOffsetInfo.offset;\n        let nextHeightOffset = heightOffsetInfo.offset;\n\n        if (i === 1) {\n            if (!isWidthBound) {\n                nextWidthOffset = 0;\n            }\n            if (!isHeightBound) {\n                nextHeightOffset = 0;\n            }\n        }\n        if (i === 0 && isRequest && !isWidthBound && !isHeightBound) {\n            return [0, 0];\n        }\n        if (keepRatio) {\n            const widthDist =\n                Math.abs(nextWidthOffset) * (width ? 1 / width : 1);\n            const heightDist =\n                Math.abs(nextHeightOffset) * (height ? 1 / height : 1);\n            const isGetWidthOffset =\n                isWidthBound && isHeightBound\n                    ? widthDist < heightDist\n                    : isHeightBound ||\n                      (!isWidthBound && widthDist < heightDist);\n            if (isGetWidthOffset) {\n                // width : height = ? : heightOffset\n                nextWidthOffset = (width * nextHeightOffset) / height;\n            } else {\n                // width : height = widthOffset : ?\n                nextHeightOffset = (height * nextWidthOffset) / width;\n            }\n        }\n        widthOffset += nextWidthOffset;\n        heightOffset += nextHeightOffset;\n    }\n\n    if (direction[0] && direction[1]) {\n        const { maxWidth, maxHeight } = checkMaxBounds(\n            moveable,\n            poses,\n            direction,\n            fixedPosition,\n            datas\n        );\n\n        const [nextWidthOffset, nextHeightOffset] = recheckSizeByTwoDirection(\n            moveable,\n            getNextPoses(widthOffset, heightOffset),\n            width + widthOffset,\n            height + heightOffset,\n            maxWidth,\n            maxHeight,\n            direction,\n            isRequest,\n            datas\n        );\n        widthOffset += nextWidthOffset;\n        heightOffset += nextHeightOffset;\n    }\n\n    return [widthOffset, heightOffset];\n}\n\nexport function checkSnapRotate(\n    moveable: MoveableManagerInterface<SnappableProps & RotatableProps, any>,\n    rect: RectInfo,\n    origin: number[],\n    rotation: number\n) {\n    if (!hasGuidelines(moveable, \"rotatable\")) {\n        return rotation;\n    }\n\n    const { pos1, pos2, pos3, pos4 } = rect;\n    const rad = (rotation * Math.PI) / 180;\n    const prevPoses = [pos1, pos2, pos3, pos4].map((pos) => minus(pos, origin));\n    const nextPoses = prevPoses.map((pos) => rotate(pos, rad));\n\n    const result = [\n        ...checkRotateBounds(moveable, prevPoses, nextPoses, origin, rotation),\n        ...checkRotateInnerBounds(\n            moveable,\n            prevPoses,\n            nextPoses,\n            origin,\n            rotation\n        ),\n    ];\n    result.sort((a, b) => Math.abs(a - rotation) - Math.abs(b - rotation));\n\n    if (result.length) {\n        return result[0];\n    } else {\n        return rotation;\n    }\n}\nexport function checkSnapSize(\n    moveable: MoveableManagerInterface<{}, {}>,\n    width: number,\n    height: number,\n    direction: number[],\n    fixedPosition: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    if (!hasGuidelines(moveable, \"resizable\")) {\n        return [0, 0];\n    }\n    const { allMatrix, is3d } = moveable.state;\n    return checkSizeDist(\n        moveable,\n        (widthOffset: number, heightOffset: number) => {\n            return getNextFixedPoses(\n                allMatrix,\n                width + widthOffset,\n                height + heightOffset,\n                fixedPosition,\n                direction,\n                is3d\n            );\n        },\n        width,\n        height,\n        direction,\n        fixedPosition,\n        isRequest,\n        datas\n    );\n}\nexport function checkSnapScale(\n    moveable: MoveableManagerInterface<ScalableProps, any>,\n    scale: number[],\n    direction: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    const { width, height, fixedPosition } = datas;\n    if (!hasGuidelines(moveable, \"scalable\")) {\n        return [0, 0];\n    }\n    const is3d = datas.is3d;\n    const sizeDist = checkSizeDist(\n        moveable,\n        (widthOffset: number, heightOffset: number) => {\n            return getNextFixedPoses(\n                scaleMatrix(\n                    datas,\n                    plus(scale, [widthOffset / width, heightOffset / height])\n                ),\n                width,\n                height,\n                fixedPosition,\n                direction,\n                is3d\n            );\n        },\n        width,\n        height,\n        direction,\n        fixedPosition,\n        isRequest,\n        datas\n    );\n\n    return [sizeDist[0] / width, sizeDist[1] / height];\n}\nexport function solveEquation(\n    pos1: number[],\n    pos2: number[],\n    snapOffset: number,\n    isVertical: boolean\n) {\n    let dx = pos2[0] - pos1[0];\n    let dy = pos2[1] - pos1[1];\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n    if (!dx) {\n        // y = 0 * x + b\n        // only horizontal\n        if (!isVertical) {\n            return [0, snapOffset];\n        }\n        return [0, 0];\n    }\n    if (!dy) {\n        // only vertical\n        if (isVertical) {\n            return [snapOffset, 0];\n        }\n        return [0, 0];\n    }\n    // y = ax + b\n    const a = dy / dx;\n    const b = pos1[1] - a * pos1[0];\n\n    if (isVertical) {\n        // y = a * x + b\n        const y = a * (pos2[0] + snapOffset) + b;\n\n        return [snapOffset, y - pos2[1]];\n    } else {\n        // x = (y - b) / a\n        const x = (pos2[1] + snapOffset - b) / a;\n\n        return [x - pos2[0], snapOffset];\n    }\n}\n\nexport function startCheckSnapDrag(\n    moveable: MoveableManagerInterface<any, any>,\n    datas: any\n) {\n    datas.absolutePoses = getAbsolutePosesByState(moveable.state);\n}\n\nexport function checkThrottleDragRotate(\n    throttleDragRotate: number,\n    [distX, distY]: number[],\n    [isVerticalBound, isHorizontalBound]: boolean[],\n    [isVerticalSnap, isHorizontalSnap]: boolean[],\n    [verticalOffset, horizontalOffset]: number[]\n) {\n    let offsetX = -verticalOffset;\n    let offsetY = -horizontalOffset;\n\n    if (throttleDragRotate && distX && distY) {\n        offsetX = 0;\n        offsetY = 0;\n        const adjustPoses: number[][] = [];\n        if (isVerticalBound && isHorizontalBound) {\n            adjustPoses.push([0, horizontalOffset], [verticalOffset, 0]);\n        } else if (isVerticalBound) {\n            adjustPoses.push([verticalOffset, 0]);\n        } else if (isHorizontalBound) {\n            adjustPoses.push([0, horizontalOffset]);\n        } else if (isVerticalSnap && isHorizontalSnap) {\n            adjustPoses.push([0, horizontalOffset], [verticalOffset, 0]);\n        } else if (isVerticalSnap) {\n            adjustPoses.push([verticalOffset, 0]);\n        } else if (isHorizontalSnap) {\n            adjustPoses.push([0, horizontalOffset]);\n        }\n        if (adjustPoses.length) {\n            adjustPoses.sort((a, b) => {\n                return (\n                    getDistSize(minus([distX, distY], a)) -\n                    getDistSize(minus([distX, distY], b))\n                );\n            });\n            const adjustPos = adjustPoses[0];\n\n            if (adjustPos[0] && Math.abs(distX) > TINY_NUM) {\n                offsetX = -adjustPos[0];\n                offsetY =\n                    (distY * Math.abs(distX + offsetX)) / Math.abs(distX) -\n                    distY;\n            } else if (adjustPos[1] && Math.abs(distY) > TINY_NUM) {\n                const prevDistY = distY;\n                offsetY = -adjustPos[1];\n                offsetX =\n                    (distX * Math.abs(distY + offsetY)) / Math.abs(prevDistY) -\n                    distX;\n            }\n            if (throttleDragRotate && isHorizontalBound && isVerticalBound) {\n                if (\n                    Math.abs(offsetX) > TINY_NUM &&\n                    Math.abs(offsetX) < Math.abs(verticalOffset)\n                ) {\n                    const scale = Math.abs(verticalOffset) / Math.abs(offsetX);\n\n                    offsetX *= scale;\n                    offsetY *= scale;\n                } else if (\n                    Math.abs(offsetY) > TINY_NUM &&\n                    Math.abs(offsetY) < Math.abs(horizontalOffset)\n                ) {\n                    const scale =\n                        Math.abs(horizontalOffset) / Math.abs(offsetY);\n\n                    offsetX *= scale;\n                    offsetY *= scale;\n                } else {\n                    offsetX = maxOffset(-verticalOffset, offsetX);\n                    offsetY = maxOffset(-horizontalOffset, offsetY);\n                }\n            }\n        }\n    } else {\n        offsetX = distX || isVerticalBound ? -verticalOffset : 0;\n        offsetY = distY || isHorizontalBound ? -horizontalOffset : 0;\n    }\n    return [offsetX, offsetY];\n}\nexport function checkSnapDrag(\n    moveable: MoveableManagerInterface<SnappableProps & DraggableProps, any>,\n    distX: number,\n    distY: number,\n    throttleDragRotate: number,\n    isRequest: boolean,\n    datas: any\n) {\n    if (!hasGuidelines(moveable, \"draggable\")) {\n        return [\n            {\n                isSnap: false,\n                isBound: false,\n                offset: 0,\n            },\n            {\n                isSnap: false,\n                isBound: false,\n                offset: 0,\n            },\n        ];\n    }\n    const poses = getAbsolutePoses(datas.absolutePoses, [distX, distY]);\n    const { left, right, top, bottom } = getRect(poses);\n    const snapCenter = moveable.props.snapCenter;\n    const snapPoses = [\n        [left, top],\n        [right, top],\n        [left, bottom],\n        [right, bottom],\n    ];\n\n    if (snapCenter) {\n        snapPoses.push([(left + right) / 2, (top + bottom) / 2]);\n    }\n    const {\n        vertical: verticalSnapBoundInfo,\n        horizontal: horizontalSnapBoundInfo,\n    } = checkMoveableSnapBounds(moveable, isRequest, snapPoses, poses);\n    const {\n        vertical: verticalInnerBoundInfo,\n        horizontal: horizontalInnerBoundInfo,\n    } = getInnerBoundDragInfo(moveable, poses, datas);\n\n    const isVerticalSnap = verticalSnapBoundInfo.isSnap;\n    const isHorizontalSnap = horizontalSnapBoundInfo.isSnap;\n    const isVerticalBound =\n        verticalSnapBoundInfo.isBound || verticalInnerBoundInfo.isBound;\n    const isHorizontalBound =\n        horizontalSnapBoundInfo.isBound || horizontalInnerBoundInfo.isBound;\n    const verticalOffset = maxOffset(\n        verticalSnapBoundInfo.offset,\n        verticalInnerBoundInfo.offset\n    );\n    const horizontalOffset = maxOffset(\n        horizontalSnapBoundInfo.offset,\n        horizontalInnerBoundInfo.offset\n    );\n\n    const [offsetX, offsetY] = checkThrottleDragRotate(\n        throttleDragRotate,\n        [distX, distY],\n        [isVerticalBound, isHorizontalBound],\n        [isVerticalSnap, isHorizontalSnap],\n        [verticalOffset, horizontalOffset]\n    );\n    return [\n        {\n            isBound: isVerticalBound,\n            isSnap: isVerticalSnap,\n            offset: offsetX,\n        },\n        {\n            isBound: isHorizontalBound,\n            isSnap: isHorizontalSnap,\n            offset: offsetY,\n        },\n    ];\n}\n\nfunction getSnapGuidelines(posInfos: SnapPosInfo[]) {\n    const guidelines: Guideline[] = [];\n\n    posInfos.forEach((posInfo) => {\n        posInfo.guidelineInfos.forEach(({ guideline }) => {\n            if (guidelines.indexOf(guideline) > -1) {\n                return;\n            }\n            guidelines.push(guideline);\n        });\n    });\n\n    return guidelines;\n}\n\nfunction getElementGuidelineDist(\n    elementPos: number,\n    elementSize: number,\n    targetPos: number,\n    targetSize: number\n) {\n    // relativePos < 0  => element(l)  ---  (r)target\n    // relativePos > 0  => target(l)   ---  (r)element\n    const relativePos = elementPos - targetPos;\n    const startPos = relativePos < 0 ? relativePos + elementSize : targetSize;\n    const endPos = relativePos < 0 ? 0 : relativePos;\n    const size = endPos - startPos;\n\n    return {\n        size,\n        pos: startPos,\n    };\n}\nfunction groupByElementGuidelines(\n    guidelines: Guideline[],\n    clientPos: number,\n    size: number,\n    index: number\n) {\n    const groupInfos: Array<[Element, number, any]> = [];\n\n    const group = groupBy(\n        guidelines.filter(({ element, gap }) => element && !gap),\n        ({ element, pos }) => {\n            const elementPos = pos[index];\n            const sign = Math.min(0, elementPos - clientPos) < 0 ? -1 : 1;\n            const groupKey = `${sign}_${pos[index ? 0 : 1]}`;\n            const groupInfo = find(groupInfos, ([groupElement, groupPos]) => {\n                return element === groupElement && elementPos === groupPos;\n            });\n            if (groupInfo) {\n                return groupInfo[2];\n            }\n            groupInfos.push([element!, elementPos, groupKey]);\n            return groupKey;\n        }\n    );\n    group.forEach((elementGuidelines) => {\n        elementGuidelines.sort((a, b) => {\n            const result =\n                getElementGuidelineDist(a.pos[index], a.size, clientPos, size)\n                    .size -\n                getElementGuidelineDist(b.pos[index], a.size, clientPos, size)\n                    .size;\n\n            return result || a.pos[index ? 0 : 1] - b.pos[index ? 0 : 1];\n        });\n    });\n    return group;\n}\nfunction renderElementGroup(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    group: Guideline[][],\n    [directionName, posName1, posName2, sizeName, scaleDirection1, scaleDirection2]: DirectionNames,\n    minPos: number,\n    clientPos: number,\n    clientSize: number,\n    targetPos: number,\n    snapThreshold: number,\n    snapDigit: number,\n    index: number,\n    snapDistFormat: Required<SnappableOptions>[\"snapDistFormat\"],\n    React: Renderer\n) {\n    const { zoom, isDisplaySnapDigit = true } = moveable.props;\n    return flat(\n        group.map((elementGuidelines, i) => {\n            let isFirstRenderSize = true;\n\n            return elementGuidelines.map(({ pos, size }, j) => {\n                const {\n                    pos: linePos,\n                    size: lineSize,\n                } = getElementGuidelineDist(\n                    pos[index],\n                    size,\n                    clientPos,\n                    clientSize\n                );\n\n                if (lineSize < snapThreshold) {\n                    return null;\n                }\n                const isRenderSize = isFirstRenderSize;\n\n                isFirstRenderSize = false;\n                const snapSize =\n                    isDisplaySnapDigit && isRenderSize\n                        ? parseFloat(lineSize.toFixed(snapDigit))\n                        : 0;\n\n                return (\n                    <div\n                        key={`${directionName}LinkGuideline${i}-${j}`}\n                        className={prefix(\"guideline-group\", directionName)}\n                        style={{\n                            [posName1]: `${minPos + linePos}px`,\n                            [posName2]: `${-targetPos + pos[index ? 0 : 1]}px`,\n                            [sizeName]: `${lineSize}px`,\n                        }}\n                    >\n                        <div\n                            className={prefix(\n                                \"line\",\n                                directionName,\n                                \"guideline\",\n                                \"dashed\"\n                            )}\n                            style={{\n                                [posName1]: `0%`,\n                                [posName2]: `0%`,\n                                [sizeName]: `100%`,\n                                transform: `translate${scaleDirection1}(-50%) scale${scaleDirection1}(${zoom})`,\n                            }}\n                        />\n                        <div\n                            className={prefix(\"size-value\")}\n                            style={{\n                                transform: `translate${scaleDirection2}(-50%) scale(${zoom})`,\n                            }}\n                        >\n                            {snapSize > 0 ? snapDistFormat(snapSize) : \"\"}\n                        </div>\n                    </div>\n                );\n            });\n        })\n    );\n}\nfunction renderSnapPoses(\n    moveable: MoveableManagerInterface,\n    snapPoses: SnappableRenderType[],\n    [directionName, posName1, posName2, sizeName, scaleDirection1]: DirectionNames,\n    minPos: number,\n    targetPos: number,\n    size: number,\n    React: Renderer\n) {\n    const { zoom } = moveable.props;\n    return snapPoses.map(({ type, pos }, i) => {\n        return (\n            <div\n                className={prefix(\n                    \"line\",\n                    directionName,\n                    \"guideline\",\n                    \"target\",\n                    \"bold\",\n                    type\n                )}\n                key={`${directionName}TargetGuideline${i}`}\n                style={{\n                    [posName1]: `${minPos}px`,\n                    [posName2]: `${-targetPos + pos}px`,\n                    [sizeName]: `${size}px`,\n                    transform: `translate${scaleDirection1}(-50%) scale${scaleDirection1}(${zoom})`,\n                }}\n            />\n        );\n    });\n}\nfunction renderGuidelines(\n    moveable: MoveableManagerInterface,\n    guidelines: Guideline[],\n    [directionName, posName1, posName2, sizeName, scaleDirection1]: DirectionNames,\n    targetPos1: number,\n    targetPos2: number,\n    index: number,\n    React: Renderer\n) {\n    const { zoom } = moveable.props;\n    return guidelines.map((guideline, i) => {\n        const { pos, size, element } = guideline;\n\n        return (\n            <div\n                className={prefix(\n                    \"line\",\n                    directionName,\n                    \"guideline\",\n                    element ? \"bold\" : \"\"\n                )}\n                key={`${directionName}Guideline${i}`}\n                style={{\n                    [posName1]: `${-targetPos1 + pos[index]}px`,\n                    [posName2]: `${-targetPos2 + pos[index ? 0 : 1]}px`,\n                    [sizeName]: `${size}px`,\n                    transform: `translate${scaleDirection1}(-50%) scale${scaleDirection1}(${zoom})`,\n                }}\n            />\n        );\n    });\n}\n\nfunction getGapGuidelinesToStart(\n    guidelines: Guideline[],\n    index: number,\n    targetPos: number[],\n    targetSizes: number[],\n    guidelinePos: number[],\n    gap: number,\n    otherPos: number\n): GapGuideline[] {\n    const absGap = Math.abs(gap);\n    let start = guidelinePos[index] + (gap > 0 ? targetSizes[0] : 0);\n\n    return guidelines\n        .filter(({ pos: gapPos }) => gapPos[index] <= targetPos[index])\n        .sort(({ pos: aPos }, { pos: bPos }) => bPos[index] - aPos[index])\n        .filter(({ pos: gapPos, sizes: gapSizes }) => {\n            const nextPos = gapPos[index];\n\n            if (\n                throttle(nextPos + gapSizes![index], 0.0001) ===\n                throttle(start - absGap, 0.0001)\n            ) {\n                start = nextPos;\n                return true;\n            }\n            return false;\n        })\n        .map((gapGuideline) => {\n            const renderPos =\n                -targetPos[index] +\n                gapGuideline.pos[index] +\n                gapGuideline.sizes![index];\n\n            return {\n                ...gapGuideline,\n                gap,\n                renderPos: index\n                    ? [otherPos, renderPos]\n                    : [renderPos, otherPos],\n            };\n        });\n}\nfunction getGapGuidelinesToEnd(\n    guidelines: Guideline[],\n    index: number,\n    targetPos: number[],\n    targetSizes: number[],\n    guidelinePos: number[],\n    gap: number,\n    otherPos: number\n): GapGuideline[] {\n    const absGap = Math.abs(gap);\n    let start = guidelinePos[index] + (gap < 0 ? targetSizes[index] : 0);\n\n    return guidelines\n        .filter(({ pos: gapPos }) => gapPos[index] > targetPos[index])\n        .sort(({ pos: aPos }, { pos: bPos }) => aPos[index] - bPos[index])\n        .filter(({ pos: gapPos, sizes: gapSizes }) => {\n            const nextPos = gapPos[index];\n\n            if (\n                throttle(nextPos, 0.0001) === throttle(start + absGap, 0.0001)\n            ) {\n                start = nextPos + gapSizes![index];\n                return true;\n            }\n            return false;\n        })\n        .map((gapGuideline) => {\n            const renderPos =\n                -targetPos[index] + gapGuideline.pos[index] - absGap;\n\n            return {\n                ...gapGuideline,\n                gap,\n                renderPos: index\n                    ? [otherPos, renderPos]\n                    : [renderPos, otherPos],\n            };\n        });\n}\nfunction getGapGuidelines(\n    guidelines: Guideline[],\n    type: \"vertical\" | \"horizontal\",\n    targetPos: number[],\n    targetSizes: number[]\n): GapGuideline[] {\n    const elementGuidelines = guidelines.filter(\n        ({ element, gap, type: guidelineType }) =>\n            element && gap && guidelineType === type\n    );\n    const [index, otherIndex] = type === \"vertical\" ? [0, 1] : [1, 0];\n\n    return flat(\n        elementGuidelines.map((guideline) => {\n            const pos = guideline.pos;\n            const gap = guideline.gap!;\n            const gapGuidelines = guideline.gapGuidelines!;\n            const sizes = guideline.sizes!;\n\n            let offset = minOffset(\n                pos[otherIndex] + sizes[otherIndex] - targetPos[otherIndex],\n                pos[otherIndex] -\n                    targetPos[otherIndex] -\n                    targetSizes[otherIndex]\n            );\n            const minSize = Math.min(\n                sizes[otherIndex],\n                targetSizes[otherIndex]\n            );\n\n            if (offset > 0 && offset > minSize) {\n                offset = (offset - minSize / 2) * 2;\n            } else if (offset < 0 && offset < -minSize) {\n                offset = (offset + minSize / 2) * 2;\n            }\n\n            const otherPos =\n                (offset > 0 ? 0 : targetSizes[otherIndex]) + offset / 2;\n            return [\n                ...getGapGuidelinesToStart(\n                    gapGuidelines,\n                    index,\n                    targetPos,\n                    targetSizes,\n                    pos,\n                    gap,\n                    otherPos\n                ),\n                ...getGapGuidelinesToEnd(\n                    gapGuidelines,\n                    index,\n                    targetPos,\n                    targetSizes,\n                    pos,\n                    gap,\n                    otherPos\n                ),\n            ];\n        })\n    );\n}\nfunction renderGapGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    gapGuidelines: GapGuideline[],\n    type: \"vertical\" | \"horizontal\",\n    [directionName, posName1, posName2, sizeName, scaleDirection1, scaleDirection2]: DirectionNames,\n    snapDistFormat: Required<SnappableOptions>[\"snapDistFormat\"],\n    React: any\n) {\n    const { snapDigit = 0, isDisplaySnapDigit = true, zoom } = moveable.props;\n\n    const otherType = type === \"vertical\" ? \"horizontal\" : \"vertical\";\n    const [index, otherIndex] = type === \"vertical\" ? [0, 1] : [1, 0];\n\n    return gapGuidelines.map(({ renderPos, gap }, i) => {\n        const absGap = Math.abs(gap!);\n        const snapSize = isDisplaySnapDigit\n            ? parseFloat(absGap.toFixed(snapDigit))\n            : 0;\n\n        return (\n            <div\n                key={`${otherType}GapGuideline${i}`}\n                className={prefix(\"guideline-group\", directionName)}\n                style={{\n                    [posName1]: `${renderPos[index]}px`,\n                    [posName2]: `${renderPos[otherIndex]}px`,\n                    [sizeName]: `${absGap}px`,\n                }}\n            >\n                <div\n                    className={prefix(\n                        \"line\",\n                        directionName,\n                        \"guideline\",\n                        \"gap\"\n                    )}\n                    style={{\n                        [sizeName]: `100%`,\n                        transform: `translate${scaleDirection1}(-50%) scale${scaleDirection1}(${zoom})`,\n                    }}\n                />\n                <div\n                    className={prefix(\"size-value\", \"gap\")}\n                    style={{\n                        transform: `translate${scaleDirection2}(-50%) scale(${zoom})`,\n                    }}\n                >\n                    {snapSize > 0 ? snapDistFormat(snapSize) : \"\"}\n                </div>\n            </div>\n        );\n    });\n}\n\nfunction addBoundGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    verticalPoses: number[],\n    horizontalPoses: number[],\n    verticalSnapPoses: SnappableRenderType[],\n    horizontalSnapPoses: SnappableRenderType[],\n    externalBounds?: BoundType | false | null\n) {\n    const {\n        vertical: verticalBoundInfos,\n        horizontal: horizontalBoundInfos,\n    } = checkBoundPoses(\n        externalBounds || moveable.props.bounds,\n        verticalPoses,\n        horizontalPoses\n    );\n\n    verticalBoundInfos.forEach((info) => {\n        if (info.isBound) {\n            verticalSnapPoses.push({\n                type: \"bounds\",\n                pos: info.pos,\n            });\n        }\n    });\n    horizontalBoundInfos.forEach((info) => {\n        if (info.isBound) {\n            horizontalSnapPoses.push({\n                type: \"bounds\",\n                pos: info.pos,\n            });\n        }\n    });\n    const {\n        vertical: verticalInnerBoundPoses,\n        horizontal: horizontalInnerBoundPoses,\n    } = checkInnerBoundPoses(moveable);\n\n    verticalInnerBoundPoses.forEach((innerPos) => {\n        if (\n            findIndex(\n                verticalSnapPoses,\n                ({ type, pos }) => type === \"bounds\" && pos === innerPos\n            ) >= 0\n        ) {\n            return;\n        }\n        verticalSnapPoses.push({\n            type: \"bounds\",\n            pos: innerPos,\n        });\n    });\n\n    horizontalInnerBoundPoses.forEach((innerPos) => {\n        if (\n            findIndex(\n                horizontalSnapPoses,\n                ({ type, pos }) => type === \"bounds\" && pos === innerPos\n            ) >= 0\n        ) {\n            return;\n        }\n        horizontalSnapPoses.push({\n            type: \"bounds\",\n            pos: innerPos,\n        });\n    });\n}\n/**\n * @namespace Moveable.Snappable\n * @description Whether or not target can be snapped to the guideline. (default: false)\n * @sort 2\n */\nexport default {\n    name: \"snappable\",\n    props: {\n        snappable: [Boolean, Array],\n        snapCenter: Boolean,\n        snapHorizontal: Boolean,\n        snapVertical: Boolean,\n        snapElement: Boolean,\n        snapGap: Boolean,\n        isDisplaySnapDigit: Boolean,\n        snapDigit: Number,\n        snapThreshold: Number,\n        horizontalGuidelines: Array,\n        verticalGuidelines: Array,\n        elementGuidelines: Array,\n        bounds: Object,\n        innerBounds: Object,\n        snapDistFormat: Function,\n    } as const,\n    events: {\n        onSnap: \"snap\",\n    } as const,\n    css: [\n        `:host {\n    --bounds-color: #d66;\n}\n.guideline {\n    pointer-events: none;\n    z-index: 2;\n}\n.guideline.bounds {\n    background: #d66;\n    background: var(--bounds-color);\n}\n.guideline-group {\n    position: absolute;\n    top: 0;\n    left: 0;\n}\n.guideline-group .size-value {\n    position: absolute;\n    color: #f55;\n    font-size: 12px;\n    font-weight: bold;\n}\n.guideline-group.horizontal .size-value {\n    transform-origin: 50% 100%;\n    transform: translateX(-50%);\n    left: 50%;\n    bottom: 5px;\n}\n.guideline-group.vertical .size-value {\n    transform-origin: 0% 50%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 5px;\n}\n.guideline.gap {\n    background: #f55;\n}\n.size-value.gap {\n    color: #f55;\n}\n`,\n    ],\n    render(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n        React: Renderer\n    ): any[] {\n        const {\n            top: targetTop,\n            left: targetLeft,\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n            snapRenderInfo,\n            targetClientRect,\n            containerClientRect,\n            is3d,\n            rootMatrix,\n        } = moveable.state;\n\n        if (!snapRenderInfo || !hasGuidelines(moveable, \"\")) {\n            return [];\n        }\n\n        const n = is3d ? 4 : 3;\n        const minLeft = Math.min(pos1[0], pos2[0], pos3[0], pos4[0]);\n        const minTop = Math.min(pos1[1], pos2[1], pos3[1], pos4[1]);\n        const containerPos = calculateContainerPos(\n            rootMatrix,\n            containerClientRect,\n            n\n        );\n        const [clientLeft, clientTop] = calculateInversePosition(\n            rootMatrix,\n            [\n                targetClientRect.left - containerPos[0],\n                targetClientRect.top - containerPos[1],\n            ],\n            n\n        );\n\n        const {\n            snapThreshold = 5,\n            snapDigit = 0,\n            snapDistFormat = (v: number) => v,\n        } = moveable.props;\n        const externalPoses = snapRenderInfo.externalPoses || [];\n        const poses = getAbsolutePosesByState(moveable.state);\n        const verticalSnapPoses: SnappableRenderType[] = [];\n        const horizontalSnapPoses: SnappableRenderType[] = [];\n        const verticalGuidelines: Guideline[] = [];\n        const horizontalGuidelines: Guideline[] = [];\n        const snapInfos: Array<{\n            vertical: SnapInfo;\n            horizontal: SnapInfo;\n        }> = [];\n        const { width, height, top, left, bottom, right } = getRect(poses);\n        const hasExternalPoses = externalPoses.length > 0;\n        const externalRect = hasExternalPoses\n            ? getRect(externalPoses)\n            : ({} as ReturnType<typeof getRect>);\n\n        if (!snapRenderInfo.request) {\n            if (snapRenderInfo.direction) {\n                snapInfos.push(\n                    getSnapInfosByDirection(\n                        moveable,\n                        poses,\n                        snapRenderInfo.direction\n                    )\n                );\n            }\n            if (snapRenderInfo.snap) {\n                const rect = getRect(poses);\n\n                if (snapRenderInfo.center) {\n                    (rect as any).middle = (rect.top + rect.bottom) / 2;\n                    (rect as any).center = (rect.left + rect.right) / 2;\n                }\n                snapInfos.push(checkSnaps(moveable, rect, true, 1));\n            }\n            if (hasExternalPoses) {\n                if (snapRenderInfo.center) {\n                    (externalRect as any).middle =\n                        (externalRect.top + externalRect.bottom) / 2;\n                    (externalRect as any).center =\n                        (externalRect.left + externalRect.right) / 2;\n                }\n                snapInfos.push(checkSnaps(moveable, externalRect, true, 1));\n            }\n            snapInfos.forEach((snapInfo) => {\n                const {\n                    vertical: { posInfos: verticalPosInfos },\n                    horizontal: { posInfos: horizontalPosInfos },\n                } = snapInfo;\n                verticalSnapPoses.push(\n                    ...verticalPosInfos.map(\n                        (posInfo) =>\n                            ({\n                                type: \"snap\",\n                                pos: posInfo.pos,\n                            } as const)\n                    )\n                );\n                horizontalSnapPoses.push(\n                    ...horizontalPosInfos.map(\n                        (posInfo) =>\n                            ({\n                                type: \"snap\",\n                                pos: posInfo.pos,\n                            } as const)\n                    )\n                );\n                verticalGuidelines.push(...getSnapGuidelines(verticalPosInfos));\n                horizontalGuidelines.push(\n                    ...getSnapGuidelines(horizontalPosInfos)\n                );\n            });\n        }\n\n        addBoundGuidelines(\n            moveable,\n            [left, right],\n            [top, bottom],\n            verticalSnapPoses,\n            horizontalSnapPoses\n        );\n        if (hasExternalPoses) {\n            addBoundGuidelines(\n                moveable,\n                [externalRect.left, externalRect.right],\n                [externalRect.top, externalRect.bottom],\n                verticalSnapPoses,\n                horizontalSnapPoses,\n                snapRenderInfo.externalBounds\n            );\n        }\n        const elementHorizontalGroup = groupByElementGuidelines(\n            horizontalGuidelines,\n            clientLeft,\n            width,\n            0\n        );\n        const elementVerticalGroup = groupByElementGuidelines(\n            verticalGuidelines,\n            clientTop,\n            height,\n            1\n        );\n\n        const gapVerticalGuidelines = getGapGuidelines(\n            verticalGuidelines,\n            \"vertical\",\n            [targetLeft, targetTop],\n            [width, height]\n        );\n        const gapHorizontalGuidelines = getGapGuidelines(\n            horizontalGuidelines,\n            \"horizontal\",\n            [targetLeft, targetTop],\n            [width, height]\n        );\n\n        const allGuidelines = [...verticalGuidelines, ...horizontalGuidelines];\n        triggerEvent(\n            moveable,\n            \"onSnap\",\n            {\n                guidelines: allGuidelines.filter(({ element }) => !element),\n                elements: groupBy(\n                    allGuidelines.filter(({ element }) => element),\n                    ({ element }) => element\n                ),\n                gaps: [...gapVerticalGuidelines, ...gapHorizontalGuidelines],\n            },\n            true\n        );\n\n        return [\n            ...renderGapGuidelines(\n                moveable,\n                gapVerticalGuidelines,\n                \"vertical\",\n                HORIZONTAL_NAMES,\n                snapDistFormat,\n                React\n            ),\n            ...renderGapGuidelines(\n                moveable,\n                gapHorizontalGuidelines,\n                \"horizontal\",\n                VERTICAL_NAMES,\n                snapDistFormat,\n                React\n            ),\n            ...renderElementGroup(\n                moveable,\n                elementHorizontalGroup,\n                HORIZONTAL_NAMES,\n                minLeft,\n                clientLeft,\n                width,\n                targetTop,\n                snapThreshold,\n                snapDigit,\n                0,\n                snapDistFormat,\n                React\n            ),\n            ...renderElementGroup(\n                moveable,\n                elementVerticalGroup,\n                VERTICAL_NAMES,\n                minTop,\n                clientTop,\n                height,\n                targetLeft,\n                snapThreshold,\n                snapDigit,\n                1,\n                snapDistFormat,\n                React\n            ),\n            ...renderSnapPoses(\n                moveable,\n                horizontalSnapPoses,\n                HORIZONTAL_NAMES,\n                minLeft,\n                targetTop,\n                width,\n                React\n            ),\n            ...renderSnapPoses(\n                moveable,\n                verticalSnapPoses,\n                VERTICAL_NAMES,\n                minTop,\n                targetLeft,\n                height,\n                React\n            ),\n            ...renderGuidelines(\n                moveable,\n                horizontalGuidelines,\n                HORIZONTAL_NAMES,\n                targetLeft,\n                targetTop,\n                0,\n                React\n            ),\n            ...renderGuidelines(\n                moveable,\n                verticalGuidelines,\n                VERTICAL_NAMES,\n                targetTop,\n                targetLeft,\n                1,\n                React\n            ),\n        ];\n    },\n    dragStart(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n        e: any\n    ) {\n        moveable.state.snapRenderInfo = {\n            request: e.isRequest,\n            snap: true,\n            center: true,\n        };\n        snapStart(moveable);\n    },\n    drag(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n        e: any\n    ) {\n        moveable.state.guidelines = getTotalGuidelines(moveable);\n    },\n    pinchStart(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragEnd(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragControlCondition(e: any) {\n        if (directionCondition(e) || rotatableDragControlCondtion(e)) {\n            return true;\n        }\n        if (!e.isRequest && e.inputEvent) {\n            return hasClass(e.inputEvent.target, prefix(\"snap-control\"));\n        }\n    },\n    dragControlStart(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        moveable.state.snapRenderInfo = null;\n        snapStart(moveable);\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        moveable.state.guidelines = getTotalGuidelines(moveable);\n    },\n    dragControlEnd(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragGroupStart(moveable: any, e: any) {\n        this.dragStart(moveable, e);\n    },\n    dragGroup(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        moveable.state.guidelines = getTotalGuidelines(moveable);\n    },\n    dragGroupEnd(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragGroupControlStart(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        moveable.state.snapRenderInfo = null;\n        snapStart(moveable);\n    },\n    dragGroupControl(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        moveable.state.guidelines = getTotalGuidelines(moveable);\n    },\n    dragGroupControlEnd(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    unset(moveable: any) {\n        const state = moveable.state;\n\n        state.enableSnap = false;\n        state.guidelines = [];\n        state.snapRenderInfo = null;\n    },\n};\n\n/**\n * Whether or not target can be snapped to the guideline. (default: false)\n * @name Moveable.Snappable#snappable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snappable = true;\n */\n/**\n * When you drag, make the snap in the center of the target. (default: false)\n * @name Moveable.Snappable#snapCenter\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n * });\n *\n * moveable.snapCenter = true;\n */\n\n/**\n * When you drag, make the snap in the vertical guidelines. (default: true)\n * @name Moveable.Snappable#snapVertical\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   snapVertical: true,\n *   snapHorizontal: true,\n *   snapElement: true,\n * });\n *\n * moveable.snapVertical = false;\n */\n/**\n * When you drag, make the snap in the horizontal guidelines. (default: true)\n * @name Moveable.Snappable#snapHorizontal\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   snapVertical: true,\n *   snapHorizontal: true,\n *   snapElement: true,\n * });\n *\n * moveable.snapHorizontal = false;\n */\n/**\n * When you drag, make the gap snap in the element guidelines. (default: true)\n * @name Moveable.Snappable#snapGap\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   snapVertical: true,\n *   snapHorizontal: true,\n *   snapElement: true,\n *   snapGap: true,\n * });\n *\n * moveable.snapGap = false;\n */\n/**\n * When you drag, make the snap in the element guidelines. (default: true)\n * @name Moveable.Snappable#snapElement\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   snapVertical: true,\n *   snapHorizontal: true,\n *   snapElement: true,\n * });\n *\n * moveable.snapElement = false;\n */\n/**\n * Distance value that can snap to guidelines. (default: 5)\n * @name Moveable.Snappable#snapThreshold\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapThreshold = 5;\n */\n\n/**\n * Add guidelines in the horizontal direction. (default: [])\n * @name Moveable.Snappable#horizontalGuidelines\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.horizontalGuidelines = [100, 200, 500];\n */\n\n/**\n * Add guidelines in the vertical direction. (default: [])\n * @name Moveable.Snappable#verticalGuidelines\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.verticalGuidelines = [100, 200, 500];\n */\n/**\n * Add guidelines for the element. (default: [])\n * @name Moveable.Snappable#elementGuidelines\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.elementGuidelines = [\n *   document.querySelector(\".element\"),\n * ];\n */\n/**\n * You can set up boundaries. (default: null)\n * @name Moveable.Snappable#bounds\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.bounds = { left: 0, right: 1000, top: 0, bottom: 1000};\n */\n/**\n * You can set up inner boundaries. (default: null)\n * @name Moveable.Snappable#innerBounds\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.innerBounds = { left: 500, top: 500, width: 100, height: 100};\n */\n/**\n * snap distance digits (default: 0)\n * @name Moveable.Snappable#snapDigit\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapDigit = 0\n */\n/**\n * Whether to show snap distance (default: true)\n * @name Moveable.Snappable#isDisplaySnapDigit\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.isDisplaySnapDigit = true;\n */\n\n/**\n * You can set the text format of the distance shown in the guidelines. (default: self)\n * @name Moveable.Snappable#snapDistFormat\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  snappable: true,\n *  snapDistFormat: v => v,\n * });\n * moveable.snapDistFormat = v => `${v}px`;\n */\n\n/**\n * When you drag or dragControl, the `snap` event is called.\n * @memberof Moveable.Snappable\n * @event snap\n * @param {Moveable.Snappable.OnSnap} - Parameters for the `snap` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     snappable: true\n * });\n * moveable.on(\"snap\", e => {\n *     console.log(\"onSnap\", e);\n * });\n */\n","import {\n    setDragStart, getBeforeDragDist, getTransformDist,\n    convertTransformFormat, resolveTransformEvent, fillTransformStartEvent, setDefaultTransformIndex\n} from \"../gesto/GestoUtils\";\nimport { throttleArray, triggerEvent, fillParams, throttle, getDistSize, prefix, fillEndParams } from \"../utils\";\nimport { minus, plus } from \"@scena/matrix\";\nimport {\n    DraggableProps, OnDrag, OnDragGroup,\n    OnDragGroupStart, OnDragStart, OnDragEnd, DraggableState,\n    Renderer, OnDragGroupEnd, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\nimport { triggerChildGesto } from \"../groupUtils\";\nimport { checkSnapDrag, startCheckSnapDrag } from \"./Snappable\";\nimport { IObject, getRad } from \"@daybrush/utils\";\n\n/**\n * @namespace Draggable\n * @memberof Moveable\n * @description Draggable refers to the ability to drag and move targets.\n */\nexport default {\n    name: \"draggable\",\n    props: {\n        draggable: Boolean,\n        throttleDrag: Number,\n        throttleDragRotate: Number,\n        startDragRotate: Number,\n        edgeDraggable: Boolean,\n    } as const,\n    events: {\n        onDragStart: \"dragStart\",\n        onDrag: \"drag\",\n        onDragEnd: \"dragEnd\",\n        onDragGroupStart: \"dragGroupStart\",\n        onDragGroup: \"dragGroup\",\n        onDragGroupEnd: \"dragGroupEnd\",\n    } as const,\n    render(\n        moveable: MoveableManagerInterface<DraggableProps, DraggableState>,\n        React: Renderer,\n    ): any[] {\n        const { throttleDragRotate, zoom } = moveable.props;\n        const { dragInfo, beforeOrigin } = moveable.state;\n\n        if (!throttleDragRotate || !dragInfo) {\n            return [];\n        }\n        const dist = dragInfo.dist;\n\n        if (!dist[0] && !dist[1]) {\n            return [];\n        }\n\n        const width = getDistSize(dist);\n        const rad = getRad(dist, [0, 0]);\n\n        return [<div className={prefix(\n            \"line\",\n            \"horizontal\",\n            \"dragline\",\n            \"dashed\",\n        )} key={`dragRotateGuideline`} style={{\n            width: `${width}px`,\n            transform: `translate(${beforeOrigin[0]}px, ${beforeOrigin[1]}px) rotate(${rad}rad) scaleY(${zoom})`,\n        }} />];\n    },\n    dragStart(\n        moveable: MoveableManagerInterface<DraggableProps, any>,\n        e: any,\n    ) {\n        const { datas, parentEvent, parentGesto } = e;\n        const state = moveable.state;\n        const {\n            target,\n            gesto,\n        } = state;\n\n        if (gesto) {\n            return false;\n        }\n        state.gesto = parentGesto || moveable.targetGesto;\n        const style = window.getComputedStyle(target!);\n\n        datas.datas = {};\n        datas.left = parseFloat(style.left || \"\") || 0;\n        datas.top = parseFloat(style.top || \"\") || 0;\n        datas.bottom = parseFloat(style.bottom || \"\") || 0;\n        datas.right = parseFloat(style.right || \"\") || 0;\n        datas.startValue = [0, 0];\n\n        setDragStart(moveable, e);\n        setDefaultTransformIndex(e);\n        startCheckSnapDrag(moveable, datas);\n\n        datas.prevDist = [0, 0];\n        datas.prevBeforeDist = [0, 0];\n        datas.isDrag = false;\n\n        const params = fillParams<OnDragStart>(moveable, e, {\n            set: (translate: number[]) => {\n                datas.startValue = translate;\n            },\n            ...fillTransformStartEvent(e),\n        });\n        const result = parentEvent || triggerEvent(moveable, \"onDragStart\", params);\n\n        if (result !== false) {\n            datas.isDrag = true;\n            moveable.state.dragInfo = {\n                startRect: moveable.getRect(),\n                dist: [0, 0],\n            };\n        } else {\n            state.gesto = null;\n            datas.isPinch = false;\n        }\n        return datas.isDrag ? params : false;\n    },\n    drag(\n        moveable: MoveableManagerInterface<DraggableProps, any>,\n        e: any,\n    ): OnDrag | undefined {\n        resolveTransformEvent(e, \"translate\");\n\n        const { datas, parentEvent, parentFlag, isPinch, isRequest } = e;\n        let { distX, distY } = e;\n        const { isDrag, prevDist, prevBeforeDist, startValue } = datas;\n\n        if (!isDrag) {\n            return;\n        }\n        const props = moveable.props;\n\n        const parentMoveable = props.parentMoveable;\n        const throttleDrag = parentEvent ? 0 : (props.throttleDrag || 0);\n        const throttleDragRotate = parentEvent ? 0 : (props.throttleDragRotate || 0);\n\n        let isSnap = false;\n        let dragRotateRad = 0;\n\n        if (!parentEvent && throttleDragRotate > 0 && (distX || distY)) {\n            const startDragRotate = props.startDragRotate || 0;\n            const deg\n                = throttle(startDragRotate + getRad([0, 0], [distX, distY]) * 180 / Math.PI, throttleDragRotate)\n                - startDragRotate;\n            const ry = distY * Math.abs(Math.cos((deg - 90) / 180 * Math.PI));\n            const rx = distX * Math.abs(Math.cos(deg / 180 * Math.PI));\n            const r = getDistSize([rx, ry]);\n            dragRotateRad = deg * Math.PI / 180;\n\n            distX = r * Math.cos(dragRotateRad);\n            distY = r * Math.sin(dragRotateRad);\n        }\n\n        if (!isPinch && !parentEvent && !parentFlag && (!throttleDragRotate || distX || distY)) {\n            const [verticalInfo, horizontalInfo] = checkSnapDrag(\n                moveable, distX, distY, throttleDragRotate, isRequest, datas,\n            );\n            const {\n                isSnap: isVerticalSnap,\n                isBound: isVerticalBound,\n                offset: verticalOffset,\n            } = verticalInfo;\n            const {\n                isSnap: isHorizontalSnap,\n                isBound: isHorizontalBound,\n                offset: horizontalOffset,\n            } = horizontalInfo;\n            isSnap = isVerticalSnap || isHorizontalSnap || isVerticalBound || isHorizontalBound;\n\n            distX += verticalOffset;\n            distY += horizontalOffset;\n        }\n        datas.passDeltaX = distX - (datas.passDistX || 0);\n        datas.passDeltaY = distY - (datas.passDistY || 0);\n        datas.passDistX = distX;\n        datas.passDistY = distY;\n        const beforeTranslate = plus(getBeforeDragDist({ datas, distX, distY }), startValue);\n        const translate = plus(getTransformDist({ datas, distX, distY }), startValue);\n\n        if (!throttleDragRotate && !isSnap) {\n            throttleArray(translate, throttleDrag);\n            throttleArray(beforeTranslate, throttleDrag);\n        }\n\n        const beforeDist = minus(beforeTranslate, startValue);\n        const dist = minus(translate, startValue);\n        const delta = minus(dist, prevDist);\n        const beforeDelta = minus(beforeDist, prevBeforeDist);\n\n        datas.prevDist = dist;\n        datas.prevBeforeDist = beforeDist;\n\n        const left = datas.left + beforeDist[0];\n        const top = datas.top + beforeDist[1];\n        const right = datas.right - beforeDist[0];\n        const bottom = datas.bottom - beforeDist[1];\n        const nextTransform = convertTransformFormat(datas,\n            `translate(${translate[0]}px, ${translate[1]}px)`, `translate(${dist[0]}px, ${dist[1]}px)`);\n\n        moveable.state.dragInfo.dist = parentEvent ? [0, 0] : dist;\n        if (!parentEvent && !parentMoveable && delta.every(num => !num) && beforeDelta.some(num => !num)) {\n            return;\n        }\n\n        const {\n            width,\n            height,\n        } = moveable.state;\n        const params = fillParams<OnDrag>(moveable, e, {\n            transform: nextTransform,\n            dist,\n            delta,\n            translate,\n            beforeDist,\n            beforeDelta,\n            beforeTranslate,\n            left,\n            top,\n            right,\n            bottom,\n            width,\n            height,\n            isPinch,\n        });\n\n        !parentEvent && triggerEvent(moveable, \"onDrag\", params);\n        return params;\n    },\n    dragEnd(\n        moveable: MoveableManagerInterface<DraggableProps, DraggableState>,\n        e: any,\n    ) {\n        const { parentEvent, datas, isDrag } = e;\n\n        moveable.state.gesto = null;\n        moveable.state.dragInfo = null;\n        if (!datas.isDrag) {\n            return;\n        }\n        datas.isDrag = false;\n        !parentEvent && triggerEvent(moveable, \"onDragEnd\", fillEndParams<OnDragEnd>(moveable, e, {}));\n        return isDrag;\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas, clientX, clientY } = e;\n\n        const params = this.dragStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        const events = triggerChildGesto(moveable, this, \"dragStart\", [\n            clientX || 0,\n            clientY || 0,\n        ], e, false);\n\n        const nextParams: OnDragGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n        };\n        const result = triggerEvent(moveable, \"onDragGroupStart\", nextParams);\n\n        datas.isDrag = result !== false;\n\n        return datas.isDrag ? params : false;\n    },\n    dragGroup(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isDrag) {\n            return;\n        }\n        const params = this.drag(moveable, e);\n        const { passDeltaX, passDeltaY } = e.datas;\n        const events = triggerChildGesto(moveable, this, \"drag\", [passDeltaX, passDeltaY], e, false);\n\n        if (!params) {\n            return;\n        }\n        const nextParams: OnDragGroup = {\n            targets: moveable.props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onDragGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isDrag) {\n            return;\n        }\n        this.dragEnd(moveable, e);\n        triggerChildGesto(moveable, this, \"dragEnd\", [0, 0], e, false);\n        triggerEvent(moveable, \"onDragGroupEnd\", fillEndParams<OnDragGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n        }));\n\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Draggable#request\n     * @param {object} [e] - the draggable's request parameter\n     * @param {number} [e.x] - x position\n     * @param {number} [e.y] - y position\n     * @param {number} [e.deltaX] - X number to move\n     * @param {number} [e.deltaY] - Y number to move\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * // Use Relative Value\n     * moveable.request(\"draggable\", { deltaX: 10, deltaY: 10 }, true);\n     * // Use Absolute Value\n     * moveable.request(\"draggable\", { x: 200, y: 100 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"draggable\");\n     *\n     * // request\n     * // Use Relative Value\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * // Use Absolute Value\n     * moveable.request(\"draggable\", { x: 200, y: 100 });\n     * moveable.request(\"draggable\", { x: 220, y: 100 });\n     * moveable.request(\"draggable\", { x: 240, y: 100 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManagerInterface<any, any>) {\n        const datas = {};\n        const rect = moveable.getRect();\n        let distX = 0;\n        let distY = 0;\n\n        return {\n            isControl: false,\n            requestStart() {\n                return { datas };\n            },\n            request(e: IObject<any>) {\n                if (\"x\" in e) {\n                    distX = e.x - rect.left;\n                } else if (\"deltaX\" in e) {\n                    distX += e.deltaX;\n                }\n                if (\"y\" in e) {\n                    distY = e.y - rect.top;\n                } else if (\"deltaY\" in e) {\n                    distY += e.deltaY;\n                }\n\n                return { datas, distX, distY };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n    unset(moveable: any) {\n        moveable.state.dragInfo = null;\n    },\n};\n\n/**\n * Whether or not target can be dragged. (default: false)\n * @name Moveable.Draggable#draggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.draggable = true;\n */\n\n/**\n * throttle of x, y when drag.\n * @name Moveable.Draggable#throttleDrag\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleDrag = 1;\n */\n\n/**\n* throttle of angle of x, y when drag.\n* @name Moveable.Draggable#throttleDragRotate\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body);\n*\n* moveable.throttleDragRotate = 45;\n*/\n\n/**\n* start angle of throttleDragRotate of x, y when drag.\n* @name Moveable.Draggable#startDragRotate\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body);\n*\n* // 45, 135, 225, 315\n* moveable.throttleDragRotate = 90;\n* moveable.startDragRotate = 45;\n*/\n\n/**\n * When the drag starts, the dragStart event is called.\n * @memberof Moveable.Draggable\n * @event dragStart\n * @param {Moveable.Draggable.OnDragStart} - Parameters for the dragStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"dragStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When dragging, the drag event is called.\n * @memberof Moveable.Draggable\n * @event drag\n * @param {Moveable.Draggable.OnDrag} - Parameters for the drag event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"drag\", ({ target, transform }) => {\n *     target.style.transform = transform;\n * });\n */\n/**\n * When the drag finishes, the dragEnd event is called.\n * @memberof Moveable.Draggable\n * @event dragEnd\n * @param {Moveable.Draggable.OnDragEnd} - Parameters for the dragEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"dragEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group drag starts, the `dragGroupStart` event is called.\n* @memberof Moveable.Draggable\n* @event dragGroupStart\n* @param {Moveable.Draggable.OnDragGroupStart} - Parameters for the `dragGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     draggable: true\n* });\n* moveable.on(\"dragGroupStart\", ({ targets }) => {\n*     console.log(\"onDragGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group drag, the `dragGroup` event is called.\n* @memberof Moveable.Draggable\n* @event dragGroup\n* @param {Moveable.Draggable.OnDragGroup} - Parameters for the `dragGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     draggable: true\n* });\n* moveable.on(\"dragGroup\", ({ targets, events }) => {\n*     console.log(\"onDragGroup\", targets);\n*     events.forEach(ev => {\n*          // drag event\n*          console.log(\"onDrag left, top\", ev.left, ev.top);\n*          // ev.target!.style.left = `${ev.left}px`;\n*          // ev.target!.style.top = `${ev.top}px`;\n*          console.log(\"onDrag translate\", ev.dist);\n*          ev.target!.style.transform = ev.transform;)\n*     });\n* });\n*/\n\n/**\n * When the group drag finishes, the `dragGroupEnd` event is called.\n * @memberof Moveable.Draggable\n * @event dragGroupEnd\n * @param {Moveable.Draggable.OnDragGroupEnd} - Parameters for the `dragGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     draggable: true\n * });\n * moveable.on(\"dragGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onDragGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    throttle, prefix, triggerEvent, fillParams,\n    calculatePosition, fillEndParams, getRotationRad\n} from \"../utils\";\nimport { IObject, hasClass, getRad } from \"@daybrush/utils\";\nimport {\n    RotatableProps, OnRotateGroup, OnRotateGroupEnd,\n    Renderer, OnRotateGroupStart, OnRotateStart, OnRotate,\n    OnRotateEnd, MoveableClientRect, SnappableProps,\n    SnappableState, MoveableManagerInterface, MoveableGroupInterface, DraggableProps,\n    OnDragStart,\n} from \"../types\";\nimport { triggerChildAble } from \"../groupUtils\";\nimport Draggable from \"./Draggable\";\nimport { minus, plus, rotate as rotateMatrix } from \"@scena/matrix\";\nimport CustomGesto from \"../gesto/CustomGesto\";\nimport { checkSnapRotate } from \"./Snappable\";\nimport {\n    fillTransformStartEvent,\n    convertTransformFormat, getRotateDist,\n    getOriginDirection,\n    getDirectionOffset,\n    fillTransformEvent,\n    setDefaultTransformIndex,\n    resolveTransformEvent,\n    getTransformDirection,\n} from \"../gesto/GestoUtils\";\n\n/**\n * @namespace Rotatable\n * @memberof Moveable\n * @description Rotatable indicates whether the target can be rotated.\n */\n\nfunction setRotateStartInfo(\n    moveable: MoveableManagerInterface<any, any>,\n    datas: IObject<any>, clientX: number, clientY: number, origin: number[], rect: MoveableClientRect) {\n\n    const n = moveable.state.is3d ? 4 : 3;\n    const nextOrigin = calculatePosition(moveable.state.rootMatrix, origin, n);\n    const startAbsoluteOrigin = plus([rect.left, rect.top], nextOrigin);\n\n    datas.startAbsoluteOrigin = startAbsoluteOrigin;\n    datas.prevDeg = getRad(startAbsoluteOrigin, [clientX, clientY]) / Math.PI * 180;\n    datas.prevSnapDeg = datas.prevDeg;\n    datas.startDeg = datas.prevDeg;\n    datas.loop = 0;\n}\nfunction getParentDeg(\n    moveable: MoveableManagerInterface<any, any>,\n    moveableRect: any,\n    datas: IObject<any>,\n    parentDist: number,\n    direction: number,\n    startValue: number,\n) {\n    const {\n        prevDeg,\n    } = datas;\n\n    // const absoluteDeg = startValue + parentDist;\n    const dist = checkSnapRotate(\n        moveable,\n        moveableRect,\n        datas.origin,\n        parentDist,\n    );\n    datas.prevDeg = dist;\n\n    const delta = dist - prevDeg;\n\n    return [delta, dist, startValue + dist];\n}\nfunction getDeg(\n    moveable: MoveableManagerInterface<any, any>,\n    moveableRect: any,\n    datas: IObject<any>,\n    deg: number,\n    direction: number,\n    startValue: number,\n    throttleRotate: number,\n    isSnap?: boolean,\n) {\n    const {\n        prevDeg,\n        prevSnapDeg,\n        startDeg,\n        loop: prevLoop,\n    } = datas;\n\n    if (prevDeg > deg && prevDeg > 270 && deg < 90) {\n        // 360 => 0\n        ++datas.loop;\n    } else if (prevDeg < deg && prevDeg < 90 && deg > 270) {\n        // 0 => 360\n        --datas.loop;\n    }\n    const loop = datas.loop;\n    const absolutePrevSnapDeg = prevLoop * 360 + prevSnapDeg - startDeg + startValue;\n    let absoluteDeg = loop * 360 + deg - startDeg + startValue;\n\n    datas.prevDeg = absoluteDeg - loop * 360 + startDeg - startValue;\n\n    absoluteDeg = throttle(absoluteDeg, throttleRotate);\n    let dist = direction * (absoluteDeg - startValue);\n    if (isSnap) {\n        dist = checkSnapRotate(moveable, moveableRect, datas.origin, dist);\n        absoluteDeg = dist / direction + startValue;\n    }\n    datas.prevSnapDeg = absoluteDeg - loop * 360 + startDeg - startValue;\n\n    const delta = direction * (absoluteDeg - absolutePrevSnapDeg);\n\n    return [delta, dist, startValue + dist];\n}\nfunction getRotateInfo(\n    moveable: MoveableManagerInterface<any, any>,\n    moveableRect: any,\n    datas: IObject<any>,\n    direction: number,\n    clientX: number, clientY: number,\n    startValue: number,\n    throttleRotate: number,\n) {\n    return getDeg(\n        moveable,\n        moveableRect,\n        datas,\n        getRad(datas.startAbsoluteOrigin, [clientX, clientY]) / Math.PI * 180,\n        direction,\n        startValue,\n        throttleRotate,\n        true,\n    );\n}\n\nexport function getReversePositionX(dir: string) {\n    if (dir === \"left\") {\n        return \"right\";\n    } else if (dir === \"right\") {\n        return \"left\";\n    }\n    return dir;\n}\nexport function getReversePositionY(dir: string) {\n    if (dir === \"top\") {\n        return \"bottom\";\n    } else if (dir === \"bottom\") {\n        return \"top\";\n    }\n    return dir;\n}\nexport function getRotationPositions(\n    rotationPosition: RotatableProps[\"rotationPosition\"],\n    [pos1, pos2, pos3, pos4]: number[][],\n    direction: number,\n) {\n    const [dir1, dir2] = (rotationPosition || \"top\").split(\"-\");\n    let radPoses = [pos1, pos2];\n\n    // if (scale[0] < 0) {\n    //     dir1 = getReversePositionX(dir1);\n    //     dir2 = getReversePositionX(dir2);\n    // }\n    // if (scale[1] < 0) {\n    //     dir1 = getReversePositionY(dir1);\n    //     dir2 = getReversePositionY(dir2);\n    // }\n    if (dir1 === \"left\") {\n        radPoses = [pos3, pos1];\n    } else if (dir1 === \"right\") {\n        radPoses = [pos2, pos4];\n    } else if (dir1 === \"bottom\") {\n        radPoses = [pos4, pos3];\n    }\n    let pos = [\n        (radPoses[0][0] + radPoses[1][0]) / 2,\n        (radPoses[0][1] + radPoses[1][1]) / 2,\n    ];\n    const rad = getRotationRad(radPoses, direction);\n    if (dir2) {\n        const isStart = dir2 === \"top\" || dir2 === \"left\";\n        const isReverse = dir1 === \"bottom\" || dir1 === \"left\";\n\n        pos = radPoses[(isStart && !isReverse) || (!isStart && isReverse) ? 0 : 1];\n    }\n    return [pos, rad] as const;\n}\n\nexport function dragControlCondition(e: any) {\n    if (e.isRequest) {\n        return e.requestAble === \"rotatable\";\n    }\n    return hasClass(e.inputEvent.target, prefix(\"rotation-control\"));\n}\n\nexport default {\n    name: \"rotatable\",\n    canPinch: true,\n    props: {\n        rotatable: Boolean,\n        rotationPosition: String,\n        throttleRotate: Number,\n    } as const,\n    events: {\n        onRotateStart: \"rotateStart\",\n        onRotate: \"rotate\",\n        onRotateEnd: \"rotateEnd\",\n        onRotateGroupStart: \"rotateGroupStart\",\n        onRotateGroup: \"rotateGroup\",\n        onRotateGroupEnd: \"rotateGroupEnd\",\n    } as const,\n    css: [\n        `.rotation {\n            position: absolute;\n            height: 40px;\n            width: 1px;\n            transform-origin: 50% 100%;\n            height: calc(40px * var(--zoom));\n            top: auto;\n            left: 0;\n            bottom: 100%;\n            will-change: transform;\n        }\n        .rotation .rotation-line {\n            display: block;\n            width: 100%;\n            height: 100%;\n            transform-origin: 50% 50%;\n        }\n        .rotation .rotation-control {\n            border-color: #4af;\n            border-color: var(--moveable-color);\n            background:#fff;\n            cursor: alias;\n        }`,\n    ],\n    render(moveable: MoveableManagerInterface<RotatableProps>, React: Renderer): any {\n        const {\n            rotatable,\n            rotationPosition,\n            zoom,\n        } = moveable.props;\n        const {\n            renderPoses,\n            direction,\n        } = moveable.state;\n        if (!rotatable) {\n            return null;\n        }\n        const [pos, rad] = getRotationPositions(rotationPosition!, renderPoses, direction);\n\n        return (\n            <div key=\"rotation\" className={prefix(\"rotation\")} style={{\n                // tslint:disable-next-line: max-line-length\n                transform: `translate(-50%) translate(${pos[0]}px, ${pos[1]}px) rotate(${rad}rad)`,\n            }}>\n                <div className={prefix(\"line rotation-line\")} style={{\n                    transform: `scaleX(${zoom})`,\n                }}></div>\n                <div className={prefix(\"control rotation-control\")} style={{\n                    transform: `translate(0.5px) scale(${zoom})`,\n                }}></div>\n            </div>\n        );\n    },\n    dragControlCondition,\n    dragControlStart(\n        moveable: MoveableManagerInterface<RotatableProps & SnappableProps & DraggableProps, SnappableState>,\n        e: any) {\n        const {\n            datas,\n            clientX, clientY,\n            parentRotate, parentFlag, isPinch,\n            isRequest,\n        } = e;\n        const {\n            target, left, top, origin, beforeOrigin,\n            direction, beforeDirection, targetTransform,\n            moveableClientRect,\n        } = moveable.state;\n\n        if (!isRequest && !target) {\n            return false;\n        }\n\n        const rect = moveable.getRect();\n        datas.rect = rect;\n        datas.transform = targetTransform;\n        datas.left = left;\n        datas.top = top;\n        datas.fixedPosition = getDirectionOffset(moveable, getOriginDirection(moveable));\n        datas.absoluteInfo = {\n            origin: rect.origin,\n            startValue: rect.rotation,\n        }\n        setRotateStartInfo(moveable, datas.absoluteInfo, clientX, clientY, origin, moveableClientRect);\n        if (isRequest || isPinch || parentFlag) {\n            const externalRotate = parentRotate || 0;\n\n            datas.beforeInfo = {\n                origin: rect.beforeOrigin,\n                prevDeg: externalRotate,\n                startDeg: externalRotate,\n                prevSnapDeg: externalRotate, loop: 0,\n            };\n            datas.afterInfo = {\n                origin: rect.origin,\n                prevDeg: externalRotate, startDeg: externalRotate,\n                prevSnapDeg: externalRotate, loop: 0,\n            };\n        } else {\n            datas.beforeInfo = { origin: rect.beforeOrigin };\n            datas.afterInfo = { origin: rect.origin };\n\n            setRotateStartInfo(moveable, datas.beforeInfo, clientX, clientY, beforeOrigin, moveableClientRect);\n            setRotateStartInfo(moveable, datas.afterInfo, clientX, clientY, origin, moveableClientRect);\n        }\n\n        datas.direction = direction;\n        datas.beforeDirection = beforeDirection;\n        datas.startValue = 0;\n        datas.datas = {};\n\n        setDefaultTransformIndex(e);\n\n        const params = fillParams<OnRotateStart>(moveable, e, {\n            set: (rotatation: number) => {\n                datas.startValue = rotatation * Math.PI / 180;\n            },\n            ...fillTransformStartEvent(e),\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ) as OnDragStart | false,\n        });\n        const result = triggerEvent(moveable, \"onRotateStart\", params);\n        datas.isRotate = result !== false;\n        moveable.state.snapRenderInfo = {\n            request: e.isRequest,\n        };\n\n        return datas.isRotate ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<RotatableProps & DraggableProps>,\n        e: any,\n    ) {\n        const { datas, clientX, clientY, parentRotate, parentFlag, isPinch, groupDelta } = e;\n        const {\n            beforeDirection,\n            beforeInfo,\n            afterInfo,\n            absoluteInfo,\n            isRotate,\n            startValue,\n            rect,\n        } = datas;\n\n        if (!isRotate) {\n            return;\n        }\n\n        resolveTransformEvent(e, \"rotate\");\n\n        const targetDirection = getTransformDirection(e);\n        const direction = beforeDirection * targetDirection;\n        const {\n            throttleRotate = 0,\n            parentMoveable,\n        } = moveable.props;\n\n        let delta: number;\n        let dist: number;\n        let rotate: number;\n\n        let beforeDelta: number;\n        let beforeDist: number;\n        let beforeRotate: number;\n\n        let absoluteDelta: number;\n        let absoluteDist: number;\n        let absoluteRotate: number;\n\n        const startDeg = 180 / Math.PI * startValue;\n        const absoluteStartDeg = absoluteInfo.startValue;\n\n        if (!parentFlag && \"parentDist\" in e) {\n            const parentDist = e.parentDist;\n\n            [delta, dist, rotate]\n                = getParentDeg(moveable, rect, afterInfo, parentDist, direction, startDeg);\n            [beforeDelta, beforeDist, beforeRotate]\n                = getParentDeg(moveable, rect, beforeInfo, parentDist, beforeDirection, startDeg);\n            [absoluteDelta, absoluteDist, absoluteRotate]\n                = getParentDeg(moveable, rect, absoluteInfo, parentDist, direction, absoluteStartDeg);\n        } else if (isPinch || parentFlag) {\n            [delta, dist, rotate]\n                = getDeg(moveable, rect, afterInfo, parentRotate, direction, startDeg, throttleRotate);\n            [beforeDelta, beforeDist, beforeRotate]\n                = getDeg(moveable, rect, beforeInfo, parentRotate, beforeDirection, startDeg, throttleRotate);\n            [absoluteDelta, absoluteDist, absoluteRotate]\n                = getDeg(moveable, rect, absoluteInfo, parentRotate, direction, absoluteStartDeg, throttleRotate);\n        } else {\n            [delta, dist, rotate]\n                = getRotateInfo(moveable, rect, afterInfo, direction, clientX, clientY, startDeg, throttleRotate);\n            [beforeDelta, beforeDist, beforeRotate] = getRotateInfo(\n                moveable, rect, beforeInfo, beforeDirection, clientX, clientY,\n                startDeg, throttleRotate,\n            );\n            [absoluteDelta, absoluteDist, absoluteRotate]\n                = getRotateInfo(\n                    moveable, rect, absoluteInfo, direction, clientX, clientY,\n                    absoluteStartDeg, throttleRotate,\n                );\n        }\n\n        if (!absoluteDelta && !delta && !beforeDelta && !parentMoveable) {\n            return;\n        }\n\n        const nextTransform = convertTransformFormat(\n            datas, `rotate(${rotate}deg)`, `rotate(${dist}deg)`,\n        );\n\n        const inverseDist = getRotateDist(moveable, dist, datas.fixedPosition, datas);\n        const inverseDelta = minus(\n            plus(groupDelta || [0, 0], inverseDist),\n            datas.prevInverseDist || [0, 0],\n        );\n        datas.prevInverseDist = inverseDist;\n\n        const params = fillParams<OnRotate>(moveable, e, {\n            delta,\n            dist,\n            rotate,\n\n            beforeDist,\n            beforeDelta,\n            beforeRotate,\n\n            absoluteDist,\n            absoluteDelta,\n            absoluteRotate,\n            isPinch: !!isPinch,\n            ...fillTransformEvent(\n                moveable,\n                nextTransform,\n                inverseDelta,\n                isPinch,\n                e,\n            ),\n        });\n        triggerEvent(moveable, \"onRotate\", params);\n\n        return params;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<RotatableProps>, e: any) {\n        const { datas, isDrag } = e;\n\n        if (!datas.isRotate) {\n            return false;\n        }\n        datas.isRotate = false;\n\n        triggerEvent(moveable, \"onRotateEnd\", fillEndParams<OnRotateEnd>(moveable, e, {}));\n        return isDrag;\n    },\n    dragGroupControlCondition: dragControlCondition,\n    dragGroupControlStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        const {\n            left: parentLeft,\n            top: parentTop,\n            beforeOrigin: parentBeforeOrigin,\n        } = moveable.state;\n\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n\n        params.set(datas.beforeDirection * moveable.rotation);\n\n        const events = triggerChildAble(\n            moveable,\n            this,\n            \"dragControlStart\",\n            e,\n            (child, ev) => {\n                const { left, top, beforeOrigin } = child.state;\n                const childClient = plus(\n                    minus([left, top], [parentLeft, parentTop]),\n                    minus(beforeOrigin, parentBeforeOrigin),\n                );\n\n                ev.datas.groupClient = childClient;\n                return { ...ev, parentRotate: 0 };\n            },\n        );\n\n        const nextParams: OnRotateGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n        };\n        const result = triggerEvent(moveable, \"onRotateGroupStart\", nextParams);\n\n        datas.isRotate = result !== false;\n\n        return datas.isRotate ? params : false;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isRotate) {\n            return;\n        }\n        const params = this.dragControl(moveable, e);\n\n        if (!params) {\n            return;\n        }\n        const direction = datas.beforeDirection;\n        const parentRotate = params.beforeDist;\n        const deg = params.beforeDelta;\n        const rad = deg / 180 * Math.PI;\n\n        const events = triggerChildAble(\n            moveable,\n            this,\n            \"dragControl\",\n            e,\n            (_, ev) => {\n                const [prevX, prevY] = ev.datas.groupClient;\n                const [clientX, clientY] = rotateMatrix([prevX, prevY], rad * direction);\n                const delta = [clientX - prevX, clientY - prevY];\n\n                ev.datas.groupClient = [clientX, clientY];\n\n                return { ...ev, parentRotate, groupDelta: delta };\n            },\n        );\n        moveable.rotation = direction * params.beforeRotate;\n\n        const nextParams: OnRotateGroup = {\n            targets: moveable.props.targets!,\n            events,\n            set: (rotation: number) => {\n                moveable.rotation = rotation;\n            },\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onRotateGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isRotate) {\n            return;\n        }\n\n        this.dragControlEnd(moveable, e);\n        triggerChildAble(moveable, this, \"dragControlEnd\", e);\n\n        const nextParams = fillEndParams<OnRotateGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n        });\n\n        triggerEvent(moveable, \"onRotateGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Rotatable#request\n     * @param {object} [e] - the Resizable's request parameter\n     * @param {number} [e.deltaRotate=0] -  delta number of rotation\n     * @param {number} [e.rotate=0] - absolute number of moveable's rotation\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"rotatable\", { deltaRotate: 10 }, true);\n     *\n     * * moveable.request(\"rotatable\", { rotate: 10 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"rotatable\");\n     *\n     * // request\n     * requester.request({ deltaRotate: 10 });\n     * requester.request({ deltaRotate: 10 });\n     * requester.request({ deltaRotate: 10 });\n     *\n     * requester.request({ rotate: 10 });\n     * requester.request({ rotate: 20 });\n     * requester.request({ rotate: 30 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManagerInterface<RotatableProps>) {\n        const datas = {};\n        let distRotate = 0;\n\n        const startRotation = moveable.getRotation();\n        return {\n            isControl: true,\n            requestStart(e: IObject<any>) {\n                return { datas };\n            },\n            request(e: IObject<any>) {\n                if (\"deltaRotate\" in e) {\n                    distRotate += e.deltaRotate;\n                } else if (\"rotate\" in e) {\n                    distRotate = e.rotate - startRotation;\n                }\n\n                return { datas, parentDist: distRotate };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n/**\n * Whether or not target can be rotated. (default: false)\n * @name Moveable.Rotatable#rotatable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.rotatable = true;\n */\n/**\n * You can specify the position of the rotation. (default: \"top\")\n * @name Moveable.Rotatable#rotationPosition\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   rotationPosition: \"top\",\n * });\n *\n * moveable.rotationPosition = \"bottom\"\n */\n\n/**\n * throttle of angle(degree) when rotate.\n * @name Moveable.Rotatable#throttleRotate\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleRotate = 1;\n */\n\n/**\n * When the rotate starts, the rotateStart event is called.\n * @memberof Moveable.Rotatable\n * @event rotateStart\n * @param {Moveable.Rotatable.OnRotateStart} - Parameters for the rotateStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotateStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n* When rotating, the rotate event is called.\n* @memberof Moveable.Rotatable\n* @event rotate\n* @param {Moveable.Rotatable.OnRotate} - Parameters for the rotate event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, { rotatable: true });\n* moveable.on(\"rotate\", ({ target, transform, dist }) => {\n*     target.style.transform = transform;\n* });\n*/\n/**\n * When the rotate finishes, the rotateEnd event is called.\n * @memberof Moveable.Rotatable\n * @event rotateEnd\n * @param {Moveable.Rotatable.OnRotateEnd} - Parameters for the rotateEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotateEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n * When the group rotate starts, the `rotateGroupStart` event is called.\n * @memberof Moveable.Rotatable\n * @event rotateGroupStart\n * @param {Moveable.Rotatable.OnRotateGroupStart} - Parameters for the `rotateGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     rotatable: true\n * });\n * moveable.on(\"rotateGroupStart\", ({ targets }) => {\n *     console.log(\"onRotateGroupStart\", targets);\n * });\n */\n\n/**\n* When the group rotate, the `rotateGroup` event is called.\n* @memberof Moveable.Rotatable\n* @event rotateGroup\n* @param {Moveable.Rotatable.OnRotateGroup} - Parameters for the `rotateGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     rotatable: true\n* });\n* moveable.on(\"rotateGroup\", ({ targets, events }) => {\n*     console.log(\"onRotateGroup\", targets);\n*     events.forEach(ev => {\n*         const target = ev.target;\n*         // ev.drag is a drag event that occurs when the group rotate.\n*         const left = ev.drag.beforeDist[0];\n*         const top = ev.drag.beforeDist[1];\n*         const deg = ev.beforeDist;\n*     });\n* });\n*/\n\n/**\n * When the group rotate finishes, the `rotateGroupEnd` event is called.\n * @memberof Moveable.Rotatable\n * @event rotateGroupEnd\n * @param {Moveable.Rotatable.OnRotateGroupEnd} - Parameters for the `rotateGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     rotatable: true\n * });\n * moveable.on(\"rotateGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onRotateGroupEnd\", targets, isDrag);\n * });\n */\n","import { prefix, getControlTransform, throttle, getLineStyle } from \"./utils\";\nimport { ResizableProps, ScalableProps, WarpableProps, Renderer, MoveableManagerInterface } from \"./types\";\nimport { DIRECTION_INDEXES, DIRECTION_ROTATIONS, DIRECTIONS } from \"./consts\";\nimport { IObject, getRad } from \"@daybrush/utils\";\n\nexport function renderControls(\n    moveable: MoveableManagerInterface<Partial<ResizableProps & ScalableProps & WarpableProps>>,\n    defaultDirections: string[],\n    React: Renderer,\n): any[] {\n    const {\n        renderPoses,\n        rotation,\n    } = moveable.state;\n    const {\n        renderDirections: directions = defaultDirections,\n        zoom,\n    } = moveable.props;\n    const {\n        direction,\n    } = moveable.state;\n\n    const directionMap: IObject<boolean> = {};\n    directions.forEach(dir => {\n        directionMap[dir] = true;\n    });\n    return directions.map(dir => {\n        const indexes = DIRECTION_INDEXES[dir];\n\n        if (!indexes || !directionMap[dir]) {\n            return null;\n        }\n        let directionRotation = throttle(rotation / Math.PI * 180, 15) + DIRECTION_ROTATIONS[dir];\n\n        if (direction < 1) {\n            directionRotation = 360 - directionRotation;\n        }\n        directionRotation %= 180;\n\n        return (\n            <div className={prefix(\"control\", \"direction\", dir)}\n                data-rotation={directionRotation} data-direction={dir} key={`direction-${dir}`}\n                style={getControlTransform(rotation, zoom!, ...indexes.map(index => renderPoses[index]))}></div>\n        );\n    });\n}\nexport function renderLine(\n    React: Renderer, direction: string,\n    pos1: number[], pos2: number[],\n    zoom: number,\n    key: number | string, ...classNames: string[]) {\n    const rad = getRad(pos1, pos2);\n    const rotation = direction ? (throttle(rad / Math.PI * 180, 15)) % 180 : -1;\n\n    return <div key={`line${key}`} className={prefix(\"line\", \"direction\", direction, ...classNames)}\n        data-rotation={rotation}\n        data-line-index={key}\n        data-direction={direction} style={getLineStyle(pos1, pos2, zoom, rad)}></div>;\n}\nexport function renderAllDirections(\n    moveable: MoveableManagerInterface<Partial<ResizableProps & ScalableProps & WarpableProps>>,\n    React: Renderer,\n) {\n    return renderControls(moveable, DIRECTIONS, React);\n}\nexport function renderDiagonalDirections(\n    moveable: MoveableManagerInterface<Partial<ResizableProps & ScalableProps & WarpableProps>>,\n    React: Renderer,\n): any[] {\n    return renderControls(moveable, [\"nw\", \"ne\", \"sw\", \"se\"], React);\n}\n","import {\n    throttle, getDirection, triggerEvent,\n    fillParams, getCSSSize,\n    getDistSize, fillEndParams, directionCondition,\n} from \"../utils\";\nimport {\n    setDragStart,\n    getDragDist,\n    getResizeDist,\n    getAbsolutePosition,\n} from \"../gesto/GestoUtils\";\nimport {\n    ResizableProps, OnResizeGroup, OnResizeGroupEnd,\n    Renderer, OnResizeGroupStart, DraggableProps, OnDrag, OnResizeStart, SnappableState,\n    OnResize, OnResizeEnd, MoveableManagerInterface, MoveableGroupInterface, SnappableProps,\n} from \"../types\";\nimport { renderAllDirections, renderDiagonalDirections } from \"../renderDirection\";\nimport {\n    fillChildEvents,\n    triggerChildAble,\n} from \"../groupUtils\";\nimport Draggable from \"./Draggable\";\nimport { calculate, createRotateMatrix, plus } from \"@scena/matrix\";\nimport CustomGesto, { setCustomDrag } from \"../gesto/CustomGesto\";\nimport { checkSnapSize } from \"./Snappable\";\nimport { calculateBoundSize, IObject, isString, getRad } from \"@daybrush/utils\";\nimport { TINY_NUM } from \"../consts\";\n\n/**\n * @namespace Resizable\n * @memberof Moveable\n * @description Resizable indicates whether the target's width and height can be increased or decreased.\n */\n\nexport default {\n    name: \"resizable\",\n    ableGroup: \"size\",\n    updateRect: true,\n    canPinch: true,\n    props: {\n        resizable: Boolean,\n        throttleResize: Number,\n        renderDirections: Array,\n        keepRatio: Boolean,\n    } as const,\n    events: {\n        onResizeStart: \"resizeStart\",\n        onResize: \"resize\",\n        onResizeEnd: \"resizeEnd\",\n\n        onResizeGroupStart: \"resizeGroupStart\",\n        onResizeGroup: \"resizeGroup\",\n        onResizeGroupEnd: \"resizeGroupEnd\",\n    } as const,\n    render(moveable: MoveableManagerInterface<Partial<ResizableProps>>, React: Renderer): any[] | undefined {\n        const { resizable, edge } = moveable.props;\n        if (resizable) {\n            if (edge) {\n                return renderDiagonalDirections(moveable, React);\n            }\n            return renderAllDirections(moveable, React);\n        }\n    },\n    dragControlCondition: directionCondition,\n    dragControlStart(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps, SnappableState>,\n        e: any,\n    ) {\n        const {\n            inputEvent,\n            isPinch,\n            parentDirection,\n            datas,\n            parentFlag,\n        } = e;\n\n        const direction = parentDirection || (isPinch ? [0, 0] : getDirection(inputEvent.target));\n\n        const { target, width, height } = moveable.state;\n\n        if (!direction || !target) {\n            return false;\n        }\n        !isPinch && setDragStart(moveable, e);\n\n        datas.datas = {};\n        datas.direction = direction;\n        datas.startOffsetWidth = width;\n        datas.startOffsetHeight = height;\n        datas.prevWidth = 0;\n        datas.prevHeight = 0;\n        [\n            datas.startWidth,\n            datas.startHeight,\n        ] = getCSSSize(target);\n        const padding = [Math.max(0, width - datas.startWidth), Math.max(0, height - datas.startHeight)];\n        datas.minSize = padding;\n        datas.maxSize = [Infinity, Infinity];\n\n        if (!parentFlag) {\n            const style = window.getComputedStyle(target);\n\n            datas.minSize = plus([\n                parseFloat(style.minWidth!) || 0,\n                parseFloat(style.minHeight!) || 0,\n            ], padding);\n            datas.maxSize = plus([\n                parseFloat(style.maxWidth!) || Infinity,\n                parseFloat(style.maxHeight!) || Infinity,\n            ], padding);\n        }\n        const transformOrigin = moveable.props.transformOrigin || \"% %\";\n\n        datas.transformOrigin = transformOrigin && isString(transformOrigin)\n            ? transformOrigin.split(\" \")\n            : transformOrigin;\n\n        datas.isWidth = (!direction[0] && !direction[1]) || direction[0] || !direction[1];\n\n        function setRatio(ratio: number) {\n            datas.ratio = ratio && isFinite(ratio) ? ratio : 0;\n        }\n\n\n        function setFixedDirection(fixedDirection: number[]) {\n            datas.fixedDirection = fixedDirection;\n            datas.fixedPosition = getAbsolutePosition(moveable, fixedDirection);\n        }\n\n        setRatio(width / height);\n        setFixedDirection([-direction[0], -direction[1]]);\n\n        const params = fillParams<OnResizeStart>(moveable, e, {\n            direction,\n            set: ([startWidth, startHeight]: number[]) => {\n                datas.startWidth = startWidth;\n                datas.startHeight = startHeight;\n            },\n            setMin: (minSize: number[]) => {\n                datas.minSize = minSize;\n            },\n            setMax: (maxSize: number[]) => {\n                datas.maxSize = maxSize;\n            },\n            setRatio,\n            setFixedDirection,\n            setOrigin: (origin: Array<string | number>) => {\n                datas.transformOrigin = origin;\n            },\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ),\n        });\n        const result = triggerEvent<ResizableProps>(moveable, \"onResizeStart\", params);\n        if (result !== false) {\n            datas.isResize = true;\n            moveable.state.snapRenderInfo = {\n                request: e.isRequest,\n                direction,\n            };\n        }\n        return datas.isResize ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps & SnappableProps>,\n        e: any,\n    ) {\n        const {\n            datas,\n            distX, distY,\n            parentFlag, isPinch,\n            parentDistance, parentScale,\n            parentKeepRatio,\n            dragClient,\n            parentDist,\n            isRequest,\n        } = e;\n\n        const {\n            isResize,\n            transformOrigin,\n            fixedDirection,\n            startWidth,\n            startHeight,\n            prevWidth,\n            prevHeight,\n            minSize,\n            maxSize,\n            ratio,\n            isWidth,\n        } = datas;\n\n        if (!isResize) {\n            return;\n        }\n        const {\n            throttleResize = 0,\n            parentMoveable,\n            snapThreshold = 5,\n        } = moveable.props;\n        let direction = datas.direction;\n        let sizeDirection = direction;\n        let distWidth: number = 0;\n        let distHeight: number = 0;\n\n        if (!direction[0] && !direction[1]) {\n            sizeDirection = [1, 1];\n        }\n        const keepRatio = ratio && (moveable.props.keepRatio || parentKeepRatio);\n\n\n        let fixedPosition = dragClient;\n        let {\n            startOffsetWidth,\n            startOffsetHeight,\n        } = datas;\n\n        if (!dragClient) {\n            if (!parentFlag && isPinch) {\n                fixedPosition = getAbsolutePosition(moveable, [0, 0]);\n            } else {\n                fixedPosition = datas.fixedPosition;\n            }\n        }\n\n        if (parentDist) {\n            distWidth = parentDist[0];\n            distHeight = parentDist[1];\n        } else if (parentScale) {\n            distWidth = (parentScale[0] - 1) * startOffsetWidth;\n            distHeight = (parentScale[1] - 1) * startOffsetHeight;\n        } else if (isPinch) {\n            if (parentDistance) {\n                distWidth = parentDistance;\n                distHeight = parentDistance * startOffsetHeight / startOffsetWidth;\n            }\n        } else {\n            const dist = getDragDist({ datas, distX, distY });\n\n            distWidth = sizeDirection[0] * dist[0];\n            distHeight = sizeDirection[1] * dist[1];\n\n            if (keepRatio && startOffsetWidth && startOffsetHeight) {\n                const rad = getRad([0, 0], dist);\n                const standardRad = getRad([0, 0], sizeDirection);\n                const ratioRad = getRad([0, 0], [startOffsetWidth, startOffsetHeight]);\n                const size = getDistSize([distWidth, distHeight]);\n                const signSize = Math.cos(rad - standardRad) * size;\n\n                if (!sizeDirection[0]) {\n                    // top, bottom\n                    distHeight = signSize;\n                    distWidth = distHeight / ratio;\n                } else if (!sizeDirection[1]) {\n                    // left, right\n                    distWidth = signSize;\n                    distHeight = distWidth * ratio;\n                } else {\n                    // two-way\n                    distWidth = Math.cos(ratioRad) * signSize;\n                    distHeight = Math.sin(ratioRad) * signSize;\n                }\n            } else if (!keepRatio) {\n                const nextDirection = [...direction];\n\n                if (!startOffsetWidth) {\n                    if (dist[0] < 0) {\n                        nextDirection[0] = -1;\n                    } else if (dist[0] > 0) {\n                        nextDirection[0] = 1;\n                    }\n                }\n                if (!startOffsetHeight) {\n                    if (dist[1] < 0) {\n                        nextDirection[1] = -1;\n                    } else if (dist[1] > 0) {\n                        nextDirection[1] = 1;\n                    }\n                }\n                direction = nextDirection;\n                sizeDirection = nextDirection;\n                distWidth = sizeDirection[0] * dist[0];\n                distHeight = sizeDirection[1] * dist[1];\n            }\n        }\n        let nextWidth = sizeDirection[0] || keepRatio\n            ? Math.max(startOffsetWidth + distWidth, TINY_NUM) : startOffsetWidth;\n        let nextHeight = sizeDirection[1] || keepRatio\n            ? Math.max(startOffsetHeight + distHeight, TINY_NUM) : startOffsetHeight;\n\n        if (keepRatio && startOffsetWidth && startOffsetHeight) {\n            // startOffsetWidth : startOffsetHeight = nextWidth : nextHeight\n            if (isWidth) {\n                nextHeight = nextWidth / ratio;\n            } else {\n                nextWidth = nextHeight * ratio;\n            }\n        }\n        let snapDist = [0, 0];\n\n        if (!isPinch) {\n            snapDist = checkSnapSize(\n                moveable, nextWidth,\n                nextHeight, direction,\n                fixedPosition,\n                isRequest,\n                datas,\n            );\n        }\n        if (parentDist) {\n            !parentDist[0] && (snapDist[0] = 0);\n            !parentDist[1] && (snapDist[1] = 0);\n        }\n        if (keepRatio) {\n            if (sizeDirection[0] && sizeDirection[1] && snapDist[0] && snapDist[1]) {\n                if (Math.abs(snapDist[0]) > Math.abs(snapDist[1])) {\n                    snapDist[1] = 0;\n                } else {\n                    snapDist[0] = 0;\n                }\n            }\n            const isNoSnap = !snapDist[0] && !snapDist[1];\n\n            if (isNoSnap) {\n                if (isWidth) {\n                    nextWidth = throttle(nextWidth, throttleResize!);\n                } else {\n                    nextHeight = throttle(nextHeight, throttleResize!);\n                }\n            }\n            if (\n                (sizeDirection[0] && !sizeDirection[1])\n                || (snapDist[0] && !snapDist[1])\n                || (isNoSnap && isWidth)\n            ) {\n                nextWidth += snapDist[0];\n                nextHeight = nextWidth / ratio;\n            } else if (\n                (!sizeDirection[0] && sizeDirection[1])\n                || (!snapDist[0] && snapDist[1])\n                || (isNoSnap && !isWidth)\n            ) {\n                nextHeight += snapDist[1];\n                nextWidth = nextHeight * ratio;\n            }\n        } else {\n            if (startOffsetWidth + distWidth < -snapThreshold)  {\n                snapDist[0] = 0;\n            }\n            if (startOffsetWidth + distHeight < -snapThreshold)  {\n                snapDist[1] = 0;\n            }\n            nextWidth += snapDist[0];\n            nextHeight += snapDist[1];\n            if (!snapDist[0]) {\n                nextWidth = throttle(nextWidth, throttleResize!);\n            }\n            if (!snapDist[1]) {\n                nextHeight = throttle(nextHeight, throttleResize!);\n            }\n        }\n        [nextWidth, nextHeight] = calculateBoundSize(\n            [nextWidth, nextHeight],\n            minSize,\n            maxSize,\n            keepRatio,\n        );\n        nextWidth = Math.round(nextWidth);\n        nextHeight = Math.round(nextHeight);\n        distWidth = nextWidth - startOffsetWidth;\n        distHeight = nextHeight - startOffsetHeight;\n\n        const delta = [distWidth - prevWidth, distHeight - prevHeight];\n\n        datas.prevWidth = distWidth;\n        datas.prevHeight = distHeight;\n\n        const inverseDelta = getResizeDist(\n                moveable,\n                nextWidth, nextHeight,\n                fixedDirection, fixedPosition,\n                transformOrigin,\n            );\n\n        if (!parentMoveable && delta.every(num => !num) && inverseDelta.every(num => !num)) {\n            return;\n        }\n        const params = fillParams<OnResize>(moveable, e, {\n            width: startWidth + distWidth,\n            height: startHeight + distHeight,\n            offsetWidth: nextWidth,\n            offsetHeight: nextHeight,\n            direction,\n            dist: [distWidth, distHeight],\n            delta,\n            isPinch: !!isPinch,\n            drag: Draggable.drag(\n                moveable,\n                setCustomDrag(e, moveable.state, inverseDelta, !!isPinch, false),\n            ) as OnDrag,\n        });\n        triggerEvent<ResizableProps>(moveable, \"onResize\", params);\n        return params;\n    },\n    dragControlAfter(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps>,\n        e: any,\n    ) {\n        const datas = e.datas;\n        const {\n            isResize,\n            startOffsetWidth,\n            startOffsetHeight,\n            prevWidth,\n            prevHeight,\n        } = datas;\n\n        if (!isResize) {\n            return;\n        }\n        const {\n            width,\n            height,\n        } = moveable.state;\n        const errorWidth = width - (startOffsetWidth + prevWidth);\n        const errorHeight = height - (startOffsetHeight + prevHeight);\n        const isErrorWidth = Math.abs(errorWidth) > 3;\n        const isErrorHeight = Math.abs(errorHeight) > 3;\n\n        if (isErrorWidth) {\n            datas.startWidth += errorWidth;\n            datas.startOffsetWidth += errorWidth;\n            datas.prevWidth += errorWidth;\n        }\n        if (isErrorHeight) {\n            datas.startHeight += errorHeight;\n            datas.startOffsetHeight += errorHeight;\n            datas.prevHeight += errorHeight;\n        }\n        if (isErrorWidth || isErrorHeight) {\n            this.dragControl(moveable, e);\n            return true;\n        }\n    },\n    dragControlEnd(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps>,\n        e: any,\n    ) {\n        const { datas, isDrag } = e;\n        if (!datas.isResize) {\n            return false;\n        }\n        datas.isResize = false;\n\n        const params = fillEndParams<OnResizeEnd>(moveable, e, {});\n        triggerEvent<ResizableProps>(moveable, \"onResizeEnd\", params);\n        return isDrag;\n    },\n    dragGroupControlCondition: directionCondition,\n    dragGroupControlStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        const originalEvents = fillChildEvents(moveable, \"resizable\", e);\n        function setDist(child: MoveableManagerInterface, ev: any) {\n            const fixedDirection = datas.fixedDirection;\n            const fixedPosition = datas.fixedPosition;\n            const pos = getAbsolutePosition(child, fixedDirection);\n            const [originalX, originalY] = calculate(\n                createRotateMatrix(-moveable.rotation / 180 * Math.PI, 3),\n                [pos[0] - fixedPosition[0], pos[1] - fixedPosition[1], 1],\n                3,\n            );\n            ev.datas.originalX = originalX;\n            ev.datas.originalY = originalY;\n\n            return ev;\n        }\n        const events = triggerChildAble(\n            moveable,\n            this,\n            \"dragControlStart\",\n            e,\n            (child, ev) => {\n                return setDist(child, ev);\n            },\n        );\n\n        const nextParams: OnResizeGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n            setFixedDirection(fixedDirection: number[]) {\n                params.setFixedDirection(fixedDirection);\n                events.forEach((ev, i) => {\n                    ev.setFixedDirection(fixedDirection);\n                    setDist(moveable.moveables[i], originalEvents[i]);\n                });\n            }\n        };\n        const result = triggerEvent<ResizableProps>(moveable, \"onResizeGroupStart\", nextParams);\n\n        datas.isResize = result !== false;\n        return datas.isResize ? params : false;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        if (!datas.isResize) {\n            return;\n        }\n        const params = this.dragControl(moveable, e);\n\n        if (!params) {\n            return;\n        }\n        const {\n            offsetWidth, offsetHeight, dist,\n        } = params;\n\n        const keepRatio = moveable.props.keepRatio;\n\n        const parentScale = [\n            offsetWidth / (offsetWidth - dist[0]),\n            offsetHeight / (offsetHeight - dist[1]),\n        ];\n        const fixedPosition = datas.fixedPosition;\n\n        const events = triggerChildAble(\n            moveable,\n            this,\n            \"dragControl\",\n            e,\n            (_, ev) => {\n                const [clientX, clientY] = calculate(\n                    createRotateMatrix(moveable.rotation / 180 * Math.PI, 3),\n                    [\n                        ev.datas.originalX * parentScale[0],\n                        ev.datas.originalY * parentScale[1],\n                        1,\n                    ],\n                    3,\n                );\n\n                return {\n                    ...ev,\n                    parentDist: null,\n                    parentScale,\n                    dragClient: plus(fixedPosition, [clientX, clientY]),\n                    parentKeepRatio: keepRatio,\n                };\n            },\n        );\n        const nextParams: OnResizeGroup = {\n            targets: moveable.props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent<ResizableProps>(moveable, \"onResizeGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isResize) {\n            return;\n        }\n\n        this.dragControlEnd(moveable, e);\n        triggerChildAble(moveable, this, \"dragControlEnd\", e);\n\n        const nextParams: OnResizeGroupEnd = fillEndParams<OnResizeGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n        });\n\n        triggerEvent<ResizableProps>(moveable, \"onResizeGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Resizable#request\n     * @param {object} [e] - the Resizable's request parameter\n     * @param {number} [e.direction=[1, 1]] - Direction to resize\n     * @param {number} [e.deltaWidth] - delta number of width\n     * @param {number} [e.deltaHeight] - delta number of height\n     * @param {number} [e.offsetWidth] - offset number of width\n     * @param {number} [e.offsetHeight] - offset number of height\n     * @param {number} [e.isInstant] - Whether to execute the request instantly\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * // Use Relative Value\n     * moveable.request(\"resizable\", { deltaWidth: 10, deltaHeight: 10 }, true);\n     *\n     * // Use Absolute Value\n     * moveable.request(\"resizable\", { offsetWidth: 100, offsetHeight: 100 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"resizable\");\n     *\n     * // request\n     * // Use Relative Value\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     *\n     * // Use Absolute Value\n     * moveable.request(\"resizable\", { offsetWidth: 100, offsetHeight: 100 });\n     * moveable.request(\"resizable\", { offsetWidth: 110, offsetHeight: 100 });\n     * moveable.request(\"resizable\", { offsetWidth: 120, offsetHeight: 100 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManagerInterface<any>) {\n        const datas = {};\n        let distWidth = 0;\n        let distHeight = 0;\n        const rect = moveable.getRect();\n\n        return {\n            isControl: true,\n            requestStart(e: IObject<any>) {\n                return { datas, parentDirection: e.direction || [1, 1] };\n            },\n            request(e: IObject<any>) {\n                if (\"offsetWidth\" in e) {\n                    distWidth = e.offsetWidth - rect.offsetWidth;\n                } else if (\"deltaWidth\" in e) {\n                    distWidth += e.deltaWidth;\n                }\n                if (\"offsetHeight\" in e) {\n                    distHeight = e.offsetHeight - rect.offsetHeight;\n                } else if (\"deltaHeight\" in e) {\n                    distHeight += e.deltaHeight;\n                }\n\n                return { datas, parentDist: [distWidth, distHeight] };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n\n/**\n * Whether or not target can be resized. (default: false)\n * @name Moveable.Resizable#resizable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     resizable: false,\n * });\n *\n * moveable.resizable = true;\n */\n\n/**\n * throttle of width, height when resize.\n * @name Moveable.Resizable#throttleResize\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   throttleResize: 0,\n * });\n *\n * moveable.throttleResize = 1;\n */\n/**\n * When resize or scale, keeps a ratio of the width, height. (default: false)\n * @name Moveable.Resizable#keepRatio\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n * });\n *\n * moveable.keepRatio = true;\n */\n/**\n * Set directions to show the control box. (default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"])\n * @name Moveable.Resizable#renderDirections\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n * });\n *\n * moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n */\n\n/**\n * When the resize starts, the resizeStart event is called.\n * @memberof Moveable.Resizable\n * @event resizeStart\n * @param {Moveable.Resizable.OnResizeStart} - Parameters for the resizeStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resizeStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When resizing, the resize event is called.\n * @memberof Moveable.Resizable\n * @event resize\n * @param {Moveable.Resizable.OnResize} - Parameters for the resize event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resize\", ({ target, width, height }) => {\n *     target.style.width = `${e.width}px`;\n *     target.style.height = `${e.height}px`;\n * });\n */\n/**\n * When the resize finishes, the resizeEnd event is called.\n * @memberof Moveable.Resizable\n * @event resizeEnd\n * @param {Moveable.Resizable.OnResizeEnd} - Parameters for the resizeEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resizeEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n /**\n * When the group resize starts, the `resizeGroupStart` event is called.\n * @memberof Moveable.Resizable\n * @event resizeGroupStart\n * @param {Moveable.Resizable.OnResizeGroupStart} - Parameters for the `resizeGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     resizable: true\n * });\n * moveable.on(\"resizeGroupStart\", ({ targets }) => {\n *     console.log(\"onResizeGroupStart\", targets);\n * });\n */\n\n /**\n * When the group resize, the `resizeGroup` event is called.\n * @memberof Moveable.Resizable\n * @event resizeGroup\n * @param {Moveable.Resizable.onResizeGroup} - Parameters for the `resizeGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     resizable: true\n * });\n * moveable.on(\"resizeGroup\", ({ targets, events }) => {\n *     console.log(\"onResizeGroup\", targets);\n *     events.forEach(ev => {\n *         const offset = [\n *             direction[0] < 0 ? -ev.delta[0] : 0,\n *             direction[1] < 0 ? -ev.delta[1] : 0,\n *         ];\n *         // ev.drag is a drag event that occurs when the group resize.\n *         const left = offset[0] + ev.drag.beforeDist[0];\n *         const top = offset[1] + ev.drag.beforeDist[1];\n *         const width = ev.width;\n *         const top = ev.top;\n *     });\n * });\n */\n\n/**\n * When the group resize finishes, the `resizeGroupEnd` event is called.\n * @memberof Moveable.Resizable\n * @event resizeGroupEnd\n * @param {Moveable.Resizable.OnResizeGroupEnd} - Parameters for the `resizeGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     resizable: true\n * });\n * moveable.on(\"resizeGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onResizeGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    throttle, getDirection, triggerEvent, multiply2,\n    fillParams, getDistSize, fillEndParams, directionCondition,\n} from \"../utils\";\nimport { MIN_SCALE } from \"../consts\";\nimport {\n    setDragStart, getDragDist,\n    resolveTransformEvent,\n    convertTransformFormat,\n    getScaleDist,\n    fillTransformStartEvent,\n    fillTransformEvent,\n    setDefaultTransformIndex,\n    getAbsolutePosition,\n} from \"../gesto/GestoUtils\";\nimport { renderAllDirections, renderDiagonalDirections } from \"../renderDirection\";\nimport {\n    ScalableProps, ResizableProps, OnScaleGroup, OnScaleGroupEnd,\n    Renderer, OnScaleGroupStart, DraggableProps, OnDragStart,\n    SnappableState, GroupableProps, OnScaleStart,\n    OnScale, OnScaleEnd, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\nimport {\n    fillChildEvents,\n    triggerChildAble,\n} from \"../groupUtils\";\nimport Draggable from \"./Draggable\";\nimport { calculate, createRotateMatrix, plus, minus } from \"@scena/matrix\";\nimport CustomGesto from \"../gesto/CustomGesto\";\nimport { checkSnapScale } from \"./Snappable\";\nimport { isArray, IObject, getRad } from \"@daybrush/utils\";\n\n/**\n * @namespace Scalable\n * @memberof Moveable\n * @description Scalable indicates whether the target's x and y can be scale of transform.\n */\nexport default {\n    name: \"scalable\",\n    ableGroup: \"size\",\n    canPinch: true,\n    props: {\n        scalable: Boolean,\n        throttleScale: Number,\n        renderDirections: String,\n        keepRatio: Boolean,\n    } as const,\n    events: {\n        onScaleStart: \"scaleStart\",\n        onScale: \"scale\",\n        onScaleEnd: \"scaleEnd\",\n        onScaleGroupStart: \"scaleGroupStart\",\n        onScaleGroup: \"scaleGroup\",\n        onScaleGroupEnd: \"scaleGroupEnd\",\n    } as const,\n    render(\n        moveable: MoveableManagerInterface<Partial<ResizableProps & ScalableProps>>,\n        React: Renderer): any[] | undefined {\n        const { resizable, scalable, edge } = moveable.props;\n        if (!resizable && scalable) {\n            if (edge) {\n                return renderDiagonalDirections(moveable, React);\n            }\n            return renderAllDirections(moveable, React);\n        }\n    },\n    dragControlCondition: directionCondition,\n    dragControlStart(\n        moveable: MoveableManagerInterface<ScalableProps & DraggableProps, SnappableState>,\n        e: any) {\n        const { datas, isPinch, inputEvent, parentDirection } = e;\n        const direction = parentDirection || (isPinch ? [0, 0] : getDirection(inputEvent.target));\n        const {\n            width,\n            height,\n            targetTransform,\n            target,\n        } = moveable.state;\n\n        if (!direction || !target) {\n            return false;\n        }\n        if (!isPinch) {\n            setDragStart(moveable, e);\n        }\n        setDefaultTransformIndex(e);\n\n        datas.datas = {};\n        datas.transform = targetTransform;\n        datas.prevDist = [1, 1];\n        datas.direction = direction;\n        datas.width = width;\n        datas.height = height;\n        datas.startValue = [1, 1];\n\n        const isWidth = (!direction[0] && !direction[1]) || direction[0] || !direction[1];\n\n        datas.isWidth = isWidth;\n\n\n        function setFixedDirection(fixedDirection: number[]) {\n            datas.fixedDirection = fixedDirection;\n            datas.fixedPosition = getAbsolutePosition(moveable, fixedDirection);\n        }\n\n        setFixedDirection([-direction[0], -direction[1]]);\n\n        const params = fillParams<OnScaleStart>(moveable, e, {\n            direction,\n            set: (scale: number[]) => {\n                datas.startValue = scale;\n            },\n            setFixedDirection,\n            ...fillTransformStartEvent(e),\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ) as OnDragStart,\n        });\n        const result = triggerEvent<ScalableProps, \"onScaleStart\">(moveable, \"onScaleStart\", params);\n\n        if (result !== false) {\n            datas.isScale = true;\n            moveable.state.snapRenderInfo = {\n                request: e.isRequest,\n                direction,\n            };\n\n        }\n        return datas.isScale ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<ScalableProps & DraggableProps & GroupableProps, SnappableState>,\n        e: any) {\n        resolveTransformEvent(e, \"scale\");\n        const {\n            datas, distX, distY,\n            parentScale,\n            parentDistance,\n            parentKeepRatio,\n            parentFlag, isPinch,\n            dragClient,\n            parentDist,\n            isRequest,\n        } = e;\n        const {\n            prevDist,\n            direction,\n            width,\n            height,\n            isScale,\n            startValue,\n            isWidth,\n            fixedDirection,\n        } = datas;\n\n        if (!isScale) {\n            return false;\n        }\n\n        const {\n            throttleScale,\n            parentMoveable,\n        } = moveable.props;\n        let sizeDirection = direction;\n\n        if (!direction[0] && !direction[1]) {\n            sizeDirection = [1, 1];\n        }\n        const keepRatio = moveable.props.keepRatio || parentKeepRatio;\n        const state = moveable.state;\n        const startWidth = width * startValue[0];\n        const startHeight = height * startValue[1];\n        const ratio = startWidth / startHeight;\n\n        let scaleX: number = 1;\n        let scaleY: number = 1;\n        let fixedPosition = dragClient;\n\n        if (!dragClient) {\n            if (!parentFlag && isPinch) {\n                fixedPosition = getAbsolutePosition(moveable, [0, 0]);\n            } else {\n                fixedPosition = datas.fixedPosition;\n            }\n        }\n\n        if (parentDist) {\n            scaleX = (width + parentDist[0]) / width;\n            scaleY = (height + parentDist[1]) / height;\n        } else if (parentScale) {\n            scaleX = parentScale[0];\n            scaleY = parentScale[1];\n        } else if (isPinch) {\n            if (parentDistance) {\n                scaleX = (width + parentDistance) / width;\n                scaleY = (height + parentDistance * height / width) / height;\n            }\n        } else {\n            const dragDist = getDragDist({ datas, distX, distY });\n\n            let distWidth = sizeDirection[0] * dragDist[0];\n            let distHeight = sizeDirection[1] * dragDist[1];\n\n            if (keepRatio && width && height) {\n                const rad = getRad([0, 0], dragDist);\n                const standardRad = getRad([0, 0], sizeDirection);\n                const ratioRad = getRad([0, 0], [startWidth, startHeight]);\n                const size = getDistSize([distWidth, distHeight]);\n                const signSize = Math.cos(rad - standardRad) * size;\n\n                if (!sizeDirection[0]) {\n                    // top, bottom\n                    distHeight = signSize;\n                    distWidth = distHeight * ratio;\n                } else if (!sizeDirection[1]) {\n                    // left, right\n                    distWidth = signSize;\n                    distHeight = distWidth / ratio;\n                } else {\n                    // two-way\n                    distWidth = Math.cos(ratioRad) * signSize;\n                    distHeight = Math.sin(ratioRad) * signSize;\n                }\n            }\n            scaleX = (width + distWidth) / width;\n            scaleY = (height + distHeight) / height;\n        }\n\n        scaleX = sizeDirection[0] || keepRatio ? scaleX * startValue[0] : startValue[0];\n        scaleY = sizeDirection[1] || keepRatio ? scaleY * startValue[1] : startValue[1];\n\n        if (scaleX === 0) {\n            scaleX = (prevDist[0] > 0 ? 1 : -1) * MIN_SCALE;\n        }\n        if (scaleY === 0) {\n            scaleY = (prevDist[1] > 0 ? 1 : -1) * MIN_SCALE;\n        }\n\n        const dist = [scaleX / startValue[0], scaleY / startValue[1]];\n        let scale = [scaleX, scaleY];\n\n        if (!isPinch && moveable.props.groupable) {\n            const snapRenderInfo = state.snapRenderInfo || {};\n            const stateDirection = snapRenderInfo.direction;\n\n            if (isArray(stateDirection) && (stateDirection[0] || stateDirection[1])) {\n                state.snapRenderInfo = { direction, request: e.isRequest, };\n            }\n        }\n        let snapDist = [0, 0];\n\n        if (!isPinch) {\n            snapDist = checkSnapScale(\n                moveable,\n                dist,\n                direction,\n                isRequest,\n                datas,\n            );\n        }\n\n\n        if (keepRatio) {\n            if (sizeDirection[0] && sizeDirection[1] && snapDist[0] && snapDist[1]) {\n                if (Math.abs(snapDist[0]) > Math.abs(snapDist[1])) {\n                    snapDist[1] = 0;\n                } else {\n                    snapDist[0] = 0;\n                }\n            }\n\n            const isNoSnap = !snapDist[0] && !snapDist[1];\n\n            if (isNoSnap) {\n                if (isWidth) {\n                    dist[0] = throttle(dist[0] * startValue[0], throttleScale!) / startValue[0];\n                } else {\n                    dist[1] = throttle(dist[1] * startValue[1], throttleScale!) / startValue[1];\n                }\n            }\n\n            if (\n                (sizeDirection[0] && !sizeDirection[1])\n                || (snapDist[0] && !snapDist[1])\n                || (isNoSnap && isWidth)\n            ) {\n                dist[0] += snapDist[0];\n                const snapHeight = width * dist[0] * startValue[0] / ratio;\n\n                dist[1] = snapHeight / height / startValue[1];\n            } else if (\n                (!sizeDirection[0] && sizeDirection[1])\n                || (!snapDist[0] && snapDist[1])\n                || (isNoSnap && !isWidth)\n            ) {\n                dist[1] += snapDist[1];\n                const snapWidth = height * dist[1] * startValue[1] * ratio;\n\n                dist[0] = snapWidth / width / startValue[0];\n            }\n        } else {\n            dist[0] += snapDist[0];\n            dist[1] += snapDist[1];\n            if (!snapDist[0]) {\n                dist[0] = throttle(dist[0] * startValue[0], throttleScale!) / startValue[0];\n            }\n            if (!snapDist[1]) {\n                dist[1] = throttle(dist[1] * startValue[1], throttleScale!) / startValue[1];\n            }\n        }\n        if (dist[0] === 0) {\n            dist[0] = (prevDist[0] > 0 ? 1 : -1) * MIN_SCALE;\n        }\n        if (dist[1] === 0) {\n            dist[1] = (prevDist[1] > 0 ? 1 : -1) * MIN_SCALE;\n        }\n        const delta = [dist[0] / prevDist[0], dist[1] / prevDist[1]];\n        scale = multiply2(dist, startValue);\n\n        const inverseDist = getScaleDist(moveable, dist, fixedDirection, fixedPosition, datas);\n\n        const inverseDelta = minus(inverseDist, datas.prevInverseDist || [0, 0]);\n\n        datas.prevDist = dist;\n        datas.prevInverseDist = inverseDist;\n        if (\n            scaleX === prevDist[0] && scaleY === prevDist[1]\n            && inverseDelta.every(num => !num)\n            && !parentMoveable\n        ) {\n            return false;\n        }\n\n        const nextTransform = convertTransformFormat(\n            datas, `scale(${scale.join(\", \")})`, `scale(${dist.join(\", \")})`);\n        const params = fillParams<OnScale>(moveable, e, {\n            offsetWidth: width,\n            offsetHeight: height,\n            direction,\n\n            // beforeScale,\n            // beforeDist,\n            // beforeDelta,\n\n            scale,\n            dist,\n            delta,\n\n            isPinch: !!isPinch,\n            ...fillTransformEvent(\n                moveable,\n                nextTransform,\n                inverseDelta,\n                isPinch,\n                e,\n            ),\n        });\n        triggerEvent(moveable, \"onScale\", params);\n\n        return params;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ScalableProps>, e: any) {\n        const { datas, isDrag } = e;\n        if (!datas.isScale) {\n            return false;\n        }\n\n        datas.isScale = false;\n\n        triggerEvent(moveable, \"onScaleEnd\", fillEndParams<OnScaleEnd>(moveable, e, {}));\n        return isDrag;\n    },\n    dragGroupControlCondition: directionCondition,\n    dragGroupControlStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        const originalEvents = fillChildEvents(moveable, \"resizable\", e);\n\n        function setDist(child: MoveableManagerInterface, ev: any) {\n            const fixedDirection = datas.fixedDirection;\n            const fixedPosition = datas.fixedPosition;\n            const pos = getAbsolutePosition(child, fixedDirection);\n            const [originalX, originalY] = calculate(\n                createRotateMatrix(-moveable.rotation / 180 * Math.PI, 3),\n                [pos[0] - fixedPosition[0], pos[1] - fixedPosition[1], 1],\n                3,\n            );\n            ev.datas.originalX = originalX;\n            ev.datas.originalY = originalY;\n\n            return ev;\n        }\n\n        datas.moveableScale = moveable.scale;\n\n        const events = triggerChildAble(\n            moveable,\n            this,\n            \"dragControlStart\",\n            e,\n            (child, ev) => {\n                return setDist(child, ev);\n            },\n        );\n\n        const nextParams: OnScaleGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n            setFixedDirection(fixedDirection: number[]) {\n                params.setFixedDirection(fixedDirection);\n                events.forEach((ev, i) => {\n                    ev.setFixedDirection(fixedDirection);\n                    setDist(moveable.moveables[i], originalEvents[i]);\n                });\n            }\n        };\n        const result = triggerEvent(moveable, \"onScaleGroupStart\", nextParams);\n\n        datas.isScale = result !== false;\n        return datas.isScale ? nextParams : false;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        if (!datas.isScale) {\n            return;\n        }\n        const params = this.dragControl(moveable, e);\n        if (!params) {\n            return;\n        }\n\n        const moveableScale = datas.moveableScale;\n        moveable.scale = [\n            params.scale[0] * moveableScale[0],\n            params.scale[1] * moveableScale[1],\n        ];\n        const keepRatio = moveable.props.keepRatio;\n        const { dist, scale } = params;\n\n        const fixedPosition = datas.fixedPosition;\n\n        const events = triggerChildAble(\n            moveable,\n            this,\n            \"dragControl\",\n            e,\n            (_, ev) => {\n                const [clientX, clientY] = calculate(\n                    createRotateMatrix(moveable.rotation / 180 * Math.PI, 3),\n                    [\n                        ev.datas.originalX * dist[0],\n                        ev.datas.originalY * dist[1],\n                        1,\n                    ],\n                    3,\n                );\n\n                return {\n                    ...ev,\n                    parentDist: null,\n                    parentScale: scale,\n                    parentKeepRatio: keepRatio,\n                    dragClient: plus(fixedPosition, [clientX, clientY]),\n                };\n            },\n        );\n        const nextParams: OnScaleGroup = {\n            targets: moveable.props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onScaleGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isScale) {\n            return;\n        }\n        this.dragControlEnd(moveable, e);\n        triggerChildAble(moveable, this, \"dragControlEnd\", e);\n\n        const nextParams = fillEndParams<OnScaleGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n        });\n\n        triggerEvent(moveable, \"onScaleGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Scalable#request\n     * @param {object} [e] - the Resizable's request parameter\n     * @param {number} [e.direction=[1, 1]] - Direction to scale\n     * @param {number} [e.deltaWidth] - delta number of width\n     * @param {number} [e.deltaHeight] - delta number of height\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"scalable\", { deltaWidth: 10, deltaHeight: 10 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"scalable\");\n     *\n     * // request\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request() {\n        const datas = {};\n        let distWidth = 0;\n        let distHeight = 0;\n\n        return {\n            isControl: true,\n            requestStart(e: IObject<any>) {\n                return { datas, parentDirection: e.direction || [1, 1] };\n            },\n            request(e: IObject<any>) {\n                distWidth += e.deltaWidth;\n                distHeight += e.deltaHeight;\n\n                return { datas, parentDist: [distWidth, distHeight] };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n\n/**\n * Whether or not target can scaled. (default: false)\n * @name Moveable.Scalable#scalable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.scalable = true;\n */\n\n/**\n * throttle of scaleX, scaleY when scale.\n * @name Moveable.Scalable#throttleScale\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleScale = 0.1;\n */\n/**\n * Set directions to show the control box. (default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"])\n * @name Moveable.Scalable#renderDirections\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     scalable: true,\n *   renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n * });\n *\n * moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n */\n/**\n * When resize or scale, keeps a ratio of the width, height. (default: false)\n * @name Moveable.Scalable#keepRatio\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     scalable: true,\n * });\n *\n * moveable.keepRatio = true;\n */\n/**\n * When the scale starts, the scaleStart event is called.\n * @memberof Moveable.Scalable\n * @event scaleStart\n * @param {Moveable.Scalable.OnScaleStart} - Parameters for the scaleStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scaleStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When scaling, the scale event is called.\n * @memberof Moveable.Scalable\n * @event scale\n * @param {Moveable.Scalable.OnScale} - Parameters for the scale event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scale\", ({ target, transform, dist }) => {\n *     target.style.transform = transform;\n * });\n */\n/**\n * When the scale finishes, the scaleEnd event is called.\n * @memberof Moveable.Scalable\n * @event scaleEnd\n * @param {Moveable.Scalable.OnScaleEnd} - Parameters for the scaleEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scaleEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group scale starts, the `scaleGroupStart` event is called.\n* @memberof Moveable.Scalable\n* @event scaleGroupStart\n* @param {Moveable.Scalable.OnScaleGroupStart} - Parameters for the `scaleGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     scalable: true\n* });\n* moveable.on(\"scaleGroupStart\", ({ targets }) => {\n*     console.log(\"onScaleGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group scale, the `scaleGroup` event is called.\n* @memberof Moveable.Scalable\n* @event scaleGroup\n* @param {Moveable.Scalable.OnScaleGroup} - Parameters for the `scaleGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     scalable: true\n* });\n* moveable.on(\"scaleGroup\", ({ targets, events }) => {\n*     console.log(\"onScaleGroup\", targets);\n*     events.forEach(ev => {\n*         const target = ev.target;\n*         // ev.drag is a drag event that occurs when the group scale.\n*         const left = ev.drag.beforeDist[0];\n*         const top = ev.drag.beforeDist[1];\n*         const scaleX = ev.scale[0];\n*         const scaleY = ev.scale[1];\n*     });\n* });\n*/\n\n/**\n * When the group scale finishes, the `scaleGroupEnd` event is called.\n * @memberof Moveable.Scalable\n * @event scaleGroupEnd\n * @param {Moveable.Scalable.OnScaleGroupEnd} - Parameters for the `scaleGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     scalable: true\n * });\n * moveable.on(\"scaleGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onScaleGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    prefix, getLineStyle, getDirection, getAbsolutePosesByState,\n    triggerEvent, fillParams, fillEndParams,\n } from \"../utils\";\nimport {\n    convertDimension, invert, multiply,\n    calculate,\n    createIdentityMatrix,\n    ignoreDimension,\n    minus,\n    createWarpMatrix,\n    plus,\n} from \"@scena/matrix\";\nimport { NEARBY_POS } from \"../consts\";\nimport {\n    setDragStart, getDragDist, getPosIndexesByDirection, setDefaultTransformIndex,\n    fillTransformStartEvent, resolveTransformEvent, convertTransformFormat, fillOriginalTransform, getTransfromMatrix\n} from \"../gesto/GestoUtils\";\nimport {\n    WarpableProps, ScalableProps, ResizableProps,\n    Renderer, SnappableProps, SnappableState,\n    OnWarpStart, OnWarp, OnWarpEnd, MoveableManagerInterface,\n} from \"../types\";\nimport { hasClass, dot, getRad } from \"@daybrush/utils\";\nimport { renderAllDirections } from \"../renderDirection\";\nimport { hasGuidelines, checkMoveableSnapBounds } from \"./Snappable\";\n\nfunction getMiddleLinePos(pos1: number[], pos2: number[]) {\n    return pos1.map((pos, i) => dot(pos, pos2[i], 1, 2));\n}\n\nfunction getTriangleRad(pos1: number[], pos2: number[], pos3: number[]) {\n    // pos1 Rad\n    const rad1 = getRad(pos1, pos2);\n    const rad2 = getRad(pos1, pos3);\n\n    const rad = rad2 - rad1;\n\n    return rad >= 0 ? rad : rad + 2 * Math.PI;\n}\n\nfunction isValidPos(poses1: number[][], poses2: number[][]) {\n    const rad1 = getTriangleRad(poses1[0], poses1[1], poses1[2]);\n    const rad2 = getTriangleRad(poses2[0], poses2[1], poses2[2]);\n    const pi = Math.PI;\n\n    if ((rad1 >= pi && rad2 <= pi) || (rad1 <= pi && rad2 >= pi)) {\n        return false;\n    }\n    return true;\n}\n\n/**\n * @namespace Moveable.Warpable\n * @description Warpable indicates whether the target can be warped(distorted, bented).\n */\nexport default {\n    name: \"warpable\",\n    ableGroup: \"size\",\n    props: {\n        warpable: Boolean,\n        renderDirections: Array,\n    } as const,\n    events: {\n        onWarpStart: \"warpStart\",\n        onWarp: \"warp\",\n        onWarpEnd: \"warpEnd\",\n    } as const,\n    render(moveable: MoveableManagerInterface<ResizableProps & ScalableProps & WarpableProps>, React: Renderer): any[] {\n        const { resizable, scalable, warpable, zoom } = moveable.props;\n\n        if (resizable || scalable || !warpable) {\n            return [];\n        }\n        const { pos1, pos2, pos3, pos4 } = moveable.state;\n\n        const linePosFrom1 = getMiddleLinePos(pos1, pos2);\n        const linePosFrom2 = getMiddleLinePos(pos2, pos1);\n        const linePosFrom3 = getMiddleLinePos(pos1, pos3);\n        const linePosFrom4 = getMiddleLinePos(pos3, pos1);\n        const linePosTo1 = getMiddleLinePos(pos3, pos4);\n        const linePosTo2 = getMiddleLinePos(pos4, pos3);\n        const linePosTo3 = getMiddleLinePos(pos2, pos4);\n        const linePosTo4 = getMiddleLinePos(pos4, pos2);\n\n        return [\n            <div className={prefix(\"line\")} key=\"middeLine1\" style={getLineStyle(linePosFrom1, linePosTo1, zoom)}></div>,\n            <div className={prefix(\"line\")} key=\"middeLine2\" style={getLineStyle(linePosFrom2, linePosTo2, zoom)}></div>,\n            <div className={prefix(\"line\")} key=\"middeLine3\" style={getLineStyle(linePosFrom3, linePosTo3, zoom)}></div>,\n            <div className={prefix(\"line\")} key=\"middeLine4\" style={getLineStyle(linePosFrom4, linePosTo4, zoom)}></div>,\n            ...renderAllDirections(moveable, React),\n        ];\n    },\n    dragControlCondition(e: any) {\n        if (e.isRequest) {\n            return false;\n        }\n        return hasClass(e.inputEvent.target, prefix(\"direction\"));\n    },\n    dragControlStart(\n        moveable: MoveableManagerInterface<WarpableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, inputEvent } = e;\n        const { target } = moveable.props;\n        const { target: inputTarget } = inputEvent;\n        const direction = getDirection(inputTarget);\n\n        if (!direction || !target) {\n            return false;\n        }\n        const state = moveable.state;\n        const {\n            transformOrigin, is3d,\n            targetTransform, targetMatrix,\n            width, height,\n            left, top,\n        } = state;\n\n        datas.datas = {};\n        datas.targetTransform = targetTransform;\n        datas.warpTargetMatrix = is3d ? targetMatrix : convertDimension(targetMatrix, 3, 4);\n        datas.targetInverseMatrix = ignoreDimension(invert(datas.warpTargetMatrix, 4), 3, 4);\n        datas.direction = direction;\n        datas.left = left;\n        datas.top = top;\n\n        setDragStart(moveable, e);\n        setDefaultTransformIndex(e);\n\n        datas.poses = [\n            [0, 0],\n            [width, 0],\n            [0, height],\n            [width, height],\n        ].map(p => minus(p, transformOrigin));\n\n        datas.nextPoses = datas.poses.map(([x, y]: number[]) => calculate(datas.warpTargetMatrix, [x, y, 0, 1], 4));\n        datas.startValue = createIdentityMatrix(4);\n        datas.prevMatrix = createIdentityMatrix(4);\n        datas.absolutePoses = getAbsolutePosesByState(state);\n        datas.posIndexes = getPosIndexesByDirection(direction);\n\n        state.snapRenderInfo = {\n            request: e.isRequest,\n            direction,\n        };\n\n        const params = fillParams<OnWarpStart>(moveable, e, {\n            set: (matrix: number[]) => {\n                datas.startValue = matrix;\n            },\n            ...fillTransformStartEvent(e),\n        });\n        const result = triggerEvent(moveable, \"onWarpStart\", params);\n        if (result !== false) {\n            datas.isWarp = true;\n        }\n        return datas.isWarp;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<WarpableProps & SnappableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, isRequest } = e;\n        let { distX, distY } = e;\n        const {\n            targetInverseMatrix, prevMatrix, isWarp, startValue,\n            poses,\n            posIndexes,\n            absolutePoses,\n        } = datas;\n\n        if (!isWarp) {\n            return false;\n        }\n        resolveTransformEvent(e, \"matrix3d\");\n        if (hasGuidelines(moveable, \"warpable\")) {\n            const selectedPoses: number[][] = posIndexes.map((index: number) => absolutePoses[index]);\n\n            if (selectedPoses.length > 1) {\n                selectedPoses.push([\n                    (selectedPoses[0][0] + selectedPoses[1][0]) / 2,\n                    (selectedPoses[0][1] + selectedPoses[1][1]) / 2,\n                ]);\n            }\n\n            const {\n                horizontal: horizontalSnapInfo,\n                vertical: verticalSnapInfo,\n            } = checkMoveableSnapBounds(\n                moveable,\n                isRequest,\n                selectedPoses.map(pos => [pos[0] + distX, pos[1] + distY]),\n            );\n\n            distY -= horizontalSnapInfo.offset;\n            distX -= verticalSnapInfo.offset;\n        }\n\n        const dist = getDragDist({ datas, distX, distY }, true);\n        const nextPoses = datas.nextPoses.slice();\n\n        posIndexes.forEach((index: number) => {\n            nextPoses[index] = plus(nextPoses[index], dist);\n        });\n\n        if (!NEARBY_POS.every(\n            nearByPoses => isValidPos(nearByPoses.map(i => poses[i]), nearByPoses.map(i => nextPoses[i])),\n        )) {\n            return false;\n        }\n        const h = createWarpMatrix(\n            poses[0],\n            poses[2],\n            poses[1],\n            poses[3],\n            nextPoses[0],\n            nextPoses[2],\n            nextPoses[1],\n            nextPoses[3],\n        );\n\n        if (!h.length) {\n            return false;\n        }\n        // B * A * M\n        const afterMatrix = multiply(targetInverseMatrix, h, 4);\n\n        // B * M * A\n        const matrix = getTransfromMatrix(datas, afterMatrix, true);\n\n        const delta = multiply(invert(prevMatrix, 4), matrix, 4);\n\n        datas.prevMatrix = matrix;\n        const totalMatrix = multiply(startValue, matrix, 4);\n        const nextTransform = convertTransformFormat(\n            datas, `matrix3d(${totalMatrix.join(\", \")})`, `matrix3d(${matrix.join(\", \")})`);\n\n        fillOriginalTransform(e, nextTransform);\n        triggerEvent(moveable, \"onWarp\", fillParams<OnWarp>(moveable, e, {\n            delta,\n            matrix: totalMatrix,\n            dist: matrix,\n            multiply,\n            transform: nextTransform,\n        }));\n        return true;\n    },\n    dragControlEnd(\n        moveable: MoveableManagerInterface<WarpableProps>,\n        e: any,\n    ) {\n        const { datas, isDrag } = e;\n        if (!datas.isWarp) {\n            return false;\n        }\n        datas.isWarp = false;\n\n        triggerEvent(moveable, \"onWarpEnd\", fillEndParams<OnWarpEnd>(moveable, e, {}));\n        return isDrag;\n    },\n};\n\n/**\n * Whether or not target can be warped. (default: false)\n * @name Moveable.Warpable#warpable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.warpable = true;\n */\n\n /**\n * Set directions to show the control box. (default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"])\n * @name Moveable.Warpable#renderDirections\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     warpable: true,\n *     renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n * });\n *\n * moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n */\n/**\n* When the warp starts, the warpStart event is called.\n* @memberof Moveable.Warpable\n* @event warpStart\n* @param {Moveable.Warpable.OnWarpStart} - Parameters for the warpStart event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, { warpable: true });\n* moveable.on(\"warpStart\", ({ target }) => {\n*     console.log(target);\n* });\n*/\n/**\n * When warping, the warp event is called.\n * @memberof Moveable.Warpable\n * @event warp\n * @param {Moveable.Warpable.OnWarp} - Parameters for the warp event\n * @example\n * import Moveable from \"moveable\";\n * let matrix = [\n *  1, 0, 0, 0,\n *  0, 1, 0, 0,\n *  0, 0, 1, 0,\n *  0, 0, 0, 1,\n * ];\n * const moveable = new Moveable(document.body, { warpable: true });\n * moveable.on(\"warp\", ({ target, transform, delta, multiply }) => {\n *    // target.style.transform = transform;\n *    matrix = multiply(matrix, delta);\n *    target.style.transform = `matrix3d(${matrix.join(\",\")})`;\n * });\n */\n/**\n * When the warp finishes, the warpEnd event is called.\n * @memberof Moveable.Warpable\n * @event warpEnd\n * @param {Moveable.Warpable.OnWarpEnd} - Parameters for the warpEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { warpable: true });\n * moveable.on(\"warpEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n","import { prefix } from \"./utils\";\n\nexport const AREA_PIECES = /*#__PURE__*/prefix(\"area-pieces\");\nexport const AREA_PIECE = /*#__PURE__*/prefix(\"area-piece\");\nexport const AVOID = /*#__PURE__*/prefix(\"avoid\");\n","import {\n    createWarpMatrix,\n} from \"@scena/matrix\";\nimport { ref } from \"framework-utils\";\nimport { getRect, calculateInversePosition, makeMatrixCSS, prefix } from \"../utils\";\nimport {\n    Renderer, GroupableProps, DragAreaProps, MoveableManagerInterface, MoveableGroupInterface\n} from \"../types\";\nimport { AREA_PIECE, AVOID, AREA_PIECES } from \"../classNames\";\nimport { addClass, removeClass } from \"@daybrush/utils\";\n\nfunction restoreStyle(moveable: MoveableManagerInterface) {\n    const el = moveable.areaElement;\n    const { width, height } = moveable.state;\n\n    removeClass(el, AVOID);\n\n    el.style.cssText += `left: 0px; top: 0px; width: ${width}px; height: ${height}px`;\n}\n\nfunction renderPieces(React: Renderer): any {\n    return (<div key=\"area_pieces\" className={AREA_PIECES}>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n    </div>);\n}\nexport default {\n    name: \"dragArea\",\n    props: {\n        dragArea: Boolean,\n        passDragArea: Boolean,\n    } as const,\n    events: {\n        onClick: \"click\",\n        onClickGroup: \"clickGroup\",\n    } as const,\n    render(moveable: MoveableManagerInterface<GroupableProps>, React: Renderer): any[] {\n        const { target, dragArea, groupable, passDragArea } = moveable.props;\n        const { width, height, renderPoses } = moveable.state;\n\n        const className = passDragArea ? prefix(\"area\", \"pass\") : prefix(\"area\");\n        if (groupable) {\n            return [\n                <div key=\"area\" ref={ref(moveable, \"areaElement\")} className={className}></div>,\n                renderPieces(React),\n            ];\n        }\n        if (!target || !dragArea) {\n            return [];\n        }\n        const h = createWarpMatrix(\n            [0, 0],\n            [width, 0],\n            [0, height],\n            [width, height],\n            renderPoses[0],\n            renderPoses[1],\n            renderPoses[2],\n            renderPoses[3],\n        );\n        const transform = h.length ? makeMatrixCSS(h, true) : \"none\";\n\n        return [\n            <div key=\"area\" ref={ref(moveable, \"areaElement\")} className={className} style={{\n                top: \"0px\",\n                left: \"0px\",\n                width: `${width}px`,\n                height: `${height}px`,\n                transformOrigin: \"0 0\",\n                transform,\n            }}></div>,\n            renderPieces(React),\n        ];\n    },\n    dragStart(moveable: MoveableManagerInterface, { datas, clientX, clientY, inputEvent }: any) {\n        if (!inputEvent) {\n            return false;\n        }\n        datas.isDragArea = false;\n        const areaElement = moveable.areaElement;\n        const {\n            moveableClientRect,\n            renderPoses,\n            rootMatrix,\n            is3d,\n        } = moveable.state;\n        const { left, top } = moveableClientRect;\n        const {\n            left: relativeLeft,\n            top: relativeTop,\n            width,\n            height,\n        } = getRect(renderPoses);\n        const n = is3d ? 4 : 3;\n        let [posX, posY] = calculateInversePosition(rootMatrix, [clientX - left, clientY - top], n);\n\n        posX -= relativeLeft;\n        posY -= relativeTop;\n        const rects = [\n            { left: relativeLeft, top: relativeTop, width, height: posY - 10 },\n            { left: relativeLeft, top: relativeTop, width: posX - 10, height },\n            { left: relativeLeft, top: relativeTop + posY + 10, width, height: height - posY - 10 },\n            { left: relativeLeft + posX + 10, top: relativeTop, width: width - posX - 10, height },\n        ];\n\n        const children = [].slice.call(areaElement.nextElementSibling!.children) as HTMLElement[];\n        rects.forEach((rect, i) => {\n            children[i].style.cssText\n                = `left: ${rect.left}px;top: ${rect.top}px; width: ${rect.width}px; height: ${rect.height}px;`;\n        });\n        addClass(areaElement, AVOID);\n        return;\n    },\n    drag(moveable: MoveableManagerInterface, { datas, inputEvent }: any) {\n        if (!inputEvent) {\n            return false;\n        }\n        if (!datas.isDragArea) {\n            datas.isDragArea = true;\n            restoreStyle(moveable);\n        }\n    },\n    dragEnd(moveable: MoveableManagerInterface<DragAreaProps>, e: any) {\n        const { inputEvent, datas } = e;\n        if (!inputEvent) {\n            return false;\n        }\n        if (!datas.isDragArea) {\n            restoreStyle(moveable);\n        }\n    },\n    dragGroupStart(moveable: MoveableGroupInterface, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragGroup(moveable: MoveableGroupInterface, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragGroupEnd(\n        moveable: MoveableGroupInterface<DragAreaProps>,\n        e: any,\n    ) {\n       return this.dragEnd(moveable, e);\n    },\n    unset(moveable: MoveableManagerInterface<DragAreaProps>) {\n        restoreStyle(moveable);\n    },\n};\n\n/**\n * Add an event to the moveable area instead of the target for stopPropagation. (default: false, true in group)\n * @name Moveable#dragArea\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  dragArea: false,\n * });\n */\n/**\n * Set `pointerEvents: none;` css to pass events in dragArea. (default: false)\n * @name Moveable#passDragArea\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  dragArea: false,\n * });\n */\n","import { prefix, getControlTransform } from \"../utils\";\nimport { Renderer, OriginOptions, MoveableManagerInterface } from \"../types\";\n\nexport default {\n    name: \"origin\",\n    props: {\n        origin: Boolean,\n    } as const,\n    events: {} as const,\n    render(moveable: MoveableManagerInterface<OriginOptions>, React: Renderer): any[] {\n        const { zoom } = moveable.props;\n        const { beforeOrigin, rotation } = moveable.state;\n\n        return [\n            <div className={prefix(\"control\", \"origin\")}\n                style={getControlTransform(rotation, zoom!, beforeOrigin)} key=\"beforeOrigin\"></div>,\n        ];\n    },\n};\n\n/**\n * Whether or not the origin controlbox will be visible or not (default: true)\n * @name Moveable#origin\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.origin = true;\n */\n","\nimport { ScrollableProps, OnScroll, MoveableManagerInterface, MoveableGroupInterface } from \"../types\";\nimport { triggerEvent, fillParams, getRefTarget } from \"../utils\";\nimport DragScroll from \"@scena/dragscroll\";\n\nfunction getDefaultScrollPosition(e: { scrollContainer: HTMLElement, direction: number[] }) {\n    const scrollContainer = e.scrollContainer;\n\n    return [\n        scrollContainer.scrollLeft,\n        scrollContainer.scrollTop,\n    ];\n}\n/**\n * @namespace Moveable.Scrollable\n * @description Whether or not target can be scrolled to the scroll container (default: false)\n */\nexport default {\n    name: \"scrollable\",\n    canPinch: true,\n    props: {\n        scrollable: Boolean,\n        scrollContainer: Object,\n        scrollThreshold: Number,\n        getScrollPosition: Function,\n    } as const,\n    events: {\n        onScroll: \"scroll\",\n        onScrollGroup: \"scrollGroup\",\n    } as const,\n    dragStart(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        const props = moveable.props;\n        const {\n            scrollContainer = moveable.getContainer() as HTMLElement,\n        } = props;\n\n        const dragScroll = new DragScroll();\n        const scrollContainerElement = getRefTarget<HTMLElement>(scrollContainer, true);\n\n        e.datas.dragScroll = dragScroll;\n\n        const gestoName = e.isControl ? \"controlGesto\" : \"targetGesto\";\n        const targets = e.targets;\n\n        dragScroll.on(\"scroll\", ({ container, direction }) => {\n            const params = fillParams<OnScroll>(moveable, e, {\n                scrollContainer: container,\n                direction,\n            }) as any;\n\n            const eventName = targets ? \"onScrollGroup\" : \"onScroll\" as any;\n            if (targets) {\n                params.targets = targets;\n            }\n            triggerEvent(moveable, eventName, params);\n        }).on(\"move\", ({ offsetX, offsetY }) => {\n            moveable[gestoName].scrollBy(offsetX, offsetY, e.inputEvent, false);\n        });\n        dragScroll.dragStart(e, {\n            container: scrollContainerElement!,\n        });\n    },\n    checkScroll(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        const {\n            dragScroll,\n        } = e.datas;\n        if (!dragScroll) {\n            return;\n        }\n        const {\n            scrollContainer = moveable.getContainer(),\n            scrollThreshold = 0,\n            getScrollPosition = getDefaultScrollPosition,\n        } = moveable.props;\n\n        dragScroll.drag(e, {\n            container: scrollContainer,\n            threshold: scrollThreshold,\n            getScrollPosition: (ev: any) => {\n                return getScrollPosition({ scrollContainer: ev.container, direction: ev.direction });\n            },\n        });\n\n        return true;\n    },\n    drag(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.checkScroll(moveable, e);\n    },\n    dragEnd(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        e.datas.dragScroll.dragEnd();\n        e.datas.dragScroll = null;\n    },\n    dragControlStart(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.dragStart(moveable, { ...e, isControl: true });\n    },\n    dragControl(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n    dragGroupStart(moveable: MoveableGroupInterface, e: any) {\n        return this.dragStart(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroup(moveable: MoveableGroupInterface, e: any) {\n        return this.drag(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface, e: any) {\n        return this.dragEnd(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface, e: any) {\n        return this.dragStart(moveable, { ...e, targets: moveable.props.targets, isControl: true });\n    },\n    dragGroupContro(moveable: MoveableGroupInterface, e: any) {\n        return this.drag(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupControEnd(moveable: MoveableGroupInterface, e: any) {\n        return this.dragEnd(moveable, { ...e, targets: moveable.props.targets });\n    },\n};\n\n/**\n * Whether or not target can be scrolled to the scroll container (default: false)\n * @name Moveable.Scrollable#scrollable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 0,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n *\n * moveable.scrollable = true;\n */\n\n/**\n * The container to which scroll is applied (default: container)\n * @name Moveable.Scrollable#scrollContainer\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 0,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n */\n/**\n * Expand the range of the scroll check area. (default: 0)\n * @name Moveable.Scrollable#scrollThreshold\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 0,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n */\n\n/**\n * Sets a function to get the scroll position. (default: Function)\n * @name Moveable.Scrollable#getScrollPosition\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 0,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n *\n */\n\n/**\n * When the drag cursor leaves the scrollContainer, the `scroll` event occur to scroll.\n * @memberof Moveable.Scrollable\n * @event scroll\n * @param {Moveable.Scrollable.OnScroll} - Parameters for the `scroll` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"scroll\", ({ scrollContainer, direction }) => {\n *   scrollContainer.scrollLeft += direction[0] * 10;\n *   scrollContainer.scrollTop += direction[1] * 10;\n * });\n */\n\n/**\n * When the drag cursor leaves the scrollContainer, the `scrollGroup` event occur to scroll in group.\n * @memberof Moveable.Scrollable\n * @event scrollGroup\n * @param {Moveable.Scrollable.OnScrollGroup} - Parameters for the `scrollGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"scroll\", ({ scrollContainer, direction }) => {\n *   scrollContainer.scrollLeft += direction[0] * 10;\n *   scrollContainer.scrollTop += direction[1] * 10;\n * });\n */\n","export default {\n    name: \"\",\n    props: {\n        target: Object,\n        dragTarget: Object,\n        container: Object,\n        rootContainer: Object,\n        zoom: Number,\n        transformOrigin: Array,\n        edge: Boolean,\n        ables: Array,\n        className: String,\n        pinchThreshold: Number,\n        pinchOutside: Boolean,\n        triggerAblesSimultaneously: Boolean,\n        checkInput: Boolean,\n        cspNonce: String,\n        translateZ: Number,\n        props: Object,\n    } as const,\n    events: {} as const,\n};\n","import { prefix, makeMatrixCSS } from \"../utils\";\nimport { Renderer, MoveableManagerInterface } from \"../types\";\nimport { createWarpMatrix } from \"@scena/matrix\";\n\nexport default {\n    name: \"padding\",\n    props: {\n        padding: Object,\n    } as const,\n    events: {} as const,\n    render(moveable: MoveableManagerInterface, React: Renderer): any[] {\n        const props = moveable.props;\n        if (props.dragArea) {\n            return [];\n        }\n        const padding = props.padding || {};\n        const {\n            left = 0,\n            top = 0,\n            right = 0,\n            bottom = 0,\n        } = padding;\n        const {\n            renderPoses,\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n        } = moveable.state;\n\n        const poses = [pos1, pos2, pos3, pos4];\n        const paddingDirections: number[][] = [];\n\n        if (left > 0) {\n            paddingDirections.push([0, 2]);\n        }\n        if (top > 0) {\n            paddingDirections.push([0, 1]);\n        }\n        if (right > 0) {\n            paddingDirections.push([1, 3]);\n        }\n        if (bottom > 0) {\n            paddingDirections.push([2, 3]);\n        }\n        return paddingDirections.map(([dir1, dir2], i) => {\n            const paddingPos1 = poses[dir1];\n            const paddingPos2 = poses[dir2];\n            const paddingPos3 = renderPoses[dir1];\n            const paddingPos4 = renderPoses[dir2];\n\n            const h = createWarpMatrix(\n                [0, 0],\n                [100, 0],\n                [0, 100],\n                [100, 100],\n                paddingPos1,\n                paddingPos2,\n                paddingPos3,\n                paddingPos4,\n            );\n            if (!h.length) {\n                return undefined;\n            }\n            return (<div key={`padding${i}`} className={prefix(\"padding\")} style={{\n                transform: makeMatrixCSS(h, true),\n            }}></div>);\n        });\n    },\n};\n\n/**\n * Add padding around the target to increase the drag area. (default: null)\n * @name Moveable#padding\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  target: document.querySelector(\".target\"),\n *  padding: { left: 0, top: 0, right: 0, bottom: 0 },\n * });\n * moveable.padding = { left: 10, top: 10, right: 10, bottom: 10 },\n * moveable.updateRect();\n */\n","import { convertCSSSize } from \"../../utils\";\nimport { ControlPose } from \"../../types\";\nimport { convertUnitSize } from \"@daybrush/utils\";\n\nconst RADIUS_DIRECTIONS = [\"nw\", \"ne\", \"se\", \"sw\"] as const;\n\nfunction calculateRatio(values: number[], size: number) {\n    const sumSize = values[0] + values[1];\n    const sumRatio = sumSize > size ? size / sumSize : 1;\n\n    values[0] *= sumRatio;\n    values[1] = size - values[1] * sumRatio;\n\n    return values;\n}\nexport const HORIZONTAL_RADIUS_ORDER = [1, 2, 5, 6];\nexport const VERTICAL_RADIUS_ORDER = [0, 3, 4, 7];\nexport const HORIZONTAL_RADIUS_DIRECTIONS = [1, -1, -1, 1] as const;\nexport const VERTICAL_RADIUS_DIRECTIONS = [1, 1, -1, -1] as const;\n\nexport function getRadiusStyles(\n    poses: number[][], controlPoses: ControlPose[],\n    isRelative: boolean,\n    width: number,\n    height: number,\n    left: number = 0,\n    top: number = 0,\n    right: number = width,\n    bottom: number = height,\n) {\n    const clipStyles: string[] = [];\n    let isVertical = false;\n\n    const raws = poses.map((pos, i) => {\n        const { horizontal, vertical } = controlPoses[i];\n        if (vertical && !isVertical) {\n            isVertical = true;\n            clipStyles.push(\"/\");\n        }\n\n        if (isVertical) {\n            const rawPos = Math.max(0, vertical === 1 ? pos[1] - top : bottom - pos[1]);\n            clipStyles.push(convertCSSSize(rawPos, height, isRelative));\n\n            return rawPos;\n        } else {\n            const rawPos = Math.max(0, horizontal === 1 ? pos[0] - left : right - pos[0]);\n            clipStyles.push(convertCSSSize(rawPos, width, isRelative));\n\n            return rawPos;\n        }\n    });\n\n    return {\n        styles: clipStyles,\n        raws,\n    };\n}\nexport function getRadiusRange(controlPoses: ControlPose[]) {\n    // [start, length]\n    const horizontalRange = [0, 0];\n    const verticalRange = [0, 0];\n    const length =  controlPoses.length;\n\n    for (let i = 0; i < length; ++i) {\n        const clipPose = controlPoses[i];\n\n        if (!clipPose.sub) {\n            continue;\n        }\n        if (clipPose.horizontal) {\n            if (horizontalRange[1] === 0) {\n                horizontalRange[0] = i;\n            }\n            horizontalRange[1] = i - horizontalRange[0] + 1;\n            verticalRange[0] = i + 1;\n        }\n        if (clipPose.vertical) {\n            if (verticalRange[1] === 0) {\n                verticalRange[0] = i;\n            }\n            verticalRange[1] = i - verticalRange[0] + 1;\n        }\n    }\n\n    return {\n        horizontalRange,\n        verticalRange,\n    };\n}\nexport function getRadiusValues(\n    values: string[],\n    width: number,\n    height: number,\n    left: number,\n    top: number,\n    minCounts: number[] = [0, 0],\n): ControlPose[] {\n    const splitIndex = values.indexOf(\"/\");\n    const splitLength = (splitIndex > -1 ? values.slice(0, splitIndex) : values).length;\n    const horizontalValues = values.slice(0, splitLength);\n    const verticalValues = values.slice(splitLength + 1);\n    const [\n        nwValue = \"0px\",\n        neValue = nwValue,\n        seValue = nwValue,\n        swValue = neValue,\n    ] = horizontalValues;\n    const [\n        wnValue = nwValue,\n        enValue = wnValue,\n        esValue = wnValue,\n        wsValue = enValue,\n    ] = verticalValues;\n\n    const horizontalRawPoses = [nwValue, neValue, seValue, swValue].map(pos => convertUnitSize(pos, width));\n    const verticalRawPoses = [wnValue, enValue, esValue, wsValue].map(pos => convertUnitSize(pos, height));\n    const horizontalPoses = horizontalRawPoses.slice();\n    const verticalPoses = verticalRawPoses.slice();\n\n    [horizontalPoses[0], horizontalPoses[1]] = calculateRatio([horizontalPoses[0], horizontalPoses[1]], width);\n    [horizontalPoses[3], horizontalPoses[2]] = calculateRatio([horizontalPoses[3], horizontalPoses[2]], width);\n    [verticalPoses[0], verticalPoses[3]] = calculateRatio([verticalPoses[0], verticalPoses[3]], height);\n    [verticalPoses[1], verticalPoses[2]] = calculateRatio([verticalPoses[1], verticalPoses[2]], height);\n\n    const nextHorizontalPoses\n        = horizontalPoses.slice(0, Math.max(minCounts[0], horizontalValues.length));\n    const nextVerticalPoses\n        = verticalPoses.slice(0, Math.max(minCounts[1], verticalValues.length));\n    return [\n        ...nextHorizontalPoses.map((pos, i) => {\n            const direction = RADIUS_DIRECTIONS[i];\n\n            return {\n                horizontal: HORIZONTAL_RADIUS_DIRECTIONS[i],\n                vertical: 0,\n                pos: [left + pos, top + (VERTICAL_RADIUS_DIRECTIONS[i] === -1 ? height : 0)],\n                sub: true,\n                raw: horizontalRawPoses[i],\n                direction,\n            };\n        }),\n        ...nextVerticalPoses.map((pos, i) => {\n            const direction = RADIUS_DIRECTIONS[i];\n\n            return {\n                horizontal: 0,\n                vertical: VERTICAL_RADIUS_DIRECTIONS[i],\n                pos: [left + (HORIZONTAL_RADIUS_DIRECTIONS[i] === -1 ? width : 0), top + pos],\n                sub: true,\n                raw: verticalRawPoses[i],\n                direction,\n            };\n        }),\n    ];\n}\nexport function removeRadiusPos(\n    controlPoses: ControlPose[],\n    poses: number[][],\n    index: number,\n    startIndex: number,\n    length: number = poses.length,\n) {\n    const {\n        horizontalRange,\n        verticalRange,\n    } = getRadiusRange(controlPoses.slice(startIndex));\n    const radiuslIndex = index - startIndex;\n    let deleteCount = 0;\n\n    if (radiuslIndex === 0) {\n        deleteCount = length;\n    } else if (radiuslIndex > 0 && radiuslIndex < horizontalRange[1]) {\n        deleteCount = horizontalRange[1] - radiuslIndex;\n    } else if (radiuslIndex >= verticalRange[0]) {\n        deleteCount = verticalRange[0] + verticalRange[1] - radiuslIndex;\n    } else {\n        return;\n    }\n    controlPoses.splice(index, deleteCount);\n    poses.splice(index, deleteCount);\n}\nexport function addRadiusPos(\n    controlPoses: ControlPose[],\n    poses: number[][],\n    startIndex: number,\n    horizontalIndex: number,\n    verticalIndex: number,\n    distX: number,\n    distY: number,\n    right: number,\n    bottom: number,\n    left: number = 0,\n    top: number = 0,\n) {\n    const {\n        horizontalRange,\n        verticalRange,\n    } = getRadiusRange(controlPoses.slice(startIndex));\n    if (horizontalIndex > -1) {\n        const radiusX = HORIZONTAL_RADIUS_DIRECTIONS[horizontalIndex] === 1\n            ? distX - left\n            : right - distX;\n        for (let i = horizontalRange[1]; i <= horizontalIndex; ++i) {\n            const y = VERTICAL_RADIUS_DIRECTIONS[i] === 1 ? top : bottom;\n            let x = 0;\n            if (horizontalIndex === i) {\n                x = distX;\n            } else if (i === 0) {\n                x = left + radiusX;\n            } else if (HORIZONTAL_RADIUS_DIRECTIONS[i] === -1) {\n                x = right - (poses[startIndex][0] - left);\n            }\n            controlPoses.splice(startIndex + i, 0, {\n                horizontal: HORIZONTAL_RADIUS_DIRECTIONS[i],\n                vertical: 0,\n                pos: [x, y],\n            });\n            poses.splice(startIndex + i, 0, [x, y]);\n\n            if (i === 0) {\n                break;\n            }\n        }\n    } else if (verticalIndex > - 1) {\n        const radiusY = VERTICAL_RADIUS_DIRECTIONS[verticalIndex] === 1\n            ? distY - top\n            : bottom - distY;\n        if (horizontalRange[1] === 0 && verticalRange[1] === 0) {\n            const pos = [\n                left + radiusY,\n                top,\n            ];\n            controlPoses.push({\n                horizontal: HORIZONTAL_RADIUS_DIRECTIONS[0],\n                vertical: 0,\n                pos,\n            });\n            poses.push(pos);\n        }\n\n        const startVerticalIndex = verticalRange[0];\n        for (let i = verticalRange[1]; i <= verticalIndex; ++i) {\n            const x = HORIZONTAL_RADIUS_DIRECTIONS[i] === 1 ? left : right;\n            let y = 0;\n            if (verticalIndex === i) {\n                y = distY;\n            } else if (i === 0) {\n                y = top + radiusY;\n            } else if (VERTICAL_RADIUS_DIRECTIONS[i] === 1) {\n                y = poses[startIndex + startVerticalIndex][1];\n            } else if (VERTICAL_RADIUS_DIRECTIONS[i] === -1) {\n                y = bottom - (poses[startIndex + startVerticalIndex][1] - top);\n            }\n            controlPoses.push({\n                horizontal: 0,\n                vertical: VERTICAL_RADIUS_DIRECTIONS[i],\n                pos: [x, y],\n            });\n            poses.push([x, y]);\n            if (i === 0) {\n                break;\n            }\n        }\n    }\n}\nexport function splitRadiusPoses(\n    controlPoses: ControlPose[],\n    raws: number[] = controlPoses.map(pos => pos.raw!),\n) {\n    const horizontals = controlPoses\n    .map((pos , i) => pos.horizontal ? raws[i] : null).filter(pos => pos != null) as number[];\n    const verticals = controlPoses\n        .map((pos , i) => pos.vertical ? raws[i] : null).filter(pos => pos != null) as number[];\n\n    return {\n        horizontals,\n        verticals,\n    };\n}\n","import {\n    Renderer, ClippableProps, OnClip,\n    ClippableState, OnClipEnd, OnClipStart,\n    ControlPose, MoveableManagerInterface\n} from \"../types\";\nimport { splitBracket, splitComma, splitUnit, splitSpace, convertUnitSize, getRad } from \"@daybrush/utils\";\nimport {\n    prefix, calculatePosition, getDiagonalSize,\n    fillParams, triggerEvent,\n    makeMatrixCSS, getRect, fillEndParams,\n    convertCSSSize, moveControlPos,\n} from \"../utils\";\nimport { plus, minus } from \"@scena/matrix\";\nimport { setDragStart, getDragDist, calculatePointerDist } from \"../gesto/GestoUtils\";\nimport {\n    getRadiusValues,\n    HORIZONTAL_RADIUS_ORDER, VERTICAL_RADIUS_ORDER, getRadiusStyles, addRadiusPos, removeRadiusPos\n} from \"./roundable/borderRadius\";\nimport { renderLine } from \"../renderDirection\";\nimport { addGuidelines, checkSnapBoundPriority } from \"./snappable/snap\";\nimport { checkSnapBounds } from \"./Snappable\";\n\nconst CLIP_DIRECTIONS = [\n    [0, -1, \"n\"],\n    [1, 0, \"e\"],\n] as const;\nconst CLIP_RECT_DIRECTIONS = [\n    [-1, -1, \"nw\"],\n    [0, -1, \"n\"],\n    [1, -1, \"ne\"],\n    [1, 0, \"e\"],\n    [1, 1, \"se\"],\n    [0, 1, \"s\"],\n    [-1, 1, \"sw\"],\n    [-1, 0, \"w\"],\n] as const;\n\n// 1 2 5 6 0 3 4 7\n// 0 1 2 3 4 5 6 7\n\nfunction getClipStyles(\n    moveable: MoveableManagerInterface<ClippableProps>,\n    clipPath: ReturnType<typeof getClipPath>,\n    poses: number[][],\n) {\n    const {\n        clipRelative,\n    } = moveable.props;\n    const {\n        width,\n        height,\n    } = moveable.state;\n    const {\n        type: clipType,\n        poses: clipPoses,\n    } = clipPath!;\n\n    const isRect = clipType === \"rect\";\n    const isCircle = clipType === \"circle\";\n    if (clipType === \"polygon\") {\n        return poses.map(pos => `${\n            convertCSSSize(pos[0], width, clipRelative)\n            } ${\n            convertCSSSize(pos[1], height, clipRelative)\n            }`);\n    } else if (isRect || clipType === \"inset\") {\n        const top = poses[1][1];\n        const right = poses[3][0];\n        const left = poses[7][0];\n        const bottom = poses[5][1];\n\n        if (isRect) {\n            return [\n                top,\n                right,\n                bottom,\n                left,\n            ].map(pos => `${pos}px`);\n        }\n        const clipStyles\n            = [top, width - right, height - bottom, left]\n                .map((pos, i) => convertCSSSize(pos, i % 2 ? width : height, clipRelative));\n\n        if (poses.length > 8) {\n            const [subWidth, subHeight] = minus(poses[4], poses[0]);\n\n            clipStyles.push(\"round\", ...getRadiusStyles(\n                poses.slice(8),\n                clipPoses.slice(8),\n                clipRelative!,\n                subWidth,\n                subHeight,\n                left, top, right, bottom,\n            ).styles);\n        }\n        return clipStyles;\n    } else if (isCircle || clipType === \"ellipse\") {\n        const center = poses[0];\n        const ry = convertCSSSize(\n            Math.abs(poses[1][1] - center[1]),\n            isCircle ? Math.sqrt((width * width + height * height) / 2) : height,\n            clipRelative,\n        );\n\n        const clipStyles = isCircle ? [ry]\n            : [convertCSSSize(Math.abs(poses[2][0] - center[0]), width, clipRelative), ry];\n\n        clipStyles.push(\n            \"at\", convertCSSSize(center[0], width, clipRelative),\n            convertCSSSize(center[1], height, clipRelative));\n\n        return clipStyles;\n    }\n}\nfunction getRectPoses(top: number, right: number, bottom: number, left: number): ControlPose[] {\n    const xs = [left, (left + right) / 2, right];\n    const ys = [top, (top + bottom) / 2, bottom];\n\n    return CLIP_RECT_DIRECTIONS.map(([dirx, diry, dir]) => {\n        const x = xs[dirx + 1];\n        const y = ys[diry + 1];\n        return {\n            vertical: Math.abs(diry),\n            horizontal: Math.abs(dirx),\n            direction: dir,\n            pos: [x, y],\n        };\n    });\n}\nfunction getClipPath(\n    target: HTMLElement | SVGElement,\n    width: number,\n    height: number,\n    defaultClip?: string,\n    customClip?: string,\n) {\n    let clipText: string | undefined = customClip;\n\n    if (!clipText) {\n        const style = getComputedStyle(target!);\n        const clipPath = style.clipPath!;\n\n        clipText = clipPath !== \"none\" ? clipPath : style.clip!;\n    }\n    if (!clipText || clipText === \"none\" || clipText === \"auto\") {\n        clipText = defaultClip;\n\n        if (!clipText) {\n            return;\n        }\n    }\n    const {\n        prefix: clipPrefix = clipText,\n        value = \"\",\n    } = splitBracket(clipText);\n    const isCircle = clipPrefix === \"circle\";\n    let splitter = \" \";\n\n    if (clipPrefix === \"polygon\") {\n        const values = splitComma(value! || `0% 0%, 100% 0%, 100% 100%, 0% 100%`);\n        splitter = \",\";\n\n        const poses: ControlPose[] = values.map(pos => {\n            const [xPos, yPos] = pos.split(\" \");\n\n            return {\n                vertical: 1,\n                horizontal: 1,\n                pos: [\n                    convertUnitSize(xPos, width),\n                    convertUnitSize(yPos, height),\n                ],\n            };\n        });\n\n        return {\n            type: clipPrefix,\n            clipText,\n            poses,\n            splitter,\n        } as const;\n    } else if (isCircle || clipPrefix === \"ellipse\") {\n        let xPos: string = \"\";\n        let yPos: string = \"\";\n        let radiusX = 0;\n        let radiusY = 0;\n        const values = splitSpace(value!);\n\n        if (isCircle) {\n            let radius = \"\";\n            [radius = \"50%\", , xPos = \"50%\", yPos = \"50%\"] = values;\n\n            radiusX = convertUnitSize(radius, Math.sqrt((width * width + height * height) / 2));\n            radiusY = radiusX;\n        } else {\n            let xRadius = \"\";\n            let yRadius = \"\";\n            [xRadius = \"50%\", yRadius = \"50%\", , xPos = \"50%\", yPos = \"50%\"] = values;\n\n            radiusX = convertUnitSize(xRadius, width);\n            radiusY = convertUnitSize(yRadius, height);\n        }\n        const centerPos = [\n            convertUnitSize(xPos, width),\n            convertUnitSize(yPos, height),\n        ];\n        const poses: ControlPose[] = [\n            {\n                vertical: 1,\n                horizontal: 1,\n                pos: centerPos,\n                direction: \"nesw\",\n            },\n            ...CLIP_DIRECTIONS.slice(0, isCircle ? 1 : 2).map(dir => ({\n                vertical: Math.abs(dir[1]),\n                horizontal: dir[0],\n                direction: dir[2],\n                sub: true,\n                pos: [\n                    centerPos[0] + dir[0] * radiusX,\n                    centerPos[1] + dir[1] * radiusY,\n                ],\n            })),\n        ];\n        return {\n            type: clipPrefix as \"circle\" | \"ellipse\",\n            clipText,\n            radiusX,\n            radiusY,\n            left: centerPos[0] - radiusX,\n            top: centerPos[1] - radiusY,\n            poses,\n            splitter,\n        } as const;\n    } else if (clipPrefix === \"inset\") {\n        const values = splitSpace(value! || \"0 0 0 0\");\n        const roundIndex = values.indexOf(\"round\");\n\n        const rectLength = (roundIndex > -1 ? values.slice(0, roundIndex) : values).length;\n        const radiusValues = values.slice(rectLength + 1);\n        const [\n            topValue,\n            rightValue = topValue,\n            bottomValue = topValue,\n            leftValue = rightValue,\n        ] = values.slice(0, rectLength);\n        const [top, bottom] = [topValue, bottomValue].map(pos => convertUnitSize(pos, height));\n        const [left, right] = [leftValue, rightValue].map(pos => convertUnitSize(pos, width));\n        const nextRight = width - right;\n        const nextBottom = height - bottom;\n        const radiusPoses = getRadiusValues(\n            radiusValues,\n            nextRight - left,\n            nextBottom - top,\n            left,\n            top,\n        );\n        const poses: ControlPose[] = [\n            ...getRectPoses(top, nextRight, nextBottom, left),\n            ...radiusPoses,\n        ];\n\n        return {\n            type: \"inset\",\n            clipText,\n            poses,\n            top,\n            left,\n            right: nextRight,\n            bottom: nextBottom,\n            radius: radiusValues,\n            splitter,\n        } as const;\n    } else if (clipPrefix === \"rect\") {\n        // top right bottom left\n        const values = splitComma(value! || `0px, ${width}px, ${height}px, 0px`);\n\n        splitter = \",\";\n        const [top, right, bottom, left] = values.map(pos => {\n            const { value: posValue } = splitUnit(pos);\n\n            return posValue;\n        });\n        const poses = getRectPoses(top, right, bottom, left);\n\n        return {\n            type: \"rect\",\n            clipText,\n            poses,\n            top,\n            right,\n            bottom,\n            left,\n            values,\n            splitter,\n        } as const;\n    }\n    return;\n}\nfunction addClipPath(moveable: MoveableManagerInterface<ClippableProps>, e: any) {\n    const [distX, distY] = calculatePointerDist(moveable, e);\n    const { clipPath, index } = e.datas;\n    const {\n        type: clipType,\n        poses: clipPoses,\n        splitter,\n    } = (clipPath as ReturnType<typeof getClipPath>)!;\n    const poses = clipPoses.map(pos => pos.pos);\n    if (clipType === \"polygon\") {\n        poses.splice(index, 0, [distX, distY]);\n    } else if (clipType === \"inset\") {\n        const horizontalIndex = HORIZONTAL_RADIUS_ORDER.indexOf(index);\n        const verticalIndex = VERTICAL_RADIUS_ORDER.indexOf(index);\n        const length = clipPoses.length;\n\n        addRadiusPos(\n            clipPoses,\n            poses,\n            8,\n            horizontalIndex,\n            verticalIndex,\n            distX,\n            distY,\n            poses[4][0],\n            poses[4][1],\n            poses[0][0],\n            poses[0][1],\n        );\n\n        if (length === clipPoses.length) {\n            return;\n        }\n    } else {\n        return;\n    }\n    const clipStyles = getClipStyles(moveable, clipPath, poses)!;\n    triggerEvent(moveable, \"onClip\", fillParams<OnClip>(moveable, e, {\n        clipEventType: \"added\",\n        clipType,\n        poses,\n        clipStyles,\n        clipStyle: `${clipType}(${clipStyles.join(splitter)})`,\n        distX: 0,\n        distY: 0,\n    }));\n}\nfunction removeClipPath(moveable: MoveableManagerInterface<ClippableProps>, e: any) {\n    const { clipPath, index } = e.datas;\n    const {\n        type: clipType,\n        poses: clipPoses,\n        splitter,\n    } = (clipPath as ReturnType<typeof getClipPath>)!;\n    const poses = clipPoses.map(pos => pos.pos);\n    const length = poses.length;\n    if (clipType === \"polygon\") {\n        clipPoses.splice(index, 1);\n        poses.splice(index, 1);\n    } else if (clipType === \"inset\") {\n        if (index < 8) {\n            return;\n        }\n        removeRadiusPos(clipPoses, poses, index, 8, length);\n\n        if (length === clipPoses.length) {\n            return;\n        }\n    } else {\n        return;\n    }\n    const clipStyles = getClipStyles(moveable, clipPath, poses)!;\n    triggerEvent(moveable, \"onClip\", fillParams<OnClip>(moveable, e, {\n        clipEventType: \"removed\",\n        clipType,\n        poses,\n        clipStyles,\n        clipStyle: `${clipType}(${clipStyles.join(splitter)})`,\n        distX: 0,\n        distY: 0,\n    }));\n}\n/**\n * @namespace Moveable.Clippable\n * @description Whether to clip the target.\n */\n\nexport default {\n    name: \"clippable\",\n    props: {\n        clippable: Boolean,\n        defaultClipPath: String,\n        customClipPath: String,\n        clipRelative: Boolean,\n        clipArea: Boolean,\n        dragWithClip: Boolean,\n        clipTargetBounds: Boolean,\n        clipVerticalGuidelines: Array,\n        clipHorizontalGuidelines: Array,\n        clipSnapThreshold: Boolean,\n    } as const,\n    events: {\n        onClipStart: \"clipStart\",\n        onClip: \"clip\",\n        onClipEnd: \"clipEnd\",\n    } as const,\n    css: [\n        `.control.clip-control {\n    background: #6d6;\n    cursor: pointer;\n}\n.control.clip-control.clip-radius {\n    background: #d66;\n}\n.line.clip-line {\n    background: #6e6;\n    cursor: move;\n    z-index: 1;\n}\n.clip-area {\n    position: absolute;\n    top: 0;\n    left: 0;\n}\n.clip-ellipse {\n    position: absolute;\n    cursor: move;\n    border: 1px solid #6d6;\n    border: var(--zoompx) solid #6d6;\n    border-radius: 50%;\n    transform-origin: 0px 0px;\n}`,\n        `:host {\n    --bounds-color: #d66;\n}`,\n        `.guideline {\n    pointer-events: none;\n    z-index: 2;\n}`,\n        `.line.guideline.bounds {\n    background: #d66;\n    background: var(--bounds-color);\n}`,\n    ],\n    render(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, React: Renderer): any[] {\n        const {\n            customClipPath, defaultClipPath,\n            clipArea, zoom,\n        } = moveable.props;\n        const {\n            target, width, height, allMatrix, is3d, left, top,\n            pos1, pos2, pos3, pos4,\n            clipPathState,\n            snapBoundInfos,\n        } = moveable.state;\n\n        if (!target) {\n            return [];\n        }\n\n        const clipPath = getClipPath(\n            target, width, height, defaultClipPath || \"inset\", clipPathState || customClipPath);\n\n        if (!clipPath) {\n            return [];\n        }\n        const n = is3d ? 4 : 3;\n        const type = clipPath.type;\n        const clipPoses = clipPath.poses;\n        const poses = clipPoses.map(pos => {\n            // return [x, y];\n            const calculatedPos = calculatePosition(allMatrix, pos.pos, n);\n\n            return [\n                calculatedPos[0] - left,\n                calculatedPos[1] - top,\n            ];\n        });\n\n        let controls: any[] = [];\n        let lines: any[] = [];\n\n        const isRect = type === \"rect\";\n        const isInset = type === \"inset\";\n        const isPolygon = type === \"polygon\";\n\n        if (isRect || isInset || isPolygon) {\n            const linePoses = isInset ? poses.slice(0, 8) : poses;\n\n            lines = linePoses.map((to, i) => {\n                const from = i === 0 ? linePoses[linePoses.length - 1] : linePoses[i - 1];\n\n                const rad = getRad(from, to);\n                const dist = getDiagonalSize(from, to);\n                return <div key={`clipLine${i}`} className={prefix(\"line\", \"clip-line\", \"snap-control\")}\n                    data-clip-index={i}\n                    style={{\n                        width: `${dist}px`,\n                        transform: `translate(${from[0]}px, ${from[1]}px) rotate(${rad}rad) scaleY(${zoom})`,\n                    }}></div>;\n            });\n        }\n        controls = poses.map((pos, i) => {\n            return <div key={`clipControl${i}`}\n                className={prefix(\"control\", \"clip-control\", \"snap-control\")}\n                data-clip-index={i}\n                style={{\n                    transform: `translate(${pos[0]}px, ${pos[1]}px) scale(${zoom})`,\n                }}></div>;\n        });\n\n        if (isInset) {\n            controls.push(...poses.slice(8).map((pos, i) => {\n                return <div key={`clipRadiusControl${i}`}\n                    className={prefix(\"control\", \"clip-control\", \"clip-radius\", \"snap-control\")}\n                    data-clip-index={8 + i}\n                    style={{\n                        transform: `translate(${pos[0]}px, ${pos[1]}px) scale(${zoom})`,\n                    }}></div>;\n            }));\n        }\n        if (type === \"circle\" || type === \"ellipse\") {\n            const {\n                left: clipLeft,\n                top: clipTop,\n                radiusX,\n                radiusY,\n            } = clipPath;\n\n            const [distLeft, distTop] = minus(\n                calculatePosition(allMatrix, [clipLeft!, clipTop!], n),\n                calculatePosition(allMatrix, [0, 0], n),\n            );\n            let ellipseClipPath = \"none\";\n\n            if (!clipArea) {\n                const piece = Math.max(10, radiusX! / 5, radiusY! / 5);\n                const areaPoses: number[][] = [];\n\n                for (let i = 0; i <= piece; ++i) {\n                    const rad = Math.PI * 2 / piece * i;\n                    areaPoses.push([\n                        radiusX! + (radiusX! - zoom!) * Math.cos(rad),\n                        radiusY! + (radiusY! - zoom!) * Math.sin(rad),\n                    ]);\n                }\n                areaPoses.push([radiusX!, -2]);\n                areaPoses.push([-2, -2]);\n                areaPoses.push([-2, radiusY! * 2 + 2]);\n                areaPoses.push([radiusX! * 2 + 2, radiusY! * 2 + 2]);\n                areaPoses.push([radiusX! * 2 + 2, -2]);\n                areaPoses.push([radiusX!, -2]);\n\n                ellipseClipPath = `polygon(${areaPoses.map(pos => `${pos[0]}px ${pos[1]}px`).join(\", \")})`;\n            }\n            controls.push(<div key=\"clipEllipse\" className={prefix(\"clip-ellipse\", \"snap-control\")} style={{\n                width: `${radiusX! * 2}px`,\n                height: `${radiusY! * 2}px`,\n                clipPath: ellipseClipPath,\n                transform: `translate(${-left + distLeft}px, ${-top + distTop}px) ${makeMatrixCSS(allMatrix)}`,\n            }}></div>);\n        }\n        if (clipArea) {\n            const {\n                width: allWidth,\n                height: allHeight,\n                left: allLeft,\n                top: allTop,\n            } = getRect([pos1, pos2, pos3, pos4, ...poses]);\n            if (isPolygon || isRect || isInset) {\n                const areaPoses = isInset ? poses.slice(0, 8) : poses;\n                controls.push(<div key=\"clipArea\" className={prefix(\"clip-area\", \"snap-control\")} style={{\n                    width: `${allWidth}px`,\n                    height: `${allHeight}px`,\n                    transform: `translate(${allLeft}px, ${allTop}px)`,\n                    clipPath: `polygon(${\n                        areaPoses.map(pos => `${pos[0] - allLeft}px ${pos[1] - allTop}px`).join(\", \")\n                        })`,\n                }}></div>);\n            }\n        }\n        if (snapBoundInfos) {\n            ([\"vertical\", \"horizontal\"] as const).forEach(directionType => {\n                const info = snapBoundInfos[directionType];\n                const isHorizontal = directionType === \"horizontal\";\n                if (info.isSnap) {\n                    lines.push(...info.snap.posInfos.map(({ pos }, i) => {\n                        const snapPos1 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [0, pos] : [pos, 0], n), [left, top]);\n                        const snapPos2 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [width, pos] : [pos, height], n), [left, top]);\n\n                        return renderLine(\n                            React, \"\", snapPos1, snapPos2, zoom!,\n                            `clip${directionType}snap${i}`, \"guideline\");\n                    }));\n                }\n                if (info.isBound) {\n                    lines.push(...info.bounds.map(({ pos }, i) => {\n                        const snapPos1 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [0, pos] : [pos, 0], n), [left, top]);\n                        const snapPos2 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [width, pos] : [pos, height], n), [left, top]);\n\n                        return renderLine(\n                            React, \"\", snapPos1, snapPos2, zoom!,\n                            `clip${directionType}bounds${i}`, \"guideline\", \"bounds\", \"bold\");\n                    }));\n                }\n            });\n        }\n        return [\n            ...controls,\n            ...lines,\n        ];\n    },\n    dragControlCondition(e: any) {\n        return e.inputEvent && (e.inputEvent.target.getAttribute(\"class\") || \"\").indexOf(\"clip\") > -1;\n    },\n    dragStart(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        const props = moveable.props;\n        const {\n            dragWithClip = true,\n        } = props;\n\n        if (dragWithClip) {\n            return false;\n        }\n\n        return this.dragControlStart(moveable, e);\n    },\n    drag(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        return this.dragControl(moveable, e);\n    },\n    dragEnd(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        return this.dragControlEnd(moveable, e);\n    },\n    dragControlStart(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        const state = moveable.state;\n        const { defaultClipPath, customClipPath } = moveable.props;\n        const { target, width, height } = state;\n        const inputTarget = e.inputEvent ? e.inputEvent.target : null;\n        const className = inputTarget ? inputTarget.getAttribute(\"class\") : \"\";\n        const datas = e.datas;\n        const clipPath = getClipPath(target!, width, height, defaultClipPath || \"inset\", customClipPath);\n\n        if (!clipPath) {\n            return false;\n        }\n        const { clipText, type, poses } = clipPath;\n        const result = triggerEvent(moveable, \"onClipStart\", fillParams<OnClipStart>(moveable, e, {\n            clipType: type,\n            clipStyle: clipText,\n            poses: poses.map(pos => pos.pos),\n        }));\n\n        if (result === false) {\n            datas.isClipStart = false;\n            return false;\n        }\n        datas.isControl = className.indexOf(\"clip-control\") > -1;\n        datas.isLine = className.indexOf(\"clip-line\") > -1;\n        datas.isArea = className.indexOf(\"clip-area\") > -1 || className.indexOf(\"clip-ellipse\") > -1;\n        datas.index = inputTarget ? parseInt(inputTarget.getAttribute(\"data-clip-index\"), 10) : -1;\n        datas.clipPath = clipPath;\n        datas.isClipStart = true;\n        state.clipPathState = clipText;\n        setDragStart(moveable, e);\n\n        return true;\n    },\n    dragControl(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        const { datas, originalDatas } = e;\n\n        if (!datas.isClipStart) {\n            return false;\n        }\n        const draggableData = (originalDatas && originalDatas.draggable) || {};\n        const { isControl, isLine, isArea, index, clipPath } = datas as {\n            clipPath: ReturnType<typeof getClipPath>,\n            [key: string]: any,\n        };\n        if (!clipPath) {\n            return false;\n        }\n        let [distX, distY] = draggableData.isDrag ? draggableData.prevDist : getDragDist(e);\n        const props = moveable.props;\n        const state = moveable.state;\n        const { width, height } = state;\n        const isDragWithTarget = !isArea && !isControl && !isLine;\n        const {\n            type: clipType,\n            poses: clipPoses,\n            splitter,\n        } = clipPath;\n        const poses = clipPoses.map(pos => pos.pos);\n\n        if (isDragWithTarget) {\n            distX = -distX;\n            distY = -distY;\n        }\n        const isAll = !isControl || clipPoses[index].direction === \"nesw\";\n        const isRect = clipType === \"inset\" || clipType === \"rect\";\n        let dists = clipPoses.map(() => [0, 0]);\n\n        if (isControl && !isAll) {\n            const { horizontal, vertical } = clipPoses[index];\n            const dist = [\n                distX * Math.abs(horizontal),\n                distY * Math.abs(vertical),\n            ];\n            dists = moveControlPos(clipPoses, index, dist, isRect);\n        } else if (isAll) {\n            dists = poses.map(() => [distX, distY]);\n        }\n        const nextPoses: number[][] = poses.map((pos, i) => plus(pos, dists[i]));\n        const guidePoses = [...nextPoses];\n\n        state.snapBoundInfos = null;\n        const isCircle = clipPath.type === \"circle\";\n        const isEllipse = clipPath.type === \"ellipse\";\n\n        if (isCircle || isEllipse) {\n            const guideRect = getRect(nextPoses);\n            const ry = Math.abs(guideRect.bottom - guideRect.top);\n            const rx = Math.abs(isEllipse ? guideRect.right - guideRect.left : ry);\n            const bottom = nextPoses[0][1] + ry;\n            const left = nextPoses[0][0] - rx;\n            const right = nextPoses[0][0] + rx;\n\n            // right\n            if (isCircle) {\n                guidePoses.push([right, guideRect.bottom]);\n                dists.push([1, 0]);\n            }\n            // bottom\n            guidePoses.push([guideRect.left, bottom]);\n            dists.push([0, 1]);\n            // left\n            guidePoses.push([left, guideRect.bottom]);\n            dists.push([1, 0]);\n        }\n\n        const guidelines = addGuidelines(\n            [],\n            width!, height!,\n            (props.clipHorizontalGuidelines || []).map(v => convertUnitSize(`${v}`, height)),\n            (props.clipVerticalGuidelines || []).map(v => convertUnitSize(`${v}`, width)),\n        );\n        let guideXPoses: number[] = [];\n        let guideYPoses: number[] = [];\n\n        if (isCircle || isEllipse) {\n            guideXPoses = [guidePoses[4][0], guidePoses[2][0]];\n            guideYPoses = [guidePoses[1][1], guidePoses[3][1]];\n        } else if (isRect) {\n            const rectPoses = [guidePoses[0], guidePoses[2], guidePoses[4], guidePoses[6]];\n            const rectDists = [dists[0], dists[2], dists[4], dists[6]];\n\n            guideXPoses = rectPoses.filter((_, i) => rectDists[i][0]).map(pos => pos[0]);\n            guideYPoses = rectPoses.filter((_, i) => rectDists[i][1]).map(pos => pos[1]);\n        } else {\n            guideXPoses = guidePoses.filter((_, i) => dists[i][0]).map(pos => pos[0]);\n            guideYPoses = guidePoses.filter((_, i) => dists[i][1]).map(pos => pos[1]);\n        }\n        for (let i = 0; i < 2; ++i) {\n            const {\n                horizontal: horizontalSnapInfo,\n                vertical: verticalSnapInfo,\n            } = checkSnapBounds(\n                guidelines,\n                props.clipTargetBounds && { left: 0, top: 0, right: width, bottom: height },\n                guideXPoses,\n                guideYPoses,\n                {\n                    snapThreshold: 5,\n                },\n            );\n            const snapOffsetY = horizontalSnapInfo.offset;\n            const snapOffsetX = verticalSnapInfo.offset;\n\n            if ((isEllipse || isCircle) && dists[0][0] === 0 && dists[0][1] === 0) {\n                const guideRect = getRect(nextPoses);\n                let cy = guideRect.bottom - guideRect.top;\n                let cx = isEllipse ? guideRect.right - guideRect.left : cy;\n                const distSnapX = verticalSnapInfo.isBound\n                    ? Math.abs(snapOffsetX)\n                    : (verticalSnapInfo.snapIndex === 0 ? -snapOffsetX : snapOffsetX);\n                const distSnapY = horizontalSnapInfo.isBound\n                    ? Math.abs(snapOffsetY)\n                    : (horizontalSnapInfo.snapIndex === 0 ? -snapOffsetY : snapOffsetY);\n                cx -= distSnapX;\n                cy -= distSnapY;\n\n                if (isCircle) {\n                    cy = checkSnapBoundPriority(verticalSnapInfo, horizontalSnapInfo) > 0 ? cy : cx;\n                    cx = cy;\n                }\n                const center = guidePoses[0];\n\n                guidePoses[1][1] = center[1] - cy;\n                guidePoses[2][0] = center[0] + cx;\n                guidePoses[3][1] = center[1] + cy;\n                guidePoses[4][0] = center[0] - cx;\n            } else {\n                guidePoses.forEach((pos, j) => {\n                    const dist = dists[j];\n\n                    if (dist[0]) {\n                        pos[0] -= snapOffsetX;\n                    }\n                    if (dist[1]) {\n                        pos[1] -= snapOffsetY;\n                    }\n                });\n                break;\n            }\n        }\n        const nextClipStyles = getClipStyles(moveable, clipPath, nextPoses)!;\n        const clipStyle = `${clipType}(${nextClipStyles.join(splitter)})`;\n\n        state.clipPathState = clipStyle;\n\n        if (isCircle || isEllipse) {\n            guideXPoses = [guidePoses[4][0], guidePoses[2][0]];\n            guideYPoses = [guidePoses[1][1], guidePoses[3][1]];\n        } else if (isRect) {\n            const rectPoses = [guidePoses[0], guidePoses[2], guidePoses[4], guidePoses[6]];\n\n            guideXPoses = rectPoses.map(pos => pos[0]);\n            guideYPoses = rectPoses.map(pos => pos[1]);\n        } else {\n            guideXPoses = guidePoses.map(pos => pos[0]);\n            guideYPoses = guidePoses.map(pos => pos[1]);\n        }\n        state.snapBoundInfos = checkSnapBounds(\n            guidelines,\n            props.clipTargetBounds && { left: 0, top: 0, right: width, bottom: height },\n            guideXPoses,\n            guideYPoses,\n            {\n                snapThreshold: 1,\n            },\n        );\n\n        triggerEvent(moveable, \"onClip\", fillParams<OnClip>(moveable, e, {\n            clipEventType: \"changed\",\n            clipType,\n            poses: nextPoses,\n            clipStyle,\n            clipStyles: nextClipStyles,\n            distX,\n            distY,\n        }));\n\n        return true;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        this.unset(moveable);\n        const { isDrag, datas, isDouble } = e;\n        const { isLine, isClipStart, isControl } = datas;\n\n        if (!isClipStart) {\n            return false;\n        }\n        triggerEvent(moveable, \"onClipEnd\", fillEndParams<OnClipEnd>(moveable, e, {}));\n        if (isDouble) {\n            if (isControl) {\n                removeClipPath(moveable, e);\n            } else if (isLine) {\n                // add\n                addClipPath(moveable, e);\n            }\n        }\n        return isDouble || isDrag;\n    },\n    unset(moveable: MoveableManagerInterface<ClippableProps, ClippableState>) {\n        moveable.state.clipPathState = \"\";\n        moveable.state.snapBoundInfos = null;\n    },\n};\n\n/**\n * Whether to clip the target. (default: false)\n * @name Moveable.Clippable#clippable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n *  If clippath is not set, the default value can be set. (defaultClipPath < style < customClipPath < dragging clipPath)\n * @name Moveable.Clippable#defaultClipPath\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * % Can be used instead of the absolute px (`rect` not possible) (default: false)\n * @name Moveable.Clippable#clipRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * You can force the custom clipPath. (defaultClipPath < style < customClipPath < dragging clipPath)\n * @name Moveable.Clippable#customClipPath\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * When dragging the target, the clip also moves. (default: true)\n * @name Moveable.Clippable#dragWithClip\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * You can drag the clip by setting clipArea. (default: false)\n * @name Moveable.Clippable#clipArea\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n* Whether the clip is bound to the target. (default: false)\n* @name Moveable.Clippable#clipTargetBounds\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipTargetBounds: true,\n* });\n* moveable.on(\"clipStart\", e => {\n*     console.log(e);\n* }).on(\"clip\", e => {\n*     if (e.clipType === \"rect\") {\n*         e.target.style.clip = e.clipStyle;\n*     } else {\n*         e.target.style.clipPath = e.clipStyle;\n*     }\n* }).on(\"clipEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n* Add clip guidelines in the vertical direction. (default: [])\n* @name Moveable.Clippable#clipVerticalGuidelines\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n\n/**\n* Add clip guidelines in the horizontal direction. (default: [])\n* @name Moveable.Clippable#clipHorizontalGuidelines\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n/**\n* istance value that can snap to clip guidelines. (default: 5)\n* @name Moveable.Clippable#clipSnapThreshold\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n/**\n * When drag start the clip area or controls, the `clipStart` event is called.\n * @memberof Moveable.Clippable\n * @event clipStart\n * @param {Moveable.Clippable.OnClipStart} - Parameters for the `clipStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * When drag the clip area or controls, the `clip` event is called.\n * @memberof Moveable.Clippable\n * @event clip\n * @param {Moveable.Clippable.OnClip} - Parameters for the `clip` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * When drag end the clip area or controls, the `clipEnd` event is called.\n * @memberof Moveable.Clippable\n * @event clipEnd\n * @param {Moveable.Clippable.OnClipEnd} - Parameters for the `clipEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n","import {\n    prefix, triggerEvent,\n    fillParams, calculatePoses, getRect, fillEndParams, convertCSSSize\n} from \"../utils\";\nimport {\n    OnDragOriginStart, OnDragOrigin,\n    OnDragOriginEnd, MoveableManagerInterface, DraggableProps, OriginDraggableProps, MoveableGroupInterface\n} from \"../types\";\nimport { hasClass, IObject } from \"@daybrush/utils\";\nimport { setDragStart, getDragDist, getNextMatrix } from \"../gesto/GestoUtils\";\nimport { minus, plus } from \"@scena/matrix\";\nimport Draggable from \"./Draggable\";\nimport CustomGesto, { setCustomDrag } from \"../gesto/CustomGesto\";\n\n/**\n * @namespace OriginDraggable\n * @memberof Moveable\n * @description Whether to drag origin (default: false)\n */\nexport default {\n    name: \"originDraggable\",\n    props: {\n        originDraggable: Boolean,\n        originRelative: Boolean,\n    } as const,\n    events: {\n        onDragOriginStart: \"dragOriginStart\",\n        onDragOrigin: \"dragOrigin\",\n        onDragOriginEnd: \"dragOriginEnd\",\n    } as const,\n    css: [\n        `:host[data-able-origindraggable] .control.origin {\n    pointer-events: auto;\n}`,\n    ],\n    dragControlCondition(e: any) {\n        if (e.isRequest) {\n            return e.requestAble === \"originDraggable\";\n        }\n        return hasClass(e.inputEvent.target, prefix(\"origin\"));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<OriginDraggableProps & DraggableProps>, e: any) {\n        const { datas } = e;\n\n        setDragStart(moveable, e);\n\n        const params = fillParams<OnDragOriginStart>(moveable, e, {\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ),\n        });\n        const result = triggerEvent<OriginDraggableProps>(\n            moveable, \"onDragOriginStart\", params);\n\n        datas.startOrigin = moveable.state.transformOrigin;\n        datas.startTargetOrigin = moveable.state.targetOrigin;\n        datas.prevOrigin = [0, 0];\n        datas.isDragOrigin = true;\n\n        if (result === false) {\n            datas.isDragOrigin = false;\n            return false;\n        }\n\n        return params;\n    },\n    dragControl(moveable: MoveableManagerInterface<OriginDraggableProps & DraggableProps>, e: any) {\n        const { datas, isPinch, isRequest } = e;\n\n        if (!datas.isDragOrigin) {\n            return false;\n        }\n        const [distX, distY] = getDragDist(e);\n        const state = moveable.state;\n        const {\n            width,\n            height,\n            offsetMatrix,\n            targetMatrix,\n            is3d,\n        } = state;\n        const {\n            originRelative = true,\n        } = moveable.props;\n        const n = is3d ? 4 : 3;\n        let dist = [distX, distY];\n\n        if (isRequest) {\n            const distOrigin = e.distOrigin;\n            if (distOrigin[0] || distOrigin[1]) {\n                dist = distOrigin;\n            }\n        }\n        const origin = plus(datas.startOrigin, dist);\n        const targetOrigin = plus(datas.startTargetOrigin, dist);\n        const delta = minus(dist, datas.prevOrigin);\n\n        const nextMatrix = getNextMatrix(\n            offsetMatrix,\n            targetMatrix,\n            origin,\n            n,\n        );\n\n        const rect = moveable.getRect();\n        const nextRect = getRect(calculatePoses(nextMatrix, width, height, n));\n\n        const dragDelta = [\n            rect.left - nextRect.left,\n            rect.top - nextRect.top,\n        ];\n\n        datas.prevOrigin = dist;\n        const transformOrigin = [\n            convertCSSSize(targetOrigin[0], width, originRelative),\n            convertCSSSize(targetOrigin[1], height, originRelative),\n        ].join(\" \");\n        const params = fillParams<OnDragOrigin>(moveable, e, {\n            width,\n            height,\n            origin,\n            dist,\n            delta,\n            transformOrigin,\n            drag: Draggable.drag(\n                moveable,\n                setCustomDrag(e, moveable.state, dragDelta, !!isPinch, false),\n            )!,\n        });\n        triggerEvent<OriginDraggableProps>(moveable, \"onDragOrigin\", params);\n        return params;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<OriginDraggableProps>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isDragOrigin) {\n            return false;\n        }\n        triggerEvent<OriginDraggableProps>(moveable, \"onDragOriginEnd\",\n            fillEndParams<OnDragOriginEnd>(moveable, e, {}));\n        return true;\n    },\n    dragGroupControlCondition(e: any) {\n        return this.dragControlCondition(e);\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<OriginDraggableProps>, e: any) {\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n\n        return true;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<OriginDraggableProps>, e: any) {\n        const params = this.dragControl(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        moveable.transformOrigin = params.transformOrigin;\n\n        return true;\n    },\n    /**\n    * @method Moveable.OriginDraggable#request\n    * @param {object} e - the OriginDraggable's request parameter\n    * @param {number} [e.x] - x position\n    * @param {number} [e.y] - y position\n    * @param {number} [e.deltaX] - x number to move\n    * @param {number} [e.deltaY] - y number to move\n    * @param {array} [e.deltaOrigin] - left, top number to move transform-origin\n    * @param {array} [e.origin] - transform-origin position\n    * @param {number} [e.isInstant] - Whether to execute the request instantly\n    * @return {Moveable.Requester} Moveable Requester\n    * @example\n\n    * // Instantly Request (requestStart - request - requestEnd)\n    * // Use Relative Value\n    * moveable.request(\"originDraggable\", { deltaX: 10, deltaY: 10 }, true);\n    * // Use Absolute Value\n    * moveable.request(\"originDraggable\", { x: 200, y: 100 }, true);\n    * // Use Transform Value\n    * moveable.request(\"originDraggable\", { deltaOrigin: [10, 0] }, true);\n    * moveable.request(\"originDraggable\", { origin: [100, 0] }, true);\n    * // requestStart\n    * const requester = moveable.request(\"originDraggable\");\n    *\n    * // request\n    * // Use Relative Value\n    * requester.request({ deltaX: 10, deltaY: 10 });\n    * requester.request({ deltaX: 10, deltaY: 10 });\n    * requester.request({ deltaX: 10, deltaY: 10 });\n    * // Use Absolute Value\n    * moveable.request(\"originDraggable\", { x: 200, y: 100 });\n    * moveable.request(\"originDraggable\", { x: 220, y: 100 });\n    * moveable.request(\"originDraggable\", { x: 240, y: 100 });\n    *\n    * // requestEnd\n    * requester.requestEnd();\n    */\n    request(moveable: MoveableManagerInterface<any, any>) {\n        const datas = {};\n        const rect = moveable.getRect();\n        let distX = 0;\n        let distY = 0;\n\n        const transformOrigin = rect.transformOrigin;\n        const distOrigin = [0, 0];\n\n        return {\n            isControl: true,\n            requestStart() {\n                return { datas };\n            },\n            request(e: IObject<any>) {\n                if (\"deltaOrigin\" in e) {\n                    distOrigin[0] += e.deltaOrigin[0];\n                    distOrigin[1] += e.deltaOrigin[1];\n                } else if (\"origin\" in e) {\n                    distOrigin[0] = e.origin[0] - transformOrigin[0];\n                    distOrigin[1] = e.origin[1] - transformOrigin[1];\n                } else {\n                    if (\"x\" in e) {\n                        distX = e.x - rect.left;\n                    } else if (\"deltaX\" in e) {\n                        distX += e.deltaX;\n                    }\n                    if (\"y\" in e) {\n                        distY = e.y - rect.top;\n                    } else if (\"deltaY\" in e) {\n                        distY += e.deltaY;\n                    }\n                }\n\n                return { datas, distX, distY, distOrigin };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n/**\n * Whether to drag origin (default: false)\n * @name Moveable.OriginDraggable#originDraggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     originDraggable: true,\n * });\n * let translate = [0, 0];\n * moveable.on(\"dragOriginStart\", e => {\n *     e.dragStart && e.dragStart.set(translate);\n * }).on(\"dragOrigin\", e => {\n *     translate = e.drag.beforeTranslate;\n *     e.target.style.cssText\n *         = `transform-origin: ${e.transformOrigin};`\n *         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n * }).on(\"dragOriginEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * % Can be used instead of the absolute px (default: true)\n * @name Moveable.OriginDraggable#originRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     originDraggable: true,\n *     originRelative: false,\n * });\n * moveable.originRelative = true;\n */\n\n/**\n* When drag start the origin, the `dragOriginStart` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOriginStart\n* @param {Moveable.OriginDraggable.OnDragOriginStart} - Parameters for the `dragOriginStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n* When drag the origin, the `dragOrigin` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOrigin\n* @param {Moveable.OriginDraggable.OnDragOrigin} - Parameters for the `dragOrigin` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n* When drag end the origin, the `dragOriginEnd` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOriginEnd\n* @param {Moveable.OriginDraggable.OnDragOriginEnd} - Parameters for the `dragOriginEnd` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n","import {\n    prefix, triggerEvent,\n    fillParams, fillEndParams, calculatePosition\n} from \"../utils\";\nimport {\n    Renderer, RoundableProps, OnRoundStart, RoundableState, OnRound, ControlPose, OnRoundEnd, MoveableManagerInterface,\n} from \"../types\";\nimport { splitSpace } from \"@daybrush/utils\";\nimport { setDragStart, getDragDist, calculatePointerDist } from \"../gesto/GestoUtils\";\nimport { minus, plus } from \"@scena/matrix\";\nimport {\n    getRadiusValues, getRadiusStyles, removeRadiusPos,\n    addRadiusPos, splitRadiusPoses,\n} from \"./roundable/borderRadius\";\n\nfunction addBorderRadius(\n    controlPoses: ControlPose[],\n    poses: number[][],\n    lineIndex: number,\n    distX: number,\n    distY: number,\n    width: number,\n    height: number,\n) {\n    const {\n        horizontals,\n        verticals,\n    } = splitRadiusPoses(controlPoses);\n    const horizontalsLength = horizontals.length;\n    const verticalsLength = verticals.length;\n    // lineIndex\n    // 0 top\n    // 1 right\n    // 2 left\n    // 3 bottom\n\n    // 0 top - left\n    // 1 top - right\n    // 2 bottom - right\n    // 3 bottom - left\n    // 0 left - top\n    // 1 right - top\n    // 2 right - bottom\n    // 3 left - bottom\n    let horizontalIndex = -1;\n    let verticalIndex = -1;\n\n    if (lineIndex === 0) {\n        if (horizontalsLength === 0) {\n            horizontalIndex = 0;\n        } else if (horizontalsLength === 1) {\n            horizontalIndex = 1;\n        }\n    } else if (lineIndex === 3) {\n        if (horizontalsLength <= 2) {\n            horizontalIndex = 2;\n        } else if (horizontalsLength <= 3) {\n            horizontalIndex = 3;\n        }\n    }\n    if (lineIndex === 2) {\n        if (verticalsLength === 0) {\n            verticalIndex = 0;\n        } else if (verticalsLength < 4) {\n            verticalIndex = 3;\n        }\n    } else if (lineIndex === 1) {\n        if (verticalsLength <= 1) {\n            verticalIndex = 1;\n        } else if (verticalsLength <= 2) {\n            verticalIndex = 2;\n        }\n    }\n\n    addRadiusPos(\n        controlPoses, poses, 0,\n        horizontalIndex, verticalIndex,\n        distX, distY, width, height,\n    );\n}\nfunction getBorderRadius(\n    target: HTMLElement | SVGElement,\n    width: number, height: number,\n    minCounts: number[] = [0, 0],\n    state?: string,\n) {\n    let borderRadius: string;\n    let values: string[] = [];\n\n    if (!state) {\n        const style = window.getComputedStyle(target);\n\n        borderRadius = (style && style.borderRadius) || \"\";\n    } else {\n        borderRadius = state;\n    }\n    if (!borderRadius || (!state && borderRadius === \"0px\")) {\n        values = [];\n    } else {\n        values = splitSpace(borderRadius);\n    }\n\n    return getRadiusValues(values, width, height, 0, 0, minCounts);\n}\n\nfunction triggerRoundEvent(\n    moveable: MoveableManagerInterface<RoundableProps, RoundableState>,\n    e: any,\n    dist: number[],\n    delta: number[],\n    controlPoses: ControlPose[],\n    nextPoses: number[][],\n) {\n    const state = moveable.state;\n    const {\n        width,\n        height,\n    } = state;\n    const {\n        raws,\n        styles,\n    } = getRadiusStyles(\n        nextPoses,\n        controlPoses,\n        moveable.props.roundRelative!,\n        width,\n        height,\n    );\n    const {\n        horizontals,\n        verticals,\n    } = splitRadiusPoses(controlPoses, raws);\n    const borderRadius = styles.join(\" \");\n\n    state.borderRadiusState = borderRadius;\n    triggerEvent<RoundableProps>(moveable, \"onRound\", fillParams<OnRound>(moveable, e, {\n        horizontals,\n        verticals,\n        borderRadius,\n        width,\n        height,\n        delta,\n        dist,\n    }));\n}\n\n/**\n * @namespace Moveable.Roundable\n * @description Whether to show and drag or double click border-radius\n */\n\nexport default {\n    name: \"roundable\",\n    props: {\n        roundable: Boolean,\n        roundRelative: Boolean,\n        minRoundControls: Array,\n        maxRoundControls: Array,\n        roundClickable: Boolean,\n    } as const,\n    events: {\n        onRoundStart: \"roundStart\",\n        onRound: \"round\",\n        onRoundEnd: \"roundEnd\",\n    } as const,\n    css: [\n        `.control.border-radius {\n    background: #d66;\n    cursor: pointer;\n}`,\n        `:host[data-able-roundable] .line.direction {\n    cursor: pointer;\n}`,\n    ],\n    render(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, React: Renderer): any {\n        const {\n            target,\n            width,\n            height,\n            allMatrix,\n            is3d,\n            left,\n            top,\n            borderRadiusState,\n        } = moveable.state;\n        const {\n            minRoundControls = [0, 0],\n            maxRoundControls = [4, 4],\n            zoom,\n        } = moveable.props;\n\n        if (!target) {\n            return null;\n        }\n\n        const n = is3d ? 4 : 3;\n        const radiusValues = getBorderRadius(\n            target, width, height, minRoundControls, borderRadiusState);\n\n        if (!radiusValues) {\n            return null;\n        }\n        let verticalCount = 0;\n        let horizontalCount = 0;\n\n        return radiusValues.map((v, i) => {\n            horizontalCount += Math.abs(v.horizontal);\n            verticalCount += Math.abs(v.vertical);\n            const pos = minus(calculatePosition(allMatrix, v.pos, n), [left, top]);\n            const isDisplay = v.vertical\n                ? verticalCount <= maxRoundControls[1]\n                : horizontalCount <= maxRoundControls[0];\n\n            return <div key={`borderRadiusControl${i}`}\n                className={prefix(\"control\", \"border-radius\")}\n                data-radius-index={i}\n                style={{\n                    display: isDisplay ? \"block\" : \"none\",\n                    transform: `translate(${pos[0]}px, ${pos[1]}px) scale(${zoom})`,\n                }}></div>;\n        });\n    },\n    dragControlCondition(e: any) {\n        if (!e.inputEvent || e.isRequest) {\n            return false;\n        }\n        const className = (e.inputEvent.target.getAttribute(\"class\") || \"\");\n\n        return className.indexOf(\"border-radius\") > -1\n            || (className.indexOf(\"moveable-line\") > -1 && className.indexOf(\"moveable-direction\") > -1);\n    },\n    dragControlStart(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, e: any) {\n        const { inputEvent, datas, } = e;\n        const inputTarget = inputEvent.target;\n        const className = (inputTarget.getAttribute(\"class\") || \"\");\n        const isControl = className.indexOf(\"border-radius\") > -1;\n        const isLine = className.indexOf(\"moveable-line\") > -1 && className.indexOf(\"moveable-direction\") > -1;\n        const controlIndex = isControl ? parseInt(inputTarget.getAttribute(\"data-radius-index\"), 10) : -1;\n        const lineIndex = isLine ? parseInt(inputTarget.getAttribute(\"data-line-index\"), 10) : -1;\n\n        if (!isControl && !isLine) {\n            return false;\n        }\n\n        const result = triggerEvent<RoundableProps>(\n            moveable, \"onRoundStart\", fillParams<OnRoundStart>(moveable, e, {}));\n\n        if (result === false) {\n            return false;\n        }\n\n        datas.lineIndex = lineIndex;\n        datas.controlIndex = controlIndex;\n        datas.isControl = isControl;\n        datas.isLine = isLine;\n\n        setDragStart(moveable, e);\n\n        const {\n            roundRelative,\n            minRoundControls = [0, 0],\n        } = moveable.props;\n        const state = moveable.state;\n        const {\n            target,\n            width,\n            height,\n        } = state;\n\n        datas.isRound = true;\n        datas.prevDist = [0, 0];\n        const controlPoses = getBorderRadius(target!, width, height, minRoundControls) || [];\n\n        datas.controlPoses = controlPoses;\n\n        state.borderRadiusState = getRadiusStyles(\n            controlPoses.map(pos => pos.pos), controlPoses, roundRelative!, width, height).styles.join(\" \");\n        return true;\n    },\n    dragControl(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isRound || !datas.isControl || !datas.controlPoses.length) {\n            return false;\n        }\n        const index = datas.controlIndex as number;\n        const controlPoses = datas.controlPoses as ControlPose[];\n        const [distX, distY] = getDragDist(e);\n        const dist = [distX, distY];\n        const delta = minus(dist, datas.prevDist);\n        const {\n            maxRoundControls = [4, 4],\n        } = moveable.props;\n        const { width, height } = moveable.state;\n        const selectedControlPose = controlPoses[index];\n        const selectedVertical = selectedControlPose.vertical;\n        const selectedHorizontal = selectedControlPose.horizontal;\n\n        // 0: [0, 1, 2, 3] maxCount === 1\n        // 0: [0, 2] maxCount === 2\n        // 1: [1, 3] maxCount === 2\n\n        // 0: [0] maxCount === 3\n        // 1: [1, 3] maxCount === 3\n\n        const dists = controlPoses.map((pose, i) => {\n            const { horizontal, vertical } = pose;\n            const poseDist = [\n                horizontal * selectedHorizontal * dist[0],\n                vertical * selectedVertical * dist[1],\n            ];\n            if (horizontal) {\n                if (maxRoundControls[0] === 1) {\n                    return poseDist;\n                } else if (maxRoundControls[0] < 4 && horizontal !== selectedHorizontal) {\n                    return poseDist;\n                }\n            } else if (maxRoundControls[1] === 0) {\n                poseDist[1] = vertical * selectedHorizontal * dist[0] / width * height;\n\n                return poseDist;\n            } else if (selectedVertical) {\n                if (maxRoundControls[1] === 1) {\n                    return poseDist;\n                } else if (maxRoundControls[1] < 4 && vertical !== selectedVertical) {\n                    return poseDist;\n                }\n            }\n            return [0, 0];\n        });\n        dists[index] = dist;\n        const nextPoses = controlPoses.map((pos, i) => plus(pos.pos, dists[i]));\n\n        datas.prevDist = [distX, distY];\n\n        triggerRoundEvent(\n            moveable,\n            e,\n            dist,\n            delta,\n            controlPoses,\n            nextPoses,\n        );\n        return true;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, e: any) {\n        const state = moveable.state;\n\n        state.borderRadiusState = \"\";\n        const { datas, isDouble } = e;\n        if (!datas.isRound) {\n            return false;\n        }\n        const {\n            width,\n            height,\n        } = state;\n        const {\n            isControl,\n            controlIndex,\n            isLine,\n            lineIndex,\n        } = datas;\n        const controlPoses = datas.controlPoses as ControlPose[];\n        const poses = controlPoses.map(pos => pos.pos);\n        const length = poses.length;\n        const {\n            roundClickable = true,\n        } = moveable.props;\n\n        if (isDouble && roundClickable) {\n            if (isControl) {\n                removeRadiusPos(controlPoses, poses, controlIndex, 0);\n            } else if (isLine) {\n                const [distX, distY] = calculatePointerDist(moveable, e);\n\n                addBorderRadius(controlPoses, poses, lineIndex, distX, distY, width, height);\n            }\n            if (length !== controlPoses.length) {\n                triggerRoundEvent(\n                    moveable,\n                    e,\n                    [0, 0],\n                    [0, 0],\n                    controlPoses,\n                    poses,\n                );\n            }\n            triggerEvent<RoundableProps>(moveable, \"onRoundEnd\",\n                fillEndParams<OnRoundEnd>(moveable, e, {}));\n        }\n        state.borderRadiusState = \"\";\n        return true;\n    },\n    unset(moveable: MoveableManagerInterface<RoundableProps, RoundableState>) {\n        moveable.state.borderRadiusState = \"\";\n    },\n};\n/**\n * Whether to show and drag or double click border-radius, (default: false)\n * @name Moveable.Roundable#roundable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * % Can be used instead of the absolute px\n * @name Moveable.Roundable#roundRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * Minimum number of round controls. It moves in proportion by control. [horizontal, vertical] (default: [0, 0])\n * @name Moveable.Roundable#minRoundControls\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     minRoundControls: [0, 0],\n * });\n * moveable.maxRoundControls = [1, 0];\n */\n/**\n * Maximum number of round controls. It moves in proportion by control. [horizontal, vertical] (default: [4, 4])\n * @name Moveable.Roundable#maxRoundControls\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     maxRoundControls: [4, 4],\n * });\n * moveable.maxRoundControls = [1, 0];\n */\n/**\n * @property - Whether you can add/delete round controls by double-clicking a line or control. (default: true)\n * @name Moveable.Roundable#roundClickable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     roundClickable: true,\n * });\n * moveable.roundClickable = false;\n */\n\n/**\n * When drag start the clip area or controls, the `roundStart` event is called.\n * @memberof Moveable.Roundable\n * @event roundStart\n * @param {Moveable.Roundable.OnRoundStart} - Parameters for the `roundStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * When drag or double click the border area or controls, the `round` event is called.\n * @memberof Moveable.Roundable\n * @event round\n * @param {Moveable.Roundable.OnRound} - Parameters for the `round` event\n * @example\n  * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * When drag end the border area or controls, the `roundEnd` event is called.\n * @memberof Moveable.Roundable\n * @event roundEnd\n * @param {Moveable.Roundable.onRoundEnd} - Parameters for the `roundEnd` event\n * @example\n  * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n","import {\n    MoveableManagerInterface, BeforeRenderableProps,\n    OnBeforeRenderStart, OnBeforeRender, OnBeforeRenderEnd,\n    MoveableGroupInterface, OnBeforeRenderGroupStart,\n    OnBeforeRenderGroup, OnBeforeRenderGroupEnd\n} from \"../types\";\nimport { fillParams, triggerEvent } from \"../utils\";\nimport { convertMatrixtoCSS } from \"@scena/matrix\";\nimport { isArray, splitSpace } from \"@daybrush/utils\";\nimport { fillChildEvents } from \"../groupUtils\";\n\nexport default {\n    isPinch: true,\n    name: \"beforeRenderable\",\n    props: {\n    } as const,\n    events: {\n        onBeforeRenderStart: \"beforeRenderStart\",\n        onBeforeRender: \"beforeRender\",\n        onBeforeRenderEnd: \"beforeRenderEnd\",\n        onBeforeRenderGroupStart: \"beforeRenderGroupStart\",\n        onBeforeRenderGroup: \"beforeRenderGroup\",\n        onBeforeRenderGroupEnd: \"beforeRenderGroupEnd\",\n    } as const,\n    setTransform(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        const {\n            is3d,\n            targetMatrix,\n        } = moveable.state;\n        const cssMatrix = is3d\n            ? `matrix3d(${targetMatrix.join(\",\")})`\n            : `matrix(${convertMatrixtoCSS(targetMatrix, true)})`;\n        e.datas.startTransforms = [cssMatrix];\n    },\n    resetTransform(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        e.datas.nextTransforms = e.datas.startTransforms;\n        e.datas.nextTransformAppendedIndexes = [];\n    },\n    fillDragStartParams(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return fillParams<OnBeforeRenderStart>(moveable, e, {\n            setTransform: (transform: string | string[]) => {\n                e.datas.startTransforms = isArray(transform) ? transform : splitSpace(transform);\n            },\n            isPinch: !!e.isPinch,\n        });\n    },\n    fillDragParams(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return fillParams<OnBeforeRender>(moveable, e, {\n            isPinch: !!e.isPinch,\n        });\n    },\n    dragStart(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        this.setTransform(moveable, e);\n\n        triggerEvent(moveable, `onBeforeRenderStart`, this.fillDragStartParams(moveable, e));\n    },\n    drag(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        this.resetTransform(moveable, e);\n\n        triggerEvent(moveable, `onBeforeRender`, fillParams<OnBeforeRender>(moveable, e, {\n            isPinch: !!e.isPinch,\n        }));\n    },\n    dragEnd(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        triggerEvent(moveable, `onBeforeRenderEnd`, fillParams<OnBeforeRenderEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n        }));\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        this.dragStart(moveable, e);\n\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            this.setTransform(childMoveable, childEvent);\n            return this.fillDragStartParams(childMoveable, childEvent);\n        });\n        triggerEvent(moveable, `onBeforeRenderGroupStart`, fillParams<OnBeforeRenderGroupStart>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n            setTransform() { },\n            events: params,\n        }));\n    },\n    dragGroup(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        this.drag(moveable, e);\n\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            this.resetTransform(childMoveable, childEvent);\n            return this.fillDragParams(childMoveable, childEvent);\n        });\n\n        triggerEvent(moveable, `onBeforeRenderGroup`, fillParams<OnBeforeRenderGroup>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n            events: params,\n        }));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        this.dragEnd(moveable, e);\n\n        triggerEvent(moveable, `onBeforeRenderGroupEnd`, fillParams<OnBeforeRenderGroupEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n            targets: moveable.props.targets,\n        }));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragControl(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        return this.dragGroupStart(moveable, e);\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        return this.dragGroup(moveable, e);\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        return this.dragGroupEnd(moveable, e);\n    },\n} as const;\n","import {\n    MoveableManagerInterface, RenderableProps, OnRenderStart, OnRender,\n    OnRenderEnd, MoveableGroupInterface, OnRenderGroupStart, OnRenderGroup, OnRenderGroupEnd\n} from \"../types\";\nimport { triggerEvent, fillParams } from \"../utils\";\n\nexport default {\n    name: \"Renderable\",\n    props: {\n    } as const,\n    events: {\n        onRenderStart: \"renderStart\",\n        onRender: \"render\",\n        onRenderEnd: \"renderEnd\",\n        onRenderGroupStart: \"renderGroupStart\",\n        onRenderGroup: \"renderGroup\",\n        onRenderGroupEnd: \"renderGroupEnd\",\n    } as const,\n    dragStart(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderStart`, fillParams<OnRenderStart>(moveable, e, {\n            isPinch: !!e.isPinch,\n        }));\n    },\n    drag(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRender`, fillParams<OnRender>(moveable, e, {\n            isPinch: !!e.isPinch,\n        }));\n    },\n    dragEnd(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderEnd`, fillParams<OnRenderEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n        }));\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderGroupStart`, fillParams<OnRenderGroupStart>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n        }));\n    },\n    dragGroup(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderGroup`, fillParams<OnRenderGroup>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n        }));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderGroupEnd`, fillParams<OnRenderGroupEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n            targets: moveable.props.targets,\n        }));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragControl(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        return this.dragGroupStart(moveable, e);\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        return this.dragGroup(moveable, e);\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        return this.dragGroupEnd(moveable, e);\n    },\n} as const;\n","import { Able, MoveableManagerInterface, MoveableGroupInterface } from \"../types\";\nimport { hasClass, IObject } from \"@daybrush/utils\";\nimport { convertDragDist } from \"../utils\";\nimport Gesto from \"gesto\";\nimport BeforeRenderable from \"../ables/BeforeRenderable\";\nimport Renderable from \"../ables/Renderable\";\n\nexport function triggerAble(\n    moveable: MoveableManagerInterface,\n    ableType: string,\n    eventOperation: string,\n    eventAffix: string,\n    eventType: any,\n    e: any,\n    requestInstant?: boolean,\n) {\n    const isStart = eventType === \"Start\";\n    const target = moveable.state.target;\n    const isRequest = e.isRequest;\n\n    if (\n        !target\n        || (isStart && eventAffix.indexOf(\"Control\") > -1\n            && !isRequest && moveable.areaElement === e.inputEvent.target)\n    ) {\n        return false;\n    }\n    const eventName = `${eventOperation}${eventAffix}${eventType}`;\n    const conditionName = `${eventOperation}${eventAffix}Condition`;\n    const isEnd = eventType === \"End\";\n    const isAfter = eventType.indexOf(\"After\") > -1;\n    const isFirstStart = isStart && (\n        !moveable.targetGesto || !moveable.controlGesto\n        || (!moveable.targetGesto.isFlag() || !moveable.controlGesto.isFlag())\n    );\n\n    if (isFirstStart) {\n        moveable.updateRect(eventType, true, false);\n    }\n    if (eventType === \"\" && !isAfter) {\n        convertDragDist(moveable.state, e);\n    }\n    const isGroup = eventAffix.indexOf(\"Group\") > -1;\n    const ables: Able[] = [BeforeRenderable, ...(moveable as any)[ableType].slice(), Renderable];\n\n    if (isRequest) {\n        const requestAble = e.requestAble;\n        if (!ables.some(able => able.name === requestAble)) {\n            ables.push(...moveable.props.ables!.filter(able => able.name === requestAble));\n        }\n    }\n\n    if (!ables.length) {\n        return false;\n    }\n    const events = ables.filter((able: any) => able[eventName]);\n    const datas = e.datas;\n\n    if (isFirstStart) {\n        events.forEach(able => {\n            able.unset && able.unset(moveable);\n        });\n    }\n\n    const inputEvent = e.inputEvent;\n    let inputTarget: Element;\n\n    if (isEnd && inputEvent) {\n        inputTarget = document.elementFromPoint(e.clientX, e.clientY) || inputEvent.target;\n    }\n    const results = events.filter((able: any) => {\n        const ableName = able.name;\n        const nextDatas = datas[ableName] || (datas[ableName] = {});\n\n        if (isStart) {\n            nextDatas.isEventStart = !able[conditionName] || able[conditionName](e, moveable);\n        }\n\n        if (nextDatas.isEventStart) {\n            return able[eventName](moveable, { ...e, datas: nextDatas, originalDatas: datas, inputTarget });\n        }\n        return false;\n    });\n\n    const isUpdate = results.length;\n    const isForceEnd = isStart && events.length && !isUpdate;\n\n    if (isEnd || isForceEnd) {\n        moveable.state.gesto = null;\n\n        if ((moveable as MoveableGroupInterface).moveables) {\n            (moveable as MoveableGroupInterface).moveables.forEach(childMoveable => {\n                childMoveable.state.gesto = null;\n            });\n        }\n    }\n    if (isFirstStart && isForceEnd) {\n        events.forEach(able => {\n            able.unset && able.unset(moveable);\n        });\n    }\n    if (moveable.isUnmounted || isForceEnd) {\n        return false;\n    }\n    if ((!isStart && isUpdate && !requestInstant) || isEnd) {\n        if (results.some(able => able.updateRect) && !isGroup) {\n            moveable.updateRect(eventType, false, false);\n        } else {\n            moveable.updateRect(eventType, true, false);\n        }\n        moveable.forceUpdate();\n    }\n    if (!isStart && !isEnd && !isAfter && isUpdate && !requestInstant) {\n        triggerAble(moveable, ableType, eventOperation, eventAffix, eventType + \"After\", e);\n    }\n    return true;\n}\n\nexport function getTargetAbleGesto(\n    moveable: MoveableManagerInterface,\n    moveableTarget: HTMLElement | SVGElement,\n    eventAffix: string,\n) {\n    const controlBox = moveable.controlBox.getElement();\n    const targets: Array<HTMLElement | SVGElement> = [];\n\n    targets.push(controlBox);\n\n    if (!moveable.props.dragArea || moveable.props.dragTarget) {\n        targets.push(moveableTarget);\n    }\n\n    const startFunc = (e: any) => {\n        const eventTarget = e.inputEvent.target;\n        const areaElement = moveable.areaElement;\n\n        return eventTarget === areaElement\n            || !moveable.isMoveableElement(eventTarget)\n            || hasClass(eventTarget, \"moveable-area\")\n            || hasClass(eventTarget, \"moveable-padding\");\n    };\n\n    return getAbleGesto(moveable, targets, \"targetAbles\", eventAffix, {\n        dragStart: startFunc,\n        pinchStart: startFunc,\n    });\n}\nexport function getAbleGesto(\n    moveable: MoveableManagerInterface,\n    target: HTMLElement | SVGElement | Array<HTMLElement | SVGElement>,\n    ableType: string,\n    eventAffix: string,\n    conditionFunctions: IObject<any> = {},\n) {\n    const {\n        pinchOutside,\n        pinchThreshold,\n    } = moveable.props;\n    const options: IObject<any> = {\n        container: window,\n        pinchThreshold,\n        pinchOutside,\n    };\n    const gesto = new Gesto(target!, options);\n\n    [\"drag\", \"pinch\"].forEach(eventOperation => {\n        [\"Start\", \"\", \"End\"].forEach(eventType => {\n            gesto.on(`${eventOperation}${eventType}` as any, e => {\n                const eventName = e.eventType;\n\n                if (conditionFunctions[eventName] && !conditionFunctions[eventName](e)) {\n                    e.stop();\n                    return;\n                }\n                const result = triggerAble(moveable, ableType, eventOperation, eventAffix, eventType, e);\n\n                if (!result) {\n                    e.stop();\n                }\n            });\n        });\n    });\n\n    return gesto;\n}\n","import { Able, MoveableManagerInterface } from \"./types\";\n\nexport default class EventManager {\n    private ables: Able[] = [];\n    constructor(\n        private target: HTMLElement | SVGElement | null,\n        private moveable: MoveableManagerInterface | null,\n        private eventName: string,\n    ) {\n        this.target!.addEventListener(this.eventName.toLowerCase(), this.onEvent);\n    }\n    public setAbles(ables: Able[]) {\n        this.ables = ables;\n    }\n    public onEvent = (e: Event) => {\n        const eventName = this.eventName;\n        const moveable = this.moveable;\n\n        this.ables.forEach(able => {\n            (able as any)[eventName]({\n                inputEvent: e,\n            }, moveable);\n        })\n    }\n    public destroy() {\n        this.target!.removeEventListener(this.eventName.toLowerCase(), this.onEvent);\n        this.target = null;\n        this.moveable = null;\n    }\n}\n","import * as React from \"react\";\nimport { PREFIX } from \"./consts\";\nimport {\n    prefix,\n    getTargetInfo,\n    unset,\n    getAbsolutePosesByState,\n    getRect,\n    filterAbles,\n    equals,\n    flat,\n    groupByMap,\n    calculatePadding,\n    getAbsoluteRotation,\n} from \"./utils\";\nimport Gesto from \"gesto\";\nimport { ref } from \"framework-utils\";\nimport { MoveableManagerProps, MoveableManagerState, Able, RectInfo, Requester, PaddingBox, HitRect, MoveableManagerInterface } from \"./types\";\nimport { triggerAble, getTargetAbleGesto, getAbleGesto } from \"./gesto/getAbleGesto\";\nimport { plus } from \"@scena/matrix\";\nimport { getKeys, IObject } from \"@daybrush/utils\";\nimport { renderLine } from \"./renderDirection\";\nimport { fitPoints, getAreaSize, getOverlapSize, isInside } from \"overlap-area\";\nimport EventManager from \"./EventManager\";\nimport styled from \"react-css-styled\";\n\nexport default class MoveableManager<T = {}>\n    extends React.PureComponent<MoveableManagerProps<T>, MoveableManagerState> {\n    public static defaultProps: Required<MoveableManagerProps> = {\n        target: null,\n        dragTarget: null,\n        container: null,\n        rootContainer: null,\n        origin: true,\n        edge: false,\n        parentMoveable: null,\n        wrapperMoveable: null,\n        parentPosition: null,\n        ables: [],\n        pinchThreshold: 20,\n        dragArea: false,\n        passDragArea: false,\n        transformOrigin: \"\",\n        className: \"\",\n        zoom: 1,\n        triggerAblesSimultaneously: false,\n        padding: {},\n        pinchOutside: true,\n        checkInput: false,\n        groupable: false,\n        cspNonce: \"\",\n        translateZ: 50,\n        cssStyled: null,\n        customStyledMap: {},\n        props: {},\n    };\n    public state: MoveableManagerState = {\n        container: null,\n        target: null,\n        gesto: null,\n        renderPoses: [[0, 0], [0, 0], [0, 0], [0, 0]],\n        ...getTargetInfo(null),\n    };\n    public enabledAbles: Able[] = [];\n    public targetAbles: Able[] = [];\n    public controlAbles: Able[] = [];\n    public controlBox!: { getElement(): HTMLElement };\n    public areaElement!: HTMLElement;\n    public targetGesto!: Gesto;\n    public controlGesto!: Gesto;\n    public rotation: number = 0;\n    public scale: number[] = [1, 1];\n    public isUnmounted = false;\n    public events: Record<string, EventManager | null>  = {\n        \"mouseEnter\": null,\n        \"mouseLeave\": null,\n    };\n\n    public render() {\n        const props = this.props;\n        const state = this.state;\n        const {\n            edge, parentPosition, className,\n            target: propsTarget,\n            zoom, cspNonce,\n            translateZ,\n            cssStyled: ControlBoxElement,\n        } = props;\n\n        this.checkUpdate();\n        this.updateRenderPoses();\n\n        const { left: parentLeft, top: parentTop } = parentPosition! || { left: 0, top: 0 };\n        const { left, top, target: stateTarget, direction, renderPoses } = state;\n        const groupTargets = (props as any).targets;\n        const isDisplay = ((groupTargets && groupTargets.length) || propsTarget) && stateTarget;\n        const isDragging = this.isDragging();\n        const ableAttributes: IObject<boolean> = {};\n        const Renderer = {\n            createElement: React.createElement,\n        };\n        this.getEnabledAbles().forEach(able => {\n            ableAttributes[`data-able-${able.name.toLowerCase()}`] = true;\n        });\n        return (\n            <ControlBoxElement\n                cspNonce={cspNonce}\n                ref={ref(this, \"controlBox\")}\n                className={`${prefix(\"control-box\", direction === -1\n                    ? \"reverse\" : \"\", isDragging ? \"dragging\" : \"\")} ${className}`}\n                {...ableAttributes}\n                style={{\n                    \"position\": \"absolute\",\n                    \"display\": isDisplay ? \"block\" : \"none\",\n                    \"transform\": `translate(${left - parentLeft}px, ${top - parentTop}px) translateZ(${translateZ}px)`,\n                    \"--zoom\": zoom,\n                    \"--zoompx\": `${zoom}px`,\n                }}>\n                {this.renderAbles()}\n                {renderLine(Renderer, edge ? \"n\" : \"\", renderPoses[0], renderPoses[1], zoom!, 0)}\n                {renderLine(Renderer, edge ? \"e\" : \"\", renderPoses[1], renderPoses[3], zoom!, 1)}\n                {renderLine(Renderer, edge ? \"w\" : \"\", renderPoses[0], renderPoses[2], zoom!, 2)}\n                {renderLine(Renderer, edge ? \"s\" : \"\", renderPoses[2], renderPoses[3], zoom!, 3)}\n            </ControlBoxElement>\n        );\n    }\n    public componentDidMount() {\n        this.controlBox.getElement();\n        const props = this.props;\n        const { parentMoveable, container, wrapperMoveable } = props;\n\n        this.updateEvent(props);\n        this.updateNativeEvents(props);\n        if (!container && !parentMoveable && !wrapperMoveable) {\n            this.updateRect(\"\", false, true);\n        }\n        this.updateCheckInput();\n    }\n    public componentDidUpdate(prevProps: MoveableManagerProps) {\n        this.updateNativeEvents(prevProps);\n        this.updateEvent(prevProps);\n        this.updateCheckInput();\n    }\n    public componentWillUnmount() {\n        this.isUnmounted = true;\n        unset(this, \"targetGesto\");\n        unset(this, \"controlGesto\");\n\n        const events = this.events;\n        for (const name in events) {\n            const manager = events[name];\n            manager && manager.destroy();\n        }\n    }\n    public getContainer(): HTMLElement | SVGElement {\n        const { parentMoveable, wrapperMoveable, container } = this.props;\n\n        return container!\n            || (wrapperMoveable && wrapperMoveable.getContainer())\n            || (parentMoveable && parentMoveable.getContainer())\n            || this.controlBox.getElement().parentElement!;\n    }\n    /**\n     * Check if the target is an element included in the moveable.\n     * @method Moveable#isMoveableElement\n     * @param - the target\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * window.addEventListener(\"click\", e => {\n     *     if (!moveable.isMoveableElement(e.target)) {\n     *         moveable.target = e.target;\n     *     }\n     * });\n     */\n    public isMoveableElement(target: Element) {\n        return target && ((target.getAttribute(\"class\") || \"\").indexOf(PREFIX) > -1);\n    }\n    /**\n     * You can drag start the Moveable through the external `MouseEvent`or `TouchEvent`. (Angular: ngDragStart)\n     * @method Moveable#dragStart\n     * @param - external `MouseEvent`or `TouchEvent`\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (!moveable.isMoveableElement(e.target)) {\n     *          moveable.dragStart(e);\n     *     }\n     * });\n     */\n    public dragStart(e: MouseEvent | TouchEvent) {\n        if (this.targetGesto) {\n            this.targetGesto.triggerDragStart(e);\n        }\n        return this;\n    }\n    /**\n     * Hit test an element or rect on a moveable target.\n     * @method Moveable#hitTest\n     * @param - element or rect to test\n     * @return - Get hit test rate (rate > 0 is hitted)\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (moveable.hitTest(e.target) > 0) {\n     *          console.log(\"hiited\");\n     *     }\n     * });\n     */\n    public hitTest(el: Element | HitRect): number {\n        const { target, pos1, pos2, pos3, pos4, targetClientRect } = this.state;\n\n        if (!target) {\n            return 0;\n        }\n        let rect: Required<HitRect>;\n\n        if (el instanceof Element) {\n            const clientRect = el.getBoundingClientRect();\n\n            rect = {\n                left: clientRect.left,\n                top: clientRect.top,\n                width: clientRect.width,\n                height: clientRect.height,\n            };\n        } else {\n            rect = { width: 0, height: 0, ...el };\n        }\n\n        const {\n            left: rectLeft,\n            top: rectTop,\n            width: rectWidth,\n            height: rectHeight,\n        } = rect;\n        const points = fitPoints([pos1, pos2, pos4, pos3], targetClientRect);\n        const size = getOverlapSize(points, [\n            [rectLeft, rectTop],\n            [rectLeft + rectWidth, rectTop],\n            [rectLeft + rectWidth, rectTop + rectHeight],\n            [rectLeft, rectTop + rectHeight],\n        ]);\n        const totalSize = getAreaSize(points);\n\n        if (!size || !totalSize) {\n            return 0;\n        }\n\n        return Math.min(100, size / totalSize * 100);\n    }\n    /**\n     * Whether the coordinates are inside Moveable\n     * @method Moveable#isInside\n     * @param - x coordinate\n     * @param - y coordinate\n     * @return - True if the coordinate is in moveable or false\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (moveable.isInside(e.clientX, e.clientY)) {\n     *          console.log(\"inside\");\n     *     }\n     * });\n     */\n    public isInside(clientX: number, clientY: number) {\n        const { target, pos1, pos2, pos3, pos4, targetClientRect } = this.state;\n\n        if (!target) {\n            return false;\n        }\n        return isInside([clientX, clientY], fitPoints([pos1, pos2, pos4, pos3], targetClientRect));\n    }\n    /**\n     * If the width, height, left, and top of all elements change, update the shape of the moveable.\n     * @method Moveable#updateRect\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * window.addEventListener(\"resize\", e => {\n     *     moveable.updateRect();\n     * });\n     */\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState: boolean = true) {\n        const props = this.props;\n        const parentMoveable = props.parentMoveable;\n        const state = this.state;\n        const target = (state.target || this.props.target) as HTMLElement | SVGElement;\n        const container = this.getContainer();\n        const rootContainer = parentMoveable\n            ? parentMoveable.props.rootContainer\n            : props.rootContainer;\n        this.updateState(\n            getTargetInfo(this.controlBox && this.controlBox.getElement(),\n                target, container, container,\n                rootContainer || container,\n                // isTarget ? state : undefined\n            ),\n            parentMoveable ? false : isSetState,\n        );\n    }\n    public isTargetChanged(prevProps: MoveableManagerProps, useDragArea?: boolean) {\n        const props = this.props;\n        const target = props.dragTarget || props.target;\n        const prevTarget = prevProps.dragTarget || prevProps.target;\n        const dragArea = props.dragArea;\n        const prevDragArea = prevProps.dragArea;\n        const isTargetChanged = !dragArea && prevTarget !== target;\n\n        return isTargetChanged || ((useDragArea || dragArea) && prevDragArea !== dragArea);\n    }\n    public updateNativeEvents(prevProps: MoveableManagerProps) {\n        const props = this.props;\n        const target = props.dragArea ? this.areaElement : this.state.target;\n        const events = this.events;\n        const eventKeys = getKeys(events);\n\n        if (this.isTargetChanged(prevProps)) {\n            for (const eventName in events) {\n                const manager = events[eventName];\n                manager && manager.destroy();\n                events[eventName] = null;\n            }\n        }\n        if (!target) {\n            return;\n        }\n        const enabledAbles = this.enabledAbles;\n        eventKeys.forEach(eventName => {\n            const ables = filterAbles(enabledAbles, [eventName] as any);\n            const hasAbles = ables.length > 0;\n            let manager = events[eventName];\n\n            if (!hasAbles) {\n                if (manager) {\n                    manager.destroy();\n                    events[eventName] = null;\n                }\n                return;\n            }\n            if (!manager) {\n                manager = new EventManager(target, this, eventName);\n                events[eventName] = manager;\n            }\n            manager.setAbles(ables);\n        });\n    }\n    public updateEvent(prevProps: MoveableManagerProps) {\n        const controlBoxElement = this.controlBox.getElement();\n        const hasTargetAble = this.targetAbles.length;\n        const hasControlAble = this.controlAbles.length;\n        const props = this.props;\n        const target = props.dragTarget || props.target;\n        const isTargetChanged = this.isTargetChanged(prevProps, true);\n        const isUnset = (!hasTargetAble && this.targetGesto) || isTargetChanged;\n\n        if (isUnset) {\n            unset(this, \"targetGesto\");\n            this.updateState({ gesto: null });\n        }\n        if (!hasControlAble) {\n            unset(this, \"controlGesto\");\n        }\n\n        if (target && hasTargetAble && !this.targetGesto) {\n            this.targetGesto = getTargetAbleGesto(this, target!, \"\");\n        }\n        if (!this.controlGesto && hasControlAble) {\n            this.controlGesto = getAbleGesto(this, controlBoxElement, \"controlAbles\", \"Control\");\n        }\n        if (isUnset) {\n            this.unsetAbles();\n        }\n    }\n    /**\n     * Check if the moveable state is being dragged.\n     * @method Moveable#isDragging\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * // false\n     * console.log(moveable.isDragging());\n     *\n     * moveable.on(\"drag\", () => {\n     *   // true\n     *   console.log(moveable.isDragging());\n     * });\n     */\n    public isDragging() {\n        return (this.targetGesto ? this.targetGesto.isFlag() : false)\n            || (this.controlGesto ? this.controlGesto.isFlag() : false);\n    }\n    /**\n     * If the width, height, left, and top of the only target change, update the shape of the moveable.\n     * @method Moveable#updateTarget\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.updateTarget();\n     */\n    public updateTarget(type?: \"Start\" | \"\" | \"End\") {\n        this.updateRect(type, true);\n    }\n    /**\n     * You can get the vertex information, position and offset size information of the target based on the container.\n     * @method Moveable#getRect\n     * @return - The Rect Info\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * const rectInfo = moveable.getRect();\n     */\n    public getRect(): RectInfo {\n        const state = this.state;\n        const poses = getAbsolutePosesByState(this.state);\n        const [pos1, pos2, pos3, pos4] = poses;\n        const rect = getRect(poses);\n        const {\n            width: offsetWidth,\n            height: offsetHeight,\n        } = state;\n        const {\n            width,\n            height,\n            left,\n            top,\n        } = rect;\n        const statePos = [state.left, state.top];\n        const origin = plus(statePos, state.origin);\n        const beforeOrigin = plus(statePos, state.beforeOrigin);\n        const transformOrigin = state.transformOrigin;\n\n        return {\n            width,\n            height,\n            left,\n            top,\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n            offsetWidth,\n            offsetHeight,\n            beforeOrigin,\n            origin,\n            transformOrigin,\n            rotation: this.getRotation(),\n        };\n    }\n    /**\n     * Get a manager that manages the moveable's state and props.\n     * @method Moveable#getManager\n     * @return - The Rect Info\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * const manager = moveable.getManager(); // real moveable class instance\n     */\n    public getManager(): MoveableManagerInterface<any, any> {\n        return this as any;\n    }\n    public getRotation() {\n        const {\n            pos1,\n            pos2,\n            direction,\n        } = this.state;\n\n        return getAbsoluteRotation(pos1, pos2, direction);\n    }\n    /**\n     * Request able through a method rather than an event.\n     * At the moment of execution, requestStart is executed,\n     * and then request and requestEnd can be executed through Requester.\n     * @method Moveable#request\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Draggable.html#request|Draggable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Resizable.html#request|Resizable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Scalable.html#request|Scalable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Rotatable.html#request|Rotatable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.OriginDraggable.html#request|OriginDraggable Requester}\n     * @param - ableName\n     * @param - request to be able params.\n     * @param - If isInstant is true, request and requestEnd are executed immediately.\n     * @return - Able Requester. If there is no request in able, nothing will work.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"draggable\", { deltaX: 10, deltaY: 10 }, true);\n     *\n     * // Start move\n     * const requester = moveable.request(\"draggable\");\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.requestEnd();\n     */\n    public request(ableName: string, param: IObject<any> = {}, isInstant?: boolean): Requester {\n        const { ables, groupable } = this.props as any;\n        const requsetAble: Able = ables!.filter((able: Able) => able.name === ableName)[0];\n\n        if (this.isDragging() || !requsetAble || !requsetAble.request) {\n            return {\n                request() {\n                    return this;\n                },\n                requestEnd() {\n                    return this;\n                },\n            };\n        }\n        const self = this;\n        const ableRequester = requsetAble.request(this);\n\n        const requestInstant = isInstant || param.isInstant;\n        const ableType = ableRequester.isControl ? \"controlAbles\" : \"targetAbles\";\n        const eventAffix = `${(groupable ? \"Group\" : \"\")}${ableRequester.isControl ? \"Control\" : \"\"}`;\n\n        const requester = {\n            request(ableParam: IObject<any>) {\n                triggerAble(self, ableType, \"drag\", eventAffix, \"\", {\n                    ...ableRequester.request(ableParam),\n                    requestAble: ableName,\n                    isRequest: true,\n                }, requestInstant);\n                return this;\n            },\n            requestEnd() {\n                triggerAble(self, ableType, \"drag\", eventAffix, \"End\", {\n                    ...ableRequester.requestEnd(),\n                    requestAble: ableName,\n                    isRequest: true,\n                }, requestInstant);\n                return this;\n            },\n        };\n\n        triggerAble(self, ableType, \"drag\", eventAffix, \"Start\", {\n            ...ableRequester.requestStart(param),\n            requestAble: ableName,\n            isRequest: true,\n        }, requestInstant);\n\n        return requestInstant ? requester.request(param).requestEnd() : requester;\n    }\n    /**\n     * Remove the Moveable object and the events.\n     * @method Moveable#destroy\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.destroy();\n     */\n    public destroy(): void {\n        this.componentWillUnmount();\n    }\n    public updateRenderPoses() {\n        const state = this.state;\n        const props = this.props;\n        const {\n            originalBeforeOrigin, transformOrigin,\n            allMatrix, is3d, pos1, pos2, pos3, pos4,\n            left: stateLeft, top: stateTop,\n        } = state;\n        const {\n            left = 0,\n            top = 0,\n            bottom = 0,\n            right = 0,\n        } = (props.padding || {}) as PaddingBox;\n        const n = is3d ? 4 : 3;\n        const absoluteOrigin = (props as any).groupable ? originalBeforeOrigin : plus(originalBeforeOrigin, [stateLeft, stateTop]);\n\n        state.renderPoses = [\n            plus(pos1, calculatePadding(allMatrix, [-left, -top], transformOrigin, absoluteOrigin, n)),\n            plus(pos2, calculatePadding(allMatrix, [right, -top], transformOrigin, absoluteOrigin, n)),\n            plus(pos3, calculatePadding(allMatrix, [-left, bottom], transformOrigin, absoluteOrigin, n)),\n            plus(pos4, calculatePadding(allMatrix, [right, bottom], transformOrigin, absoluteOrigin, n)),\n        ];\n    }\n    public checkUpdate() {\n        const { target, container, parentMoveable } = this.props;\n        const {\n            target: stateTarget,\n            container: stateContainer,\n        } = this.state;\n\n        if (!stateTarget && !target) {\n            return;\n        }\n        this.updateAbles();\n\n        const isChanged = !equals(stateTarget, target) || !equals(stateContainer, container);\n\n        if (!isChanged) {\n            return;\n        }\n\n        this.updateState({ target, container });\n\n        if (!parentMoveable && (container || this.controlBox)) {\n            this.updateRect(\"End\", false, false);\n        }\n    }\n    public triggerEvent(name: string, e: any): any {\n        const callback = (this.props as any)[name];\n\n        return callback && callback(e);\n    }\n    public useCSS(tag: string, css: string) {\n        const customStyleMap = this.props.customStyledMap as Record<string, any>;\n\n        const key = tag + css;\n\n        if (!customStyleMap[key]) {\n            customStyleMap[key] = styled(tag, css);\n        }\n        return customStyleMap[key];\n    }\n    protected unsetAbles() {\n        if (this.targetAbles.filter(able => {\n            if (able.unset) {\n                able.unset(this);\n                return true;\n            }\n            return false;\n        }).length) {\n            this.forceUpdate();\n        }\n    }\n    protected updateAbles(\n        ables: Able[] = this.props.ables!,\n        eventAffix: string = \"\",\n    ) {\n        const props = this.props as any;\n        const triggerAblesSimultaneously = props.triggerAblesSimultaneously;\n        const enabledAbles = ables!.filter(able => able && (able.always || props[able.name]));\n\n        const dragStart = `drag${eventAffix}Start` as \"dragStart\";\n        const pinchStart = `pinch${eventAffix}Start` as \"pinchStart\";\n        const dragControlStart = `drag${eventAffix}ControlStart` as \"dragControlStart\";\n\n        const targetAbles = filterAbles(enabledAbles, [dragStart, pinchStart], triggerAblesSimultaneously);\n        const controlAbles = filterAbles(enabledAbles, [dragControlStart], triggerAblesSimultaneously);\n\n        this.enabledAbles = enabledAbles;\n        this.targetAbles = targetAbles;\n        this.controlAbles = controlAbles;\n    }\n    protected updateState(nextState: any, isSetState?: boolean) {\n        if (isSetState) {\n            this.setState(nextState);\n        } else {\n            const state = this.state;\n\n            for (const name in nextState) {\n                (state as any)[name] = nextState[name];\n            }\n        }\n    }\n    protected getEnabledAbles() {\n        const props = this.props as any;\n        const ables: Able[] = props.ables!;\n        return ables.filter(able => able && props[able.name]);\n    }\n    protected renderAbles() {\n        const props = this.props as any;\n        const triggerAblesSimultaneously = props.triggerAblesSimultaneously;\n        const Renderer = {\n            createElement: React.createElement,\n        };\n\n        return groupByMap(flat<any>(\n            filterAbles(this.getEnabledAbles(), [\"render\"], triggerAblesSimultaneously).map(({ render }) => {\n                return render!(this, Renderer) || [];\n            })).filter(el => el), ({ key }) => key).map(group => group[0]);\n    }\n    protected updateCheckInput() {\n        this.targetGesto && (this.targetGesto.options.checkInput = this.props.checkInput);\n    }\n}\n\n/**\n * The target to indicate Moveable Control Box.\n * @name Moveable#target\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.target = document.querySelector(\".target\");\n */\n/**\n * Zooms in the elements of a moveable. (default: 1)\n * @name Moveable#zoom\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.zoom = 2;\n */\n\n/**\n * Resize, Scale Events at edges\n * @name Moveable#edge\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.edge = true;\n */\n\n/**\n * You can specify the className of the moveable controlbox. (default: \"\")\n * @name Moveable#className\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   className: \"\",\n * });\n *\n * moveable.className = \"moveable1\";\n */\n\n/**\n * The target(s) to drag Moveable target(s) (default: target)\n * @name Moveable#dragTarget\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.target = document.querySelector(\".target\");\n * moveable.dragTarget = document.querySelector(\".dragTarget\");\n */\n\n/**\n * `renderStart` event occurs at the first start of all events.\n * @memberof Moveable\n * @event renderStart\n * @param {Moveable.OnRenderStart} - Parameters for the `renderStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"renderStart\", ({ target }) => {\n *     console.log(\"onRenderStart\", target);\n * });\n */\n\n/**\n * `render` event occurs before the target is drawn on the screen.\n * @memberof Moveable\n * @event render\n * @param {Moveable.OnRender} - Parameters for the `render` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"render\", ({ target }) => {\n *     console.log(\"onRender\", target);\n * });\n */\n\n/**\n * `renderEnd` event occurs at the end of all events.\n * @memberof Moveable\n * @event renderEnd\n * @param {Moveable.OnRenderEnd} - Parameters for the `renderEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"renderEnd\", ({ target }) => {\n *     console.log(\"onRenderEnd\", target);\n * });\n */\n\n/**\n * `renderGroupStart` event occurs at the first start of all events in group.\n * @memberof Moveable\n * @event renderGroupStart\n * @param {Moveable.OnRenderGroupStart} - Parameters for the `renderGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroupStart\", ({ targets }) => {\n *     console.log(\"onRenderGroupStart\", targets);\n * });\n */\n\n/**\n * `renderGroup` event occurs before the target is drawn on the screen in group.\n * @memberof Moveable\n * @event renderGroup\n * @param {Moveable.OnRenderGroup} - Parameters for the `renderGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroup\", ({ targets }) => {\n *     console.log(\"onRenderGroup\", targets);\n * });\n */\n\n/**\n * `renderGroupEnd` event occurs at the end of all events in group.\n * @memberof Moveable\n * @event renderGroupEnd\n * @param {Moveable.OnRenderGroupEnd} - Parameters for the `renderGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroupEnd\", ({ targets }) => {\n *     console.log(\"onRenderGroupEnd\", targets);\n * });\n */\n","import { refs } from \"framework-utils\";\nimport MoveableManager from \"../MoveableManager\";\nimport { Renderer, MoveableGroupInterface } from \"../types\";\n\nexport default {\n    name: \"groupable\",\n    props: {\n        defaultGroupRotate: Number,\n        defaultGroupOrigin: String,\n        groupable: Boolean,\n    } as const,\n    events: {} as const,\n    render(moveable: MoveableGroupInterface, React: Renderer): any[] {\n        const targets = moveable.props.targets || [];\n\n        moveable.moveables = [];\n        const { left, top } = moveable.state;\n        const position = { left, top };\n\n        return targets.map((target, i) => {\n            return <MoveableManager\n                key={\"moveable\" + i}\n                ref={refs(moveable, \"moveables\", i)}\n                target={target}\n                origin={false}\n                cssStyled={moveable.props.cssStyled}\n                customStyledMap={moveable.props.customStyledMap}\n                parentMoveable={moveable}\n                parentPosition={position}\n            />;\n        });\n    },\n};\n","import {\n    MoveableManagerInterface, MoveableGroupInterface,\n    ClickableProps, OnClick, OnClickGroup\n} from \"../types\";\nimport { triggerEvent, fillParams } from \"../utils\";\nimport { findIndex } from \"@daybrush/utils\";\n\nexport default {\n    name: \"clickable\",\n    props: {} as const,\n    events: {\n        onClick: \"click\",\n        onClickGroup: \"clickGroup\",\n    } as const,\n    always: true,\n    dragStart() {},\n    dragGroupStart(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        e.datas.inputTarget = e.inputEvent && e.inputEvent.target;\n    },\n    dragEnd(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        const target = moveable.state.target!;\n        const inputEvent = e.inputEvent;\n        const inputTarget = e.inputTarget;\n\n        if (\n            !inputEvent || !inputTarget || e.isDrag\n            || moveable.isMoveableElement(inputTarget)\n            // External event duplicate target or dragAreaElement\n        ) {\n            return;\n        }\n        const containsTarget = target.contains(inputTarget);\n\n        triggerEvent<ClickableProps>(moveable, \"onClick\", fillParams<OnClick>(moveable, e, {\n            isDouble: e.isDouble,\n            inputTarget,\n            isTarget: target === inputTarget,\n            containsTarget,\n        }));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<ClickableProps>, e: any) {\n        const inputEvent = e.inputEvent;\n        const inputTarget = e.inputTarget;\n\n        if (\n            !inputEvent || !inputTarget || e.isDrag\n            || moveable.isMoveableElement(inputTarget)\n            // External event duplicate target or dragAreaElement\n            || e.datas.inputTarget === inputTarget\n        ) {\n            return;\n        }\n        const targets = moveable.props.targets!;\n        let targetIndex = targets.indexOf(inputTarget);\n        const isTarget = targetIndex > -1;\n        let containsTarget = false;\n\n        if (targetIndex === -1) {\n            targetIndex = findIndex(targets, parentTarget => parentTarget.contains(inputTarget));\n            containsTarget = targetIndex > -1;\n        }\n\n        triggerEvent<ClickableProps>(moveable, \"onClickGroup\", fillParams<OnClickGroup>(moveable, e, {\n            isDouble: e.isDouble,\n            targets,\n            inputTarget,\n            targetIndex,\n            isTarget,\n            containsTarget,\n        }));\n    },\n} as const;\n\n/**\n * When you click on the element, the `click` event is called.\n * @memberof Moveable\n * @event click\n * @param {Moveable.OnClick} - Parameters for the `click` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"click\", ({ hasTarget, containsTarget, targetIndex }) => {\n *     // If you click on an element other than the target and not included in the target, index is -1.\n *     console.log(\"onClickGroup\", target, hasTarget, containsTarget, targetIndex);\n * });\n */\n\n/**\n * When you click on the element inside the group, the `clickGroup` event is called.\n * @memberof Moveable\n * @event clickGroup\n * @param {Moveable.OnClickGroup} - Parameters for the `clickGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"clickGroup\", ({ inputTarget, isTarget, containsTarget, targetIndex }) => {\n *     // If you click on an element other than the target and not included in the target, index is -1.\n *     console.log(\"onClickGroup\", inputTarget, isTarget, containsTarget, targetIndex);\n * });\n */\n","import { hasClass } from \"@daybrush/utils\";\nimport { DraggableProps, MoveableGroupInterface, MoveableManagerInterface } from \"../types\";\nimport { prefix } from \"../utils\";\nimport Draggable from \"./Draggable\";\n\nfunction getDraggableEvent(e: any) {\n    let datas = e.originalDatas.draggable;\n    if (!datas) {\n        e.originalDatas.draggable = {};\n        datas = e.originalDatas.draggable;\n    }\n    return { ...e, datas };\n}\nexport default {\n    name: \"edgeDraggable\",\n    props: {\n        edgeDraggable: Boolean,\n    } as const,\n    events: {} as const,\n    dragControlCondition(e: any, moveable: MoveableManagerInterface<DraggableProps>) {\n        if (!moveable.props.edgeDraggable || !e.inputEvent) {\n            return false;\n        }\n        const target = e.inputEvent.target;\n        return hasClass(target, prefix(\"direction\")) && hasClass(target, prefix(\"line\"));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<DraggableProps>, e: any) {\n        return Draggable.dragStart(moveable, getDraggableEvent(e));\n    },\n    dragControl(moveable: MoveableManagerInterface<DraggableProps>, e: any) {\n        return Draggable.drag(moveable, getDraggableEvent(e));\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<DraggableProps, any>, e: any) {\n        return Draggable.dragEnd(moveable, getDraggableEvent(e));\n    },\n    dragGroupControlCondition(e: any, moveable: MoveableGroupInterface<DraggableProps>) {\n        if (!moveable.props.edgeDraggable || !e.inputEvent) {\n            return false;\n        }\n        const target = e.inputEvent.target;\n        return hasClass(target, prefix(\"direction\")) && hasClass(target, prefix(\"line\"));\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<DraggableProps>, e: any) {\n        return Draggable.dragGroupStart(moveable, getDraggableEvent(e));\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<DraggableProps>, e: any) {\n        return Draggable.dragGroup(moveable, getDraggableEvent(e));\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<DraggableProps, any>, e: any) {\n        return Draggable.dragGroupEnd(moveable, getDraggableEvent(e));\n    },\n    unset(moveable: any) {\n        moveable.state.dragInfo = null;\n    },\n} as const;\n\n/**\n * Whether to move by dragging the edge line (default: false)\n * @name Moveable.Draggable#edgeDraggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  draggable: true,\n *  edgeDraggable: false,\n * });\n *\n * moveable.edgeDraggable = true;\n */\n","export default {\n    name: \"individualGroupable\",\n    props: {\n        individualGroupable: Boolean,\n    } as const,\n    events: {} as const,\n} as const;\n","import Pinchable from \"./Pinchable\";\nimport Rotatable from \"./Rotatable\";\nimport Draggable from \"./Draggable\";\nimport Resizable from \"./Resizable\";\nimport Scalable from \"./Scalable\";\nimport Warpable from \"./Warpable\";\nimport Snappable from \"./Snappable\";\nimport DragArea from \"./DragArea\";\nimport Origin from \"./Origin\";\nimport Scrollable from \"./Scrollable\";\nimport Default from \"./Default\";\nimport Padding from \"./Padding\";\nimport Clippable from \"./Clippable\";\nimport OriginDraggable from \"./OriginDraggable\";\nimport Roundable from \"./Roundable\";\nimport { UnionToIntersection } from \"../types\";\nimport { invertObject } from \"../utils\";\nimport Groupable from \"./Groupable\";\nimport BeforeRenderable from \"./BeforeRenderable\";\nimport Renderable from \"./Renderable\";\nimport Clickable from \"./Clickable\";\nimport edgeDraggable from \"./edgeDraggable\";\nimport IndividualGroupable from \"./IndividualGroupable\";\n\nexport const MOVEABLE_ABLES = /*#__PURE__*/[\n    BeforeRenderable,\n    Default, Snappable, Pinchable, Draggable, edgeDraggable, Rotatable,\n    Resizable, Scalable, Warpable, Scrollable, Padding, Origin,\n    OriginDraggable,\n    Clippable, Roundable, Groupable, IndividualGroupable,\n    Clickable,\n    DragArea,\n    Renderable,\n] as const;\n\nexport const MOVEABLE_EVENTS_PROPS_MAP = /*#__PURE__*/MOVEABLE_ABLES.reduce((current, able) => {\n    return {...current, ...able.events};\n}, {}) as UnionToIntersection<typeof MOVEABLE_ABLES[number][\"events\"]>;\nexport const MOVEABLE_PROPS_MAP = /*#__PURE__*/MOVEABLE_ABLES.reduce((current, able) => {\n    return {...current, ...able.props};\n}, {}) as UnionToIntersection<typeof MOVEABLE_ABLES[number][\"props\"]>;\n\nexport const MOVEABLE_EVENTS_MAP = /*#__PURE__*/invertObject(MOVEABLE_EVENTS_PROPS_MAP);\nexport const MOVEABLE_EVENTS: string[] = /*#__PURE__*/Object.keys(MOVEABLE_EVENTS_MAP);\nexport const MOVEABLE_PROPS: string[] = /*#__PURE__*/Object.keys(MOVEABLE_PROPS_MAP);\n","import MoveableManager from \"./MoveableManager\";\nimport { GroupableProps, MoveableManagerProps, RectInfo } from \"./types\";\nimport ChildrenDiffer from \"@egjs/children-differ\";\nimport { getAbleGesto, getTargetAbleGesto } from \"./gesto/getAbleGesto\";\nimport Groupable from \"./ables/Groupable\";\nimport { MIN_NUM, MAX_NUM, TINY_NUM } from \"./consts\";\nimport { getTargetInfo, throttle, getAbsolutePosesByState, equals, unset } from \"./utils\";\nimport { minus, plus, rotate } from \"@scena/matrix\";\nimport { getMinMaxs } from \"overlap-area\";\n\nfunction getMaxPos(poses: number[][][], index: number) {\n    return Math.max(...poses.map(([pos1, pos2, pos3, pos4]) => {\n        return Math.max(pos1[index], pos2[index], pos3[index], pos4[index]);\n    }));\n}\nfunction getMinPos(poses: number[][][], index: number) {\n    return Math.min(...poses.map(([pos1, pos2, pos3, pos4]) => {\n        return Math.min(pos1[index], pos2[index], pos3[index], pos4[index]);\n    }));\n}\nfunction getGroupRect(moveables: MoveableManager[], rotation: number) {\n    if (!moveables.length) {\n        return [0, 0, 0, 0];\n    }\n\n    const moveablePoses = moveables.map(({ state }) => getAbsolutePosesByState(state));\n    let minX = MAX_NUM;\n    let minY = MAX_NUM;\n    let groupWidth = 0;\n    let groupHeight = 0;\n    const fixedRotation = throttle(rotation, TINY_NUM);\n\n    if (fixedRotation % 90) {\n        const rad = fixedRotation / 180 * Math.PI;\n        const a1 = Math.tan(rad);\n        const a2 = -1 / a1;\n        const b1MinMax = [MIN_NUM, MAX_NUM];\n        const b2MinMax = [MIN_NUM, MAX_NUM];\n\n        moveablePoses.forEach(poses => {\n            poses.forEach(pos => {\n                // ax + b = y\n                // b = y - ax\n                const b1 = pos[1] - a1 * pos[0];\n                const b2 = pos[1] - a2 * pos[0];\n\n                b1MinMax[0] = Math.max(b1MinMax[0], b1);\n                b1MinMax[1] = Math.min(b1MinMax[1], b1);\n                b2MinMax[0] = Math.max(b2MinMax[0], b2);\n                b2MinMax[1] = Math.min(b2MinMax[1], b2);\n            });\n        });\n\n        b1MinMax.forEach(b1 => {\n            // a1x + b1 = a2x + b2\n            b2MinMax.forEach(b2 => {\n                // (a1 - a2)x = b2 - b1\n                const x = (b2 - b1) / (a1 - a2);\n                const y = a1 * x + b1;\n\n                minX = Math.min(minX, x);\n                minY = Math.min(minY, y);\n            });\n        });\n        const rotatePoses = moveablePoses.map(([pos1, pos2, pos3, pos4]) => {\n            return [\n                rotate(pos1, -rad),\n                rotate(pos2, -rad),\n                rotate(pos3, -rad),\n                rotate(pos4, -rad),\n            ];\n        });\n\n        groupWidth = getMaxPos(rotatePoses, 0) - getMinPos(rotatePoses, 0);\n        groupHeight = getMaxPos(rotatePoses, 1) - getMinPos(rotatePoses, 1);\n    } else {\n        minX = getMinPos(moveablePoses, 0);\n        minY = getMinPos(moveablePoses, 1);\n        groupWidth = getMaxPos(moveablePoses, 0) - minX;\n        groupHeight = getMaxPos(moveablePoses, 1) - minY;\n\n        if (fixedRotation % 180) {\n            const changedWidth = groupWidth;\n\n            groupWidth = groupHeight;\n            groupHeight = changedWidth;\n        }\n    }\n    return [minX, minY, groupWidth, groupHeight];\n}\n/**\n * @namespace Moveable.Group\n * @description You can make targets moveable.\n */\nclass MoveableGroup extends MoveableManager<GroupableProps> {\n    public static defaultProps = {\n        ...MoveableManager.defaultProps,\n        transformOrigin: [\"50%\", \"50%\"],\n        groupable: true,\n        dragArea: true,\n        keepRatio: true,\n        targets: [],\n        defaultGroupRotate: 0,\n        defaultGroupOrigin: \"50% 50%\",\n    };\n    public differ: ChildrenDiffer<HTMLElement | SVGElement> = new ChildrenDiffer();\n    public moveables: MoveableManager[] = [];\n    public transformOrigin = \"50% 50%\";\n\n    public updateEvent(prevProps: MoveableManagerProps<GroupableProps>) {\n        const state = this.state;\n        const props = this.props;\n\n        const prevTarget = prevProps.dragTarget || state.target;\n        const nextTarget = props.dragTarget || this.areaElement;\n\n        if (prevTarget !== nextTarget) {\n            unset(this, \"targetGesto\");\n            unset(this, \"controlGesto\");\n            state.target = null;\n        }\n\n        if (!state.target) {\n            state.target = this.areaElement;\n\n            this.controlBox.getElement().style.display = \"block\";\n            this.targetGesto = getTargetAbleGesto(this, nextTarget, \"Group\");\n            this.controlGesto = getAbleGesto(this, this.controlBox.getElement(), \"controlAbles\", \"GroupControl\");\n        }\n        const isContainerChanged = !equals(prevProps.container, props.container);\n\n        if (isContainerChanged) {\n            state.container = props.container;\n        }\n        const { added, changed, removed } = this.differ.update(props.targets!);\n\n        if (isContainerChanged || added.length || changed.length || removed.length) {\n            this.updateRect();\n        }\n    }\n    public checkUpdate() {\n        this.updateAbles();\n    }\n\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState: boolean = true) {\n        if (!this.controlBox) {\n            return;\n        }\n        this.moveables.forEach(moveable => {\n            moveable.updateRect(type, false, false);\n        });\n\n        const state = this.state;\n        const props = this.props;\n        const target = state.target! || props.target!;\n\n        if (!isTarget || (type !== \"\" && props.updateGroup)) {\n            // reset rotataion\n            this.rotation = props.defaultGroupRotate!;\n            this.transformOrigin = props.defaultGroupOrigin || \"50% 50%\";\n            this.scale = [1, 1];\n\n        }\n        const rotation = this.rotation;\n        const scale = this.scale;\n        const [left, top, width, height] = getGroupRect(this.moveables, rotation);\n\n        // tslint:disable-next-line: max-line-length\n        const transform = `rotate(${rotation}deg) scale(${scale[0] >= 0 ? 1 : -1}, ${scale[1] >= 0 ? 1 : -1})`;\n        target.style.cssText += `left:0px;top:0px; transform-origin: ${this.transformOrigin}; width:${width}px; height:${height}px;`\n            + `transform:${transform}`;\n        state.width = width;\n        state.height = height;\n\n        const container = this.getContainer();\n        const info = getTargetInfo(\n            this.controlBox.getElement(),\n            target,\n            this.controlBox.getElement(),\n            this.getContainer(),\n            this.props.rootContainer || container,\n            // state,\n        );\n        const pos = [info.left!, info.top!];\n        const [\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n        ] = getAbsolutePosesByState(info); // info.left + info.pos(1 ~ 4)\n\n        const minPos = getMinMaxs([pos1, pos2, pos3, pos4]);\n        const delta = [minPos.minX, minPos.minY];\n        info.pos1 = minus(pos1, delta);\n        info.pos2 = minus(pos2, delta);\n        info.pos3 = minus(pos3, delta);\n        info.pos4 = minus(pos4, delta);\n        info.left = left - info.left! + delta[0];\n        info.top = top - info.top! + delta[1];\n        info.origin = minus(plus(pos, info.origin!), delta);\n        info.beforeOrigin = minus(plus(pos, info.beforeOrigin!), delta);\n        info.originalBeforeOrigin = plus(pos, info.originalBeforeOrigin!);\n        // info.transformOrigin = minus(plus(pos, info.transformOrigin!), delta);\n\n        const clientRect = info.targetClientRect!;\n        const direction = scale[0] * scale[1] > 0 ? 1 : -1;\n\n        clientRect.top += info.top - state.top;\n        clientRect.left += info.left - state.left;\n\n        target.style.transform = `translate(${-delta[0]}px, ${-delta[1]}px) ${transform}`;\n\n        this.updateState(\n            {\n                ...info,\n                direction,\n                beforeDirection: direction,\n            },\n            isSetState,\n        );\n    }\n    public getRect(): RectInfo {\n        return {\n            ...super.getRect(),\n            children: this.moveables.map(child => child.getRect()),\n        };\n    }\n    public triggerEvent(name: string, e: any, isManager?: boolean): any {\n        if (isManager || name.indexOf(\"Group\") > -1) {\n            return super.triggerEvent(name as any, e);\n        }\n    }\n    protected updateAbles() {\n        super.updateAbles([...this.props.ables!, Groupable], \"Group\");\n    }\n}\n\n/**\n * Sets the initial rotation of the group. (default 0)\n * @name Moveable.Group#defaultGroupRotate\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   defaultGroupRotate: 0,\n * });\n *\n * moveable.defaultGroupRotate = 40;\n */\n\n/**\n * Sets the initial origin of the group. (default 0)\n * @name Moveable.Group#defaultGroupOrigin\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   defaultGroupOrigin: \"50% 50%\",\n * });\n *\n * moveable.defaultGroupOrigin = \"20% 40%\";\n */\nexport default MoveableGroup;\n","import { ref, refs } from \"framework-utils\";\nimport * as React from \"react\";\nimport MoveableManager from \"./MoveableManager\";\nimport { GroupableProps, RectInfo } from \"./types\";\nimport { prefix } from \"./utils\";\n\n/**\n * @namespace Moveable.IndividualGroup\n * @description Create targets individually, not as a group.Create targets individually, not as a group.\n */\nclass MoveableIndividualGroup extends MoveableManager<GroupableProps> {\n    public moveables: MoveableManager[] = [];\n    public render() {\n        const {\n            cspNonce,\n            cssStyled: ControlBoxElement,\n            targets,\n        } = this.props;\n\n        return <ControlBoxElement\n            cspNonce={cspNonce}\n            ref={ref(this, \"controlBox\")}\n            className={prefix(\"control-box\")}>\n            {targets!.map((target, i) => {\n                return <MoveableManager\n                    key={\"moveable\" + i}\n                    ref={refs(this, \"moveables\", i)}\n                    {...this.props}\n                    target={target}\n                    wrapperMoveable={this}\n                />;\n            })}\n        </ControlBoxElement>\n    }\n    // public componentDidMount() {\n    //     console.log(this.controlBox.getElement().parentElement);\n    //     this.controlBox.getElement();\n    // }\n    public componentDidUpdate() { }\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState: boolean = true) {\n        this.moveables.forEach(moveable => {\n            moveable.updateRect(type, isTarget, isSetState);\n        });\n    }\n    public getRect(): RectInfo {\n        return {\n            ...super.getRect(),\n            children: this.moveables.map(child => child.getRect()),\n        };\n    }\n    public request() {\n        return {\n            request() {\n                return this;\n            },\n            requestEnd() {\n                return this;\n            },\n        };\n    }\n    public dragStart() {\n        return this;\n    }\n    public hitTest() {\n        return 0;\n    }\n    public isInside() {\n        return false;\n    }\n    public isDragging() {\n        return false;\n    }\n    public updateRenderPoses() { }\n    public updateEvent() { }\n    public checkUpdate() { }\n    public triggerEvent() { }\n    protected updateAbles() { }\n}\n\n/**\n * Create targets individually, not as a group.\n * @name Moveable.IndividualGroup#individualGroupable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   individualGroupable: true,\n * });\n */\nexport default MoveableIndividualGroup;\n","import * as React from \"react\";\nimport {\n    Able, MoveableInterface, GroupableProps, MoveableDefaultProps,\n    IndividualGroupableProps, MoveableManagerInterface\n} from \"./types\";\nimport MoveableManager from \"./MoveableManager\";\nimport MoveableGroup from \"./MoveableGroup\";\nimport { ref, withMethods, prefixCSS } from \"framework-utils\";\nimport { getKeys, IObject, isString } from \"@daybrush/utils\";\nimport { MOVEABLE_METHODS, PREFIX, MOVEABLE_CSS } from \"./consts\";\nimport Default from \"./ables/Default\";\nimport Groupable from \"./ables/Groupable\";\nimport DragArea from \"./ables/DragArea\";\nimport styled from \"react-css-styled\";\nimport { getRefTargets, getElementTargets } from \"./utils\";\nimport IndividualGroupable from \"./ables/IndividualGroupable\";\nimport MoveableIndividualGroup from \"./MoveableIndividualGroup\";\n\n\nexport class InitialMoveable<T = {}>\n    extends React.PureComponent<MoveableDefaultProps & GroupableProps & IndividualGroupableProps & T> {\n    public static defaultAbles: Able[] = [];\n    public static customStyledMap: Record<string, any> = {};\n    public static defaultStyled: any = null;\n    public static makeStyled() {\n        const cssMap: IObject<boolean> = {};\n\n        const ables = this.getTotalAbles();\n        ables.forEach(({ css }: Able) => {\n            if (!css) {\n                return;\n            }\n            css.forEach(text => {\n                cssMap[text] = true;\n            });\n        });\n        const style = getKeys(cssMap).join(\"\\n\");\n\n        this.defaultStyled = styled(\"div\", prefixCSS(PREFIX, MOVEABLE_CSS + style));\n    }\n    public static getTotalAbles(): Able[] {\n\n        return [Default, Groupable, IndividualGroupable, DragArea, ...this.defaultAbles];\n    }\n    @withMethods(MOVEABLE_METHODS)\n    public moveable!: MoveableManager | MoveableGroup;\n    public refTargets: Array<HTMLElement | SVGElement | string | undefined | null> = [];\n    public selectorMap: IObject<Array<HTMLElement | SVGElement>> = {};\n    public render() {\n        const moveableContructor = (this.constructor as typeof InitialMoveable);\n\n        if (!moveableContructor.defaultStyled) {\n            moveableContructor.makeStyled();\n        }\n        const {\n            ables: userAbles,\n            props: userProps,\n            ...props\n        } = this.props;\n        const refTargets = getRefTargets((props.target || props.targets) as any);\n        const elementTargets = getElementTargets(refTargets, this.selectorMap);\n\n        this.refTargets = refTargets;\n\n        const isGroup = elementTargets.length > 1;\n        const totalAbles = moveableContructor.getTotalAbles();\n        const ables = [\n            ...totalAbles,\n            ...(userAbles as any || []),\n        ];\n        const nextProps = {\n            ...props,\n            ...(userProps || {}),\n            ables,\n            cssStyled: moveableContructor.defaultStyled,\n            customStyledMap: moveableContructor.customStyledMap,\n        };\n\n        if (isGroup) {\n            if (props.individualGroupable) {\n                return <MoveableIndividualGroup key=\"individual-group\" ref={ref(this, \"moveable\")}\n                    {...nextProps}\n                    target={null}\n                    targets={elementTargets} />;\n            }\n            return <MoveableGroup key=\"group\" ref={ref(this, \"moveable\")}\n                {...nextProps}\n                target={null}\n                targets={elementTargets}  />;\n        } else {\n            return <MoveableManager<any> key=\"single\" ref={ref(this, \"moveable\")}\n                {...nextProps}\n                target={elementTargets[0]} />;\n        }\n    }\n    public componentDidMount() {\n        this.updateRefs();\n    }\n    public componentDidUpdate() {\n        this.updateRefs();\n    }\n    public updateRefs(isReset?: boolean) {\n        const refTargets = getRefTargets((this.props.target || this.props.targets) as any);\n        let isUpdate = this.refTargets.some((target, i) => {\n            const nextTarget = refTargets[i];\n\n            if (!target && !nextTarget) {\n                return false;\n            } else if (target !== nextTarget) {\n                return true;\n            }\n            return false;\n        });\n        const selectorMap = isReset ? {} : this.selectorMap;\n        const nextSelectorMap: IObject<Array<HTMLElement | SVGElement>> = {};\n        this.refTargets.forEach(target => {\n            if (isString(target)) {\n                if (!selectorMap[target]) {\n                    isUpdate = true;\n                    nextSelectorMap[target] = [].slice.call(document.querySelectorAll(target));\n                } else {\n                    nextSelectorMap[target] = selectorMap[target];\n                }\n            }\n        });\n\n        this.selectorMap = nextSelectorMap;\n\n        if (isUpdate) {\n            this.forceUpdate();\n        }\n    }\n    public getManager(): MoveableManagerInterface<any, any> {\n        return this.moveable;\n    }\n}\nexport interface InitialMoveable<T = {}>\n    extends React.PureComponent<MoveableDefaultProps & GroupableProps & IndividualGroupableProps & T>, MoveableInterface {\n    setState(state: any, callback?: () => any): any;\n}\n","import { MoveableProps, Able } from \"./types\";\nimport { MOVEABLE_ABLES } from \"./ables/consts\";\nimport { InitialMoveable } from \"./InitialMoveable\";\n\nexport default class Moveable<T = {}> extends InitialMoveable<MoveableProps & T> {\n    public static defaultAbles: Able[] = MOVEABLE_ABLES as any;\n}\n","import { Able } from \"./types\";\nimport { InitialMoveable } from \"./InitialMoveable\";\n\nexport function makeMoveable<T = {}>(\n    ables: Array<Able<T>>): typeof InitialMoveable & (new (...args: any[]) => InitialMoveable<T>) {\n    return class Moveable extends InitialMoveable<T> {\n        public static defaultAbles = ables;\n    };\n}\n","import Moveable, * as others from \"./index.esm\";\n\nfor (const name in others) {\n    (Moveable as any)[name] = (others as any)[name];\n}\nexport default Moveable;\n"],"names":["getSVGCursor","scale","degree","getCursorCSS","x1","x2","degree45","Math","round","defaultCursor","agent","getAgent","IS_WEBKIT","browser","webkit","IS_WEBKIT605","res","exec","navigator","userAgent","toLowerCase","parseFloat","PREFIX","MOVEABLE_CSS","map","join","NEARBY_POS","TINY_NUM","MIN_SCALE","MAX_NUM","pow","MIN_NUM","DIRECTIONS","DIRECTION_INDEXES","n","s","w","e","nw","ne","sw","se","DIRECTION_ROTATIONS","MOVEABLE_METHODS","multiply2","pos1","pos2","prefix","_i","classNames","prefixNames","getTransformMatrix","transform","isObject","value","splitBracket","split","v","getAbsoluteMatrix","matrix","origin","multiplies","createOriginMatrix","a","measureSVGSize","el","unit","isHorizontal","viewBox","getSVGViewBox","ownerSVGElement","getBeforeTransformOrigin","relativeOrigin","getTransformOrigin","getComputedStyle","o","i","_a","splitUnit","style","transformOrigin","getOffsetInfo","lastParent","isParent","body","document","target","parentElement","isEnd","position","isStatic","offsetParent","getOffsetPosInfo","container","isFixed","tagName","offsetLeft","offsetTop","containerClientRect","documentElement","getBoundingClientRect","left","top","isSVG","isUndefined","hasOffset","targetOrigin","pos","slice","getSVGGraphicsOffset","offset","getBodyOffset","window","bodyStyle","bodyPosition","marginLeft","parseInt","marginTop","bottom","right","getMatrixStackInfo","matrixes","is3d","targetTransformOrigin","targetMatrix","offsetContainer","convertCSStoMatrix","length","matrixesLength","convertDimension","offsetPos","push","getSVGMatrix","createIdentityMatrix","_b","isOffsetEnd","parentClientLeft","parentClientTop","clientLeft","clientTop","margin","scrollLeft","scrollTop","calculateElementInfo","rootContainer","isAbsolute3d","width","height","rotation","allResult","offsetWidth","offsetHeight","getSize","result","calculateMatrixStack","calculateMoveablePosition","allMatrix","rotationPosition","getRotationRad","direction","rootMatrix","beforeMatrix","offsetMatrix","targetTransform","pos3","pos4","getElementInfo","prevTargetMatrix","rootMatrixes","isRoot3d","isNext3d","isSVGGraphicElement","originalContainer","endContainer","reverse","forEach","multiply","getSVGOffset","isMatrix3d","makeMatrixCSS","ignoreDimension","convertMatrixtoCSS","x","y","clientWidth","clientHeight","baseVal","viewBoxWidth","viewBoxHeight","scaleX","scaleY","preserveAspectRatio","align","meetOrSlice","svgOrigin","translate","xAlign","yAlign","floor","scaleDimension","max","min","scaleMatrix","createScaleMatrix","getBBox","bbox","calculatePosition","calculate","convertPositionMatrix","calculatePoses","getRect","poses","posesX","posesY","rectWidth","rectHeight","calculateRect","absoluteMatrix","undefined","rect","rectLeft","rectTop","mat","_c","prevLeft","prevTop","prevWidth","prevHeight","posOrigin","prevOrigin","minus","rectOrigin","count","inverseBeforeMatrix","invert","mat2","_d","nextLeft","nextTop","distLeft","distTop","abs","p","y1","y2","x3","y3","x4","y4","_e","originX","originY","getShapeDirection","getDistSize","vec","sqrt","getDiagonalSize","getLineStyle","zoom","rad","getRad","getControlTransform","reduce","prev","getCSSSize","isOffset","isBoxSizing","boxSizing","borderLeft","borderLeftWidth","borderRight","borderRightWidth","borderTop","borderTopWidth","borderBottom","borderBottomWidth","paddingLeft","paddingRight","paddingTop","paddingBottom","getTargetInfo","moveableElement","parentContainer","beforeDirection","beforeOrigin","targetClientRect","resetClientRect","moveableClientRect","beforePosition","plus","getOrigin","getClientRect","originalBeforeOrigin","scrollWidth","scrollHeight","isExtends","overflow","getDirection","direciton","getAttribute","dir","indexOf","getAbsolutePoses","dist","getAbsolutePosesByState","roundSign","num","throttle","throttleArray","nums","_","unset","self","name","fillParams","moveable","params","datas","nextParams","__assign","state","clientX","clientY","inputEvent","currentTarget","isStartEvent","lastEvent","fillEndParams","isDrag","isDouble","triggerEvent","isManager","pseudoElt","filterAbles","ables","methods","triggerAblesSimultaneously","enabledAbles","ableGroups","filter","able","some","method","ableGroup","equals","a1","a2","selectValue","values","groupBy","arr","func","groups","groupKeys","index","groupKey","keyIndex","group","groupByMap","flat","cur","concat","maxOffset","args","sort","b","minOffset","calculateInversePosition","convertDragDist","distX","distY","calculatePadding","convertCSSSize","size","isRelative","moveControlPos","controlPoses","isRect","sub","dists","directions","verticalDirection_1","horizontalDirection_1","controlPose","controlDir","isVertical","dirDir","dirHorizontal","dirVertical","getTinyDist","directionCondition","isRequest","requestAble","parentDirection","hasClass","invertObject","obj","nextObj","getTransform","transforms","beforeFunctionTexts","targetFunctionText","afterFunctionTexts","beforeFunctions","parse","targetFunctions","afterFunctions","beforeFunctionMatrix","toMat","afterFunctionMatrix","allFunctionMatrix","targetFunctionMatrix","targetFunction","isArrayFormat","isArray","getRefTarget","isSelector","isString","querySelector","isFunction","current","getRefTargets","targets","userTargets","call","getElementTargets","selectorMap","elementTargets","getAbsoluteRotation","deg","PI","updateRect","props","pinchable","Boolean","events","onPinchStart","onPinch","onPinchEnd","onPinchGroupStart","onPinchGroup","onPinchGroupEnd","dragStart","pinchStart","angle","originalDatas","eventName","controlEventName","pinchAbles","controlAbles","canPinch","isPinch","ableEvent","parentRotate","snapRenderInfo","request","pinch","pinchScale","distance","parentDistance","pinchEnd","pinchGroupStart","pinchGroup","pinchGroupEnd","setCustomDrag","delta","isConvert","gesto","move","draggableDatas","draggable","parentEvent","client","isFlag","type","prevX","prevY","startX","startY","deltaX","deltaY","parentGesto","fillChildEvents","groupable","groupableDatas","childDatas","moveables","triggerChildGesto","isStart","match","childs","ev","childMoveable","childEvent","CustomGesto","childGestos","parentFlag","child","triggerChildAble","eachEvent","callback","calculatePointerDist","posX","posY","getDragDist","setDragStart","inverseMatrix","absoluteOrigin","startDragBeforeDist","startDragDist","getTransformDirection","beforeTransform","resolveTransformEvent","event","functionName","transformIndex","nextTransforms","nextTransformAppendedIndexes","nextIndex","matFunctionName","targetTansform","afterTransform","targetAllTransform","splice","isAppendTransform","convertTransformFormat","getTransformDist","getBeforeDragDist","bx","by","getTransfromMatrix","fromTranslation","isAfter","nextTargetMatrix","res1","afterTargetMatrix","isBefore","getInverseDragDist","calculateTransformOrigin","prevSize","isNaN","measureRatio","getPosIndexesByDirection","indexes","getPosesByDirection","getPosByDirection","nextPoses","average","getPosByReverseDirection","getDist","startPos","fixedDirection","fixedPos","getNextMatrix","getNextTransformMatrix","parseMat","fillTransformStartEvent","beforeRenderable","setTransform","startTransforms","splitSpace","setTransformIndex","setDefaultTransformIndex","info","startValue","functionValue","fillOriginalTransform","fillTransformEvent","nextTransform","drag","Draggable","getTranslateDist","fixedPosition","nextMatrix","groupLeft","groupTop","nextFixedPosition","getDirectionOffset","getScaleDist","scaleDist","getOriginDirection","nextFixedOffset","getRotateDist","rotateDist","getResizeDist","nextOrigin","getAbsolutePosition","calculateContainerPos","containerRect","clientPos","getGapGuidelines","guidelines","snapThreshold","start","end","otherStart","otherEnd","totalGuidelines","otherIndex","otherType","elementGuidelines","guidelineType","element","sizes","guideline1","elementStart","elementEnd","guideline2Pos","guideline2Sizes","guideline2Element","targetStart","targetEnd","gap","canSnap","gapGuidelines","centerPos","addGuidelines","horizontalGuidelines","verticalGuidelines","getElementGuidelines","isRefresh","snapCenter","containerLeft","containerTop","getMinMaxs","targetLeft","targetTop","_f","refresh","topValue","leftValue","rightValue","bottomValue","elementLeft","elementTop","elementRight","elementBottom","center","getTotalGuidelines","staticGuidelines","containerHeight","containerWidth","containerClientHeight","containerClientWidth","snapHorizontal","snapVertical","snapGap","_g","checkMoveableSnapPoses","customSnapThreshold","snapElement","checkSnapPoses","options","vertical","checkSnap","horizontal","checkSnapKeepRatio","endPos","endX","endY","dx","dy","isBottom","isRight","verticalInfo","isSnap","horizontalInfo","verticalSnapInfo","horizontalSnapInfo","posInfos","getNearestSnapGuidelineInfo","isVerticalSnap","verticalGuideline","isHorizontalSnap","horizontalGuideline","horizontalPos","verticalPos","checkSnaps","isCenter","isSnapCenter","verticalNames","horizontalNames","snapInfo","guideline","posInfo","guidelineInfo","guidelineInfos","targetType","targetPoses","posType","snapPosInfos","targetPos","snapPosInfo","getSnapInfosByDirection","snapDirection","alignPoses","keepRatio","checkSnapBoundPriority","aDist","bDist","isBound","getNearOffsetInfo","offsets","aSign","sign","bSign","aOffset","bOffset","isStartLine","dot","line","cx","cy","hitTestLine","test1","test2","isSameStartLine","dots","error","centerSign","every","checkInnerBoundDot","threshold","checkInnerBound","bounds","innerBounds","isAllBound","isVerticalBound","isHorizontalBound","leftLine","topLine","rightLine","bottomLine","isHorizontalStart","isVerticalStart","topBoundInfo","checkLineBoundCollision","bottomBoundInfo","leftBoundInfo","rightBoundInfo","isAllVerticalBound","isAllHorizontalBound","verticalOffset","horizontalOffset","boundLine","isRender","dot1","dot2","boundDot1","boundDot2","dy1","dx1","dy2","dx2","getInnerBoundInfo","lines","multiple","sizeOffset","getInnerBoundDragInfo","getCheckSnapLines","innerBoundInfo","widthOffsetInfo","heightOffsetInfo","getCheckSnapLineDirections","lineDirections","dir1","dir2","isBoundRotate","relativePoses","boundDots","rotate","getDistPointLine","solveReverseLine","checkRotateInnerBounds","prevPoses","relativeLeft","relativeRight","relativeTop","relativeBottom","dotInfos","lineRad","lineDist","dotDist","dotRad","distRad","acos","nextRad1","nextRad2","nextRad","checkInnerBoundPoses","horizontalPoses","verticalPoses","boundMap","checkBoundPoses","Infinity","nextBounds","checkBounds","checkBoundKeepRatio","startBoundPos","endBoundPos","minPos","maxPos","boundInfos","boundRect","boundRotate","boundPos","r","nextPos","checkRotateBounds","relativeRad1","relativeRad2","HORIZONTAL_NAMES","VERTICAL_NAMES","snapStart","enableSnap","hasGuidelines","ableName","snappable","solveNextOffset","solveEquation","widthOffset","heightOffset","getNextFixedPoses","getSnapBoundOffset","boundInfo","getSnapBound","checkSnapBoundsKeepRatio","horizontalBoundInfo","verticalBoundInfo","horizontalDist","verticalDist","checkMoveableSnapBounds","boundPoses","horizontalBoundInfos","verticalBoundInfos","snapIndex","snap","checkSnapBounds","guideines","normalized","checkMaxBounds","maxWidth","maxHeight","left_1","top_1","right_1","bottom_1","otherDirection","isCheckVertical","isCheckHorizontal","otherPos","verticalDirection","horizontalDirection","nextOtherPos","checkSnapRightLine","snapBoundInfo","rad180","isHorizontalLine","isVerticalLine","getSnapBoundInfo","startDirection","endDirection","otherStartPos","otherEndPos","otherHorizontalOffset","isOtherHorizontalBound","isOtherHorizontalSnap","otherVerticalOffset","isOtherVerticalBound","isOtherVerticalSnap","snapLine","getCheckSnapDirections","getSizeOffsetInfo","recheckSizeByTwoDirection","snapPos","nextWidthOffset","nextHeightOffset","nextWidth","nextHeight","checkSizeDist","getNextPoses","isWidthBound","isHeightBound","widthDist","heightDist","isGetWidthOffset","checkSnapRotate","checkSnapSize","checkSnapScale","sizeDist","snapOffset","startCheckSnapDrag","absolutePoses","checkThrottleDragRotate","throttleDragRotate","offsetX","offsetY","adjustPoses","adjustPos","prevDistY","checkSnapDrag","snapPoses","verticalSnapBoundInfo","horizontalSnapBoundInfo","verticalInnerBoundInfo","horizontalInnerBoundInfo","getSnapGuidelines","getElementGuidelineDist","elementPos","elementSize","targetSize","relativePos","groupByElementGuidelines","groupInfos","groupInfo","find","groupElement","groupPos","renderElementGroup","clientSize","snapDigit","snapDistFormat","React","directionName","posName1","posName2","sizeName","scaleDirection1","scaleDirection2","isDisplaySnapDigit","isFirstRenderSize","j","linePos","lineSize","isRenderSize","snapSize","toFixed","key","className","renderSnapPoses","renderGuidelines","targetPos1","targetPos2","getGapGuidelinesToStart","targetSizes","guidelinePos","absGap","gapPos","aPos","bPos","gapSizes","gapGuideline","renderPos","getGapGuidelinesToEnd","minSize","renderGapGuidelines","addBoundGuidelines","verticalSnapPoses","horizontalSnapPoses","externalBounds","verticalInnerBoundPoses","horizontalInnerBoundPoses","innerPos","findIndex","Array","Number","Object","Function","onSnap","css","render","minLeft","minTop","containerPos","externalPoses","snapInfos","hasExternalPoses","externalRect","middle","verticalPosInfos","horizontalPosInfos","elementHorizontalGroup","elementVerticalGroup","gapVerticalGuidelines","gapHorizontalGuidelines","allGuidelines","elements","gaps","dragEnd","dragControlCondition","rotatableDragControlCondtion","dragControlStart","dragControl","dragControlEnd","dragGroupStart","dragGroup","dragGroupEnd","dragGroupControlStart","dragGroupControl","dragGroupControlEnd","throttleDrag","startDragRotate","edgeDraggable","onDragStart","onDrag","onDragEnd","onDragGroupStart","onDragGroup","onDragGroupEnd","dragInfo","targetGesto","prevDist","prevBeforeDist","set","startRect","parentMoveable","dragRotateRad","ry","cos","rx","sin","passDeltaX","passDistX","passDeltaY","passDistY","beforeTranslate","beforeDist","beforeDelta","isControl","requestStart","requestEnd","setRotateStartInfo","startAbsoluteOrigin","prevDeg","prevSnapDeg","startDeg","loop","getParentDeg","moveableRect","parentDist","getDeg","throttleRotate","prevLoop","absolutePrevSnapDeg","absoluteDeg","getRotateInfo","getRotationPositions","radPoses","isReverse","rotatable","String","onRotateStart","onRotate","onRotateEnd","onRotateGroupStart","onRotateGroup","onRotateGroupEnd","renderPoses","absoluteInfo","externalRotate","beforeInfo","afterInfo","rotatation","isRotate","groupDelta","targetDirection","_k","_l","beforeRotate","absoluteDelta","absoluteDist","absoluteRotate","absoluteStartDeg","_h","_j","inverseDist","inverseDelta","prevInverseDist","dragGroupControlCondition","parentLeft","parentTop","parentBeforeOrigin","childClient","groupClient","rotateMatrix","distRotate","startRotation","getRotation","deltaRotate","renderControls","defaultDirections","directionMap","directionRotation","renderLine","renderAllDirections","renderDiagonalDirections","resizable","throttleResize","renderDirections","onResizeStart","onResize","onResizeEnd","onResizeGroupStart","onResizeGroup","onResizeGroupEnd","edge","startOffsetWidth","startOffsetHeight","startWidth","startHeight","padding","maxSize","minWidth","minHeight","isWidth","setRatio","ratio","isFinite","setFixedDirection","setMin","setMax","setOrigin","isResize","parentScale","parentKeepRatio","dragClient","sizeDirection","distWidth","distHeight","standardRad","ratioRad","signSize","nextDirection","snapDist","isNoSnap","calculateBoundSize","dragControlAfter","errorWidth","errorHeight","isErrorWidth","isErrorHeight","originalEvents","setDist","createRotateMatrix","originalX","originalY","deltaWidth","deltaHeight","scalable","throttleScale","onScaleStart","onScale","onScaleEnd","onScaleGroupStart","onScaleGroup","onScaleGroupEnd","isScale","dragDist","stateDirection","snapHeight","snapWidth","moveableScale","getMiddleLinePos","getTriangleRad","rad1","rad2","isValidPos","poses1","poses2","pi","warpable","onWarpStart","onWarp","onWarpEnd","linePosFrom1","linePosFrom2","linePosFrom3","linePosFrom4","linePosTo1","linePosTo2","linePosTo3","linePosTo4","inputTarget","warpTargetMatrix","targetInverseMatrix","prevMatrix","posIndexes","isWarp","selectedPoses","nearByPoses","h","createWarpMatrix","afterMatrix","totalMatrix","AREA_PIECES","AREA_PIECE","AVOID","restoreStyle","areaElement","removeClass","cssText","renderPieces","dragArea","passDragArea","onClick","onClickGroup","ref","isDragArea","rects","children","nextElementSibling","addClass","getDefaultScrollPosition","scrollContainer","scrollable","scrollThreshold","getScrollPosition","onScroll","onScrollGroup","getContainer","dragScroll","DragScroll","scrollContainerElement","gestoName","on","scrollBy","checkScroll","dragGroupContro","dragGroupControEnd","dragTarget","pinchThreshold","pinchOutside","checkInput","cspNonce","translateZ","paddingDirections","paddingPos1","paddingPos2","paddingPos3","paddingPos4","RADIUS_DIRECTIONS","calculateRatio","sumSize","sumRatio","HORIZONTAL_RADIUS_ORDER","VERTICAL_RADIUS_ORDER","HORIZONTAL_RADIUS_DIRECTIONS","VERTICAL_RADIUS_DIRECTIONS","getRadiusStyles","clipStyles","raws","rawPos","styles","getRadiusRange","horizontalRange","verticalRange","clipPose","getRadiusValues","minCounts","splitIndex","splitLength","horizontalValues","verticalValues","nwValue","neValue","seValue","swValue","wnValue","enValue","esValue","_m","wsValue","horizontalRawPoses","convertUnitSize","verticalRawPoses","nextHorizontalPoses","nextVerticalPoses","raw","removeRadiusPos","startIndex","radiuslIndex","deleteCount","addRadiusPos","horizontalIndex","verticalIndex","radiusX","radiusY","startVerticalIndex","splitRadiusPoses","horizontals","verticals","CLIP_DIRECTIONS","CLIP_RECT_DIRECTIONS","getClipStyles","clipPath","clipRelative","clipType","clipPoses","isCircle","subWidth","subHeight","getRectPoses","xs","ys","dirx","diry","getClipPath","defaultClip","customClip","clipText","clip","clipPrefix","splitter","splitComma","xPos","yPos","radiusX_1","radiusY_1","radius","xRadius","yRadius","centerPos_1","roundIndex","rectLength","radiusValues","_o","_p","_q","_r","nextRight","nextBottom","radiusPoses","_s","posValue","addClipPath","clipEventType","clipStyle","removeClipPath","clippable","defaultClipPath","customClipPath","clipArea","dragWithClip","clipTargetBounds","clipVerticalGuidelines","clipHorizontalGuidelines","clipSnapThreshold","onClipStart","onClip","onClipEnd","clipPathState","snapBoundInfos","calculatedPos","controls","isInset","isPolygon","linePoses_1","to","from","clipLeft","clipTop","ellipseClipPath","piece","areaPoses","allWidth","allHeight","allLeft_1","allTop_1","directionType","snapPos1","snapPos2","isClipStart","isLine","isArea","draggableData","isDragWithTarget","isAll","guidePoses","isEllipse","guideRect","guideXPoses","guideYPoses","rectPoses","rectDists_1","snapOffsetY","snapOffsetX","distSnapX","distSnapY","nextClipStyles","originDraggable","originRelative","onDragOriginStart","onDragOrigin","onDragOriginEnd","startOrigin","startTargetOrigin","isDragOrigin","distOrigin","nextRect","dragDelta","deltaOrigin","addBorderRadius","lineIndex","horizontalsLength","verticalsLength","getBorderRadius","borderRadius","triggerRoundEvent","roundRelative","borderRadiusState","roundable","minRoundControls","maxRoundControls","roundClickable","onRoundStart","onRound","onRoundEnd","verticalCount","horizontalCount","isDisplay","display","controlIndex","isRound","selectedControlPose","selectedVertical","selectedHorizontal","pose","poseDist","onBeforeRenderStart","onBeforeRender","onBeforeRenderEnd","onBeforeRenderGroupStart","onBeforeRenderGroup","onBeforeRenderGroupEnd","cssMatrix","resetTransform","fillDragStartParams","fillDragParams","_this","onRenderStart","onRender","onRenderEnd","onRenderGroupStart","onRenderGroup","onRenderGroupEnd","triggerAble","ableType","eventOperation","eventAffix","eventType","requestInstant","conditionName","isFirstStart","controlGesto","isGroup","BeforeRenderable","Renderable","requestAble_1","elementFromPoint","results","nextDatas","isEventStart","isUpdate","isForceEnd","isUnmounted","forceUpdate","getTargetAbleGesto","moveableTarget","controlBox","getElement","startFunc","eventTarget","isMoveableElement","getAbleGesto","conditionFunctions","Gesto","stop","addEventListener","onEvent","removeEventListener","__extends","parentPosition","propsTarget","ControlBoxElement","checkUpdate","updateRenderPoses","stateTarget","groupTargets","isDragging","ableAttributes","Renderer","createElement","getEnabledAbles","renderAbles","wrapperMoveable","updateEvent","updateNativeEvents","updateCheckInput","prevProps","manager","destroy","triggerDragStart","Element","clientRect","points","fitPoints","getOverlapSize","totalSize","getAreaSize","isInside","isTarget","isSetState","updateState","useDragArea","prevTarget","prevDragArea","isTargetChanged","eventKeys","getKeys","hasAbles","EventManager","setAbles","controlBoxElement","hasTargetAble","targetAbles","hasControlAble","isUnset","unsetAbles","statePos","param","isInstant","requsetAble","ableRequester","requester","ableParam","componentWillUnmount","stateLeft","stateTop","stateContainer","updateAbles","isChanged","tag","customStyleMap","customStyledMap","styled","always","nextState","setState","MoveableManager","cssStyled","defaultGroupRotate","defaultGroupOrigin","refs","containsTarget","contains","targetIndex","parentTarget","getDraggableEvent","individualGroupable","MOVEABLE_ABLES","Default","Snappable","Pinchable","Rotatable","Resizable","Scalable","Warpable","Scrollable","Padding","Origin","OriginDraggable","Clippable","Roundable","Groupable","IndividualGroupable","Clickable","DragArea","MOVEABLE_EVENTS_PROPS_MAP","MOVEABLE_PROPS_MAP","MOVEABLE_EVENTS_MAP","MOVEABLE_EVENTS","keys","MOVEABLE_PROPS","getMaxPos","getMinPos","getGroupRect","moveablePoses","minX","minY","groupWidth","groupHeight","fixedRotation","rad_1","a1_1","tan","a2_1","b1MinMax_1","b2MinMax_1","b1","b2","rotatePoses","changedWidth","ChildrenDiffer","nextTarget","isContainerChanged","differ","update","added","changed","removed","updateGroup","_super","MoveableGroup","defaultProps","InitialMoveable","cssMap","getTotalAbles","text","defaultStyled","prefixCSS","defaultAbles","moveableContructor","constructor","makeStyled","userAbles","userProps","refTargets","totalAbles","nextProps","MoveableIndividualGroup","updateRefs","isReset","nextSelectorMap","querySelectorAll","__decorate","withMethods","Moveable","makeMoveable","others"],"mappings":"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"}