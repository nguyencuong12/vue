{"remainingRequest":"E:\\Cuong\\vueProject\\vue2_setup\\vue2\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\Cuong\\vueProject\\vue2_setup\\vue2\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Cuong\\vueProject\\vue2_setup\\vue2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Cuong\\vueProject\\vue2_setup\\vue2\\src\\views\\Template\\template-create.vue?vue&type=template&id=27dc3158&scoped=true&","dependencies":[{"path":"E:\\Cuong\\vueProject\\vue2_setup\\vue2\\src\\views\\Template\\template-create.vue","mtime":1610590415954},{"path":"E:\\Cuong\\vueProject\\vue2_setup\\vue2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Cuong\\vueProject\\vue2_setup\\vue2\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\Cuong\\vueProject\\vue2_setup\\vue2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Cuong\\vueProject\\vue2_setup\\vue2\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}